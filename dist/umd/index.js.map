{"version":3,"file":"index.js","sources":["../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/version.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/disclose-version.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/constants.js","../../node_modules/.pnpm/esm-env@1.2.2/node_modules/esm-env/false.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/constants.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/shared/utils.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/task.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/reactivity/equality.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/errors.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/flags/index.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/reactivity/sources.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/reactivity/deriveds.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/runtime.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/hydration.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/proxy.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/operations.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/reactivity/effects.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/context.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/utils.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/bindings/shared.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/events.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/reconciler.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/template.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/render.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/blocks/each.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/blocks/html.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/css.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/actions.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/attributes.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/class.js","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/client/dom/elements/bindings/this.js","../../node_modules/.pnpm/@svelte-put+movable@4.0.0_svelte@5.19.9/node_modules/@svelte-put/movable/src/movable.js","../../src/assets/img/close.svg?raw","../../node_modules/.pnpm/svelte@5.19.9/node_modules/svelte/src/internal/flags/legacy.js","../../src/lib/Modal/Modal.svelte","../../src/lib/Menu/Menu.svelte","../../src/lib/index.svelte","../../src/lib/index.ts"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.19.9';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte ||= { v: new Set() }).v.add(PUBLIC_VERSION);\n","export const EACH_ITEM_REACTIVE = 1;\nexport const EACH_INDEX_REACTIVE = 1 << 1;\n/** See EachBlock interface metadata.is_controlled for an explanation what this is */\nexport const EACH_IS_CONTROLLED = 1 << 2;\nexport const EACH_IS_ANIMATED = 1 << 3;\nexport const EACH_ITEM_IMMUTABLE = 1 << 4;\n\nexport const PROPS_IS_IMMUTABLE = 1;\nexport const PROPS_IS_RUNES = 1 << 1;\nexport const PROPS_IS_UPDATED = 1 << 2;\nexport const PROPS_IS_BINDABLE = 1 << 3;\nexport const PROPS_IS_LAZY_INITIAL = 1 << 4;\n\nexport const TRANSITION_IN = 1;\nexport const TRANSITION_OUT = 1 << 1;\nexport const TRANSITION_GLOBAL = 1 << 2;\n\nexport const TEMPLATE_FRAGMENT = 1;\nexport const TEMPLATE_USE_IMPORT_NODE = 1 << 1;\n\nexport const HYDRATION_START = '[';\n/** used to indicate that an `{:else}...` block was rendered */\nexport const HYDRATION_START_ELSE = '[!';\nexport const HYDRATION_END = ']';\nexport const HYDRATION_ERROR = {};\n\nexport const ELEMENT_IS_NAMESPACED = 1;\nexport const ELEMENT_PRESERVE_ATTRIBUTE_CASE = 1 << 1;\n\nexport const UNINITIALIZED = Symbol();\n\n// Dev-time component properties\nexport const FILENAME = Symbol('filename');\nexport const HMR = Symbol('hmr');\n\nexport const NAMESPACE_SVG = 'http://www.w3.org/2000/svg';\nexport const NAMESPACE_MATHML = 'http://www.w3.org/1998/Math/MathML';\n\n// we use a list of ignorable runtime warnings because not every runtime warning\n// can be ignored and we want to keep the validation for svelte-ignore in place\nexport const IGNORABLE_RUNTIME_WARNINGS = /** @type {const} */ ([\n\t'state_snapshot_uncloneable',\n\t'binding_property_non_reactive',\n\t'hydration_attribute_changed',\n\t'hydration_html_changed',\n\t'ownership_invalid_binding',\n\t'ownership_invalid_mutation'\n]);\n\n/**\n * Whitespace inside one of these elements will not result in\n * a whitespace node being created in any circumstances. (This\n * list is almost certainly very incomplete)\n * TODO this is currently unused\n */\nexport const ELEMENTS_WITHOUT_TEXT = ['audio', 'datalist', 'dl', 'optgroup', 'select', 'video'];\n","export default false;\n","export const DERIVED = 1 << 1;\nexport const EFFECT = 1 << 2;\nexport const RENDER_EFFECT = 1 << 3;\nexport const BLOCK_EFFECT = 1 << 4;\nexport const BRANCH_EFFECT = 1 << 5;\nexport const ROOT_EFFECT = 1 << 6;\nexport const BOUNDARY_EFFECT = 1 << 7;\nexport const UNOWNED = 1 << 8;\nexport const DISCONNECTED = 1 << 9;\nexport const CLEAN = 1 << 10;\nexport const DIRTY = 1 << 11;\nexport const MAYBE_DIRTY = 1 << 12;\nexport const INERT = 1 << 13;\nexport const DESTROYED = 1 << 14;\nexport const EFFECT_RAN = 1 << 15;\n/** 'Transparent' effects do not create a transition boundary */\nexport const EFFECT_TRANSPARENT = 1 << 16;\n/** Svelte 4 legacy mode props need to be handled with deriveds and be recognized elsewhere, hence the dedicated flag */\nexport const LEGACY_DERIVED_PROP = 1 << 17;\nexport const INSPECT_EFFECT = 1 << 18;\nexport const HEAD_EFFECT = 1 << 19;\nexport const EFFECT_HAS_DERIVED = 1 << 20;\n\nexport const STATE_SYMBOL = Symbol('$state');\nexport const STATE_SYMBOL_METADATA = Symbol('$state metadata');\nexport const LEGACY_PROPS = Symbol('legacy props');\nexport const LOADING_ATTR_SYMBOL = Symbol('');\n","// Store the references to globals in case someone tries to monkey patch these, causing the below\n// to de-opt (this occurs often when using popular extensions).\nexport var is_array = Array.isArray;\nexport var index_of = Array.prototype.indexOf;\nexport var array_from = Array.from;\nexport var object_keys = Object.keys;\nexport var define_property = Object.defineProperty;\nexport var get_descriptor = Object.getOwnPropertyDescriptor;\nexport var get_descriptors = Object.getOwnPropertyDescriptors;\nexport var object_prototype = Object.prototype;\nexport var array_prototype = Array.prototype;\nexport var get_prototype_of = Object.getPrototypeOf;\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\nexport const noop = () => {};\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n\n/**\n * @template [T=any]\n * @param {any} value\n * @returns {value is PromiseLike<T>}\n */\nexport function is_promise(value) {\n\treturn typeof value?.then === 'function';\n}\n\n/** @param {Function} fn */\nexport function run(fn) {\n\treturn fn();\n}\n\n/** @param {Array<() => void>} arr */\nexport function run_all(arr) {\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tarr[i]();\n\t}\n}\n\n/**\n * TODO replace with Promise.withResolvers once supported widely enough\n * @template T\n */\nexport function deferred() {\n\t/** @type {(value: T) => void} */\n\tvar resolve;\n\n\t/** @type {(reason: any) => void} */\n\tvar reject;\n\n\t/** @type {Promise<T>} */\n\tvar promise = new Promise((res, rej) => {\n\t\tresolve = res;\n\t\treject = rej;\n\t});\n\n\t// @ts-expect-error\n\treturn { promise, resolve, reject };\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {V | (() => V)} fallback\n * @param {boolean} [lazy]\n * @returns {V}\n */\nexport function fallback(value, fallback, lazy = false) {\n\treturn value === undefined\n\t\t? lazy\n\t\t\t? /** @type {() => V} */ (fallback)()\n\t\t\t: /** @type {V} */ (fallback)\n\t\t: value;\n}\n","import { run_all } from '../../shared/utils.js';\n\n// Fallback for when requestIdleCallback is not available\nexport const request_idle_callback =\n\ttypeof requestIdleCallback === 'undefined'\n\t\t? (/** @type {() => void} */ cb) => setTimeout(cb, 1)\n\t\t: requestIdleCallback;\n\nlet is_micro_task_queued = false;\nlet is_idle_task_queued = false;\n\n/** @type {Array<() => void>} */\nlet current_queued_micro_tasks = [];\n/** @type {Array<() => void>} */\nlet current_queued_idle_tasks = [];\n\nfunction process_micro_tasks() {\n\tis_micro_task_queued = false;\n\tconst tasks = current_queued_micro_tasks.slice();\n\tcurrent_queued_micro_tasks = [];\n\trun_all(tasks);\n}\n\nfunction process_idle_tasks() {\n\tis_idle_task_queued = false;\n\tconst tasks = current_queued_idle_tasks.slice();\n\tcurrent_queued_idle_tasks = [];\n\trun_all(tasks);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_micro_task(fn) {\n\tif (!is_micro_task_queued) {\n\t\tis_micro_task_queued = true;\n\t\tqueueMicrotask(process_micro_tasks);\n\t}\n\tcurrent_queued_micro_tasks.push(fn);\n}\n\n/**\n * @param {() => void} fn\n */\nexport function queue_idle_task(fn) {\n\tif (!is_idle_task_queued) {\n\t\tis_idle_task_queued = true;\n\t\trequest_idle_callback(process_idle_tasks);\n\t}\n\tcurrent_queued_idle_tasks.push(fn);\n}\n\n/**\n * Synchronously run any queued tasks.\n */\nexport function flush_tasks() {\n\tif (is_micro_task_queued) {\n\t\tprocess_micro_tasks();\n\t}\n\tif (is_idle_task_queued) {\n\t\tprocess_idle_tasks();\n\t}\n}\n","/** @import { Equals } from '#client' */\n/** @type {Equals} */\nexport function equals(value) {\n\treturn value === this.v;\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function safe_not_equal(a, b) {\n\treturn a != a\n\t\t? b == b\n\t\t: a !== b || (a !== null && typeof a === 'object') || typeof a === 'function';\n}\n\n/**\n * @param {unknown} a\n * @param {unknown} b\n * @returns {boolean}\n */\nexport function not_equal(a, b) {\n\treturn a !== b;\n}\n\n/** @type {Equals} */\nexport function safe_equals(value) {\n\treturn !safe_not_equal(value, this.v);\n}\n","/* This file is generated by scripts/process-messages/index.js. Do not edit! */\n\nimport { DEV } from 'esm-env';\n\n/**\n * Using `bind:value` together with a checkbox input is not allowed. Use `bind:checked` instead\n * @returns {never}\n */\nexport function bind_invalid_checkbox_value() {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_checkbox_value\\nUsing \\`bind:value\\` together with a checkbox input is not allowed. Use \\`bind:checked\\` instead\\nhttps://svelte.dev/e/bind_invalid_checkbox_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_checkbox_value`);\n\t}\n}\n\n/**\n * Component %component% has an export named `%key%` that a consumer component is trying to access using `bind:%key%`, which is disallowed. Instead, use `bind:this` (e.g. `<%name% bind:this={component} />`) and then access the property on the bound component instance (e.g. `component.%key%`)\n * @param {string} component\n * @param {string} key\n * @param {string} name\n * @returns {never}\n */\nexport function bind_invalid_export(component, key, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_invalid_export\\nComponent ${component} has an export named \\`${key}\\` that a consumer component is trying to access using \\`bind:${key}\\`, which is disallowed. Instead, use \\`bind:this\\` (e.g. \\`<${name} bind:this={component} />\\`) and then access the property on the bound component instance (e.g. \\`component.${key}\\`)\\nhttps://svelte.dev/e/bind_invalid_export`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_invalid_export`);\n\t}\n}\n\n/**\n * A component is attempting to bind to a non-bindable property `%key%` belonging to %component% (i.e. `<%name% bind:%key%={...}>`). To mark a property as bindable: `let { %key% = $bindable() } = $props()`\n * @param {string} key\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function bind_not_bindable(key, component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`bind_not_bindable\\nA component is attempting to bind to a non-bindable property \\`${key}\\` belonging to ${component} (i.e. \\`<${name} bind:${key}={...}>\\`). To mark a property as bindable: \\`let { ${key} = $bindable() } = $props()\\`\\nhttps://svelte.dev/e/bind_not_bindable`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/bind_not_bindable`);\n\t}\n}\n\n/**\n * %parent% called `%method%` on an instance of %component%, which is no longer valid in Svelte 5\n * @param {string} parent\n * @param {string} method\n * @param {string} component\n * @returns {never}\n */\nexport function component_api_changed(parent, method, component) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_changed\\n${parent} called \\`${method}\\` on an instance of ${component}, which is no longer valid in Svelte 5\\nhttps://svelte.dev/e/component_api_changed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_changed`);\n\t}\n}\n\n/**\n * Attempted to instantiate %component% with `new %name%`, which is no longer valid in Svelte 5. If this component is not under your control, set the `compatibility.componentApi` compiler option to `4` to keep it working.\n * @param {string} component\n * @param {string} name\n * @returns {never}\n */\nexport function component_api_invalid_new(component, name) {\n\tif (DEV) {\n\t\tconst error = new Error(`component_api_invalid_new\\nAttempted to instantiate ${component} with \\`new ${name}\\`, which is no longer valid in Svelte 5. If this component is not under your control, set the \\`compatibility.componentApi\\` compiler option to \\`4\\` to keep it working.\\nhttps://svelte.dev/e/component_api_invalid_new`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/component_api_invalid_new`);\n\t}\n}\n\n/**\n * A derived value cannot reference itself recursively\n * @returns {never}\n */\nexport function derived_references_self() {\n\tif (DEV) {\n\t\tconst error = new Error(`derived_references_self\\nA derived value cannot reference itself recursively\\nhttps://svelte.dev/e/derived_references_self`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/derived_references_self`);\n\t}\n}\n\n/**\n * Keyed each block has duplicate key `%value%` at indexes %a% and %b%\n * @param {string} a\n * @param {string} b\n * @param {string | undefined | null} [value]\n * @returns {never}\n */\nexport function each_key_duplicate(a, b, value) {\n\tif (DEV) {\n\t\tconst error = new Error(`each_key_duplicate\\n${value ? `Keyed each block has duplicate key \\`${value}\\` at indexes ${a} and ${b}` : `Keyed each block has duplicate key at indexes ${a} and ${b}`}\\nhttps://svelte.dev/e/each_key_duplicate`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/each_key_duplicate`);\n\t}\n}\n\n/**\n * `%rune%` cannot be used inside an effect cleanup function\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_in_teardown(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_teardown\\n\\`${rune}\\` cannot be used inside an effect cleanup function\\nhttps://svelte.dev/e/effect_in_teardown`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_teardown`);\n\t}\n}\n\n/**\n * Effect cannot be created inside a `$derived` value that was not itself created inside an effect\n * @returns {never}\n */\nexport function effect_in_unowned_derived() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_in_unowned_derived\\nEffect cannot be created inside a \\`$derived\\` value that was not itself created inside an effect\\nhttps://svelte.dev/e/effect_in_unowned_derived`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_in_unowned_derived`);\n\t}\n}\n\n/**\n * `%rune%` can only be used inside an effect (e.g. during component initialisation)\n * @param {string} rune\n * @returns {never}\n */\nexport function effect_orphan(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_orphan\\n\\`${rune}\\` can only be used inside an effect (e.g. during component initialisation)\\nhttps://svelte.dev/e/effect_orphan`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_orphan`);\n\t}\n}\n\n/**\n * Maximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\n * @returns {never}\n */\nexport function effect_update_depth_exceeded() {\n\tif (DEV) {\n\t\tconst error = new Error(`effect_update_depth_exceeded\\nMaximum update depth exceeded. This can happen when a reactive block or effect repeatedly sets a new value. Svelte limits the number of nested updates to prevent infinite loops\\nhttps://svelte.dev/e/effect_update_depth_exceeded`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/effect_update_depth_exceeded`);\n\t}\n}\n\n/**\n * Failed to hydrate the application\n * @returns {never}\n */\nexport function hydration_failed() {\n\tif (DEV) {\n\t\tconst error = new Error(`hydration_failed\\nFailed to hydrate the application\\nhttps://svelte.dev/e/hydration_failed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/hydration_failed`);\n\t}\n}\n\n/**\n * Could not `{@render}` snippet due to the expression being `null` or `undefined`. Consider using optional chaining `{@render snippet?.()}`\n * @returns {never}\n */\nexport function invalid_snippet() {\n\tif (DEV) {\n\t\tconst error = new Error(`invalid_snippet\\nCould not \\`{@render}\\` snippet due to the expression being \\`null\\` or \\`undefined\\`. Consider using optional chaining \\`{@render snippet?.()}\\`\\nhttps://svelte.dev/e/invalid_snippet`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/invalid_snippet`);\n\t}\n}\n\n/**\n * `%name%(...)` cannot be used in runes mode\n * @param {string} name\n * @returns {never}\n */\nexport function lifecycle_legacy_only(name) {\n\tif (DEV) {\n\t\tconst error = new Error(`lifecycle_legacy_only\\n\\`${name}(...)\\` cannot be used in runes mode\\nhttps://svelte.dev/e/lifecycle_legacy_only`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/lifecycle_legacy_only`);\n\t}\n}\n\n/**\n * Cannot do `bind:%key%={undefined}` when `%key%` has a fallback value\n * @param {string} key\n * @returns {never}\n */\nexport function props_invalid_value(key) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_invalid_value\\nCannot do \\`bind:${key}={undefined}\\` when \\`${key}\\` has a fallback value\\nhttps://svelte.dev/e/props_invalid_value`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_invalid_value`);\n\t}\n}\n\n/**\n * Rest element properties of `$props()` such as `%property%` are readonly\n * @param {string} property\n * @returns {never}\n */\nexport function props_rest_readonly(property) {\n\tif (DEV) {\n\t\tconst error = new Error(`props_rest_readonly\\nRest element properties of \\`$props()\\` such as \\`${property}\\` are readonly\\nhttps://svelte.dev/e/props_rest_readonly`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/props_rest_readonly`);\n\t}\n}\n\n/**\n * The `%rune%` rune is only available inside `.svelte` and `.svelte.js/ts` files\n * @param {string} rune\n * @returns {never}\n */\nexport function rune_outside_svelte(rune) {\n\tif (DEV) {\n\t\tconst error = new Error(`rune_outside_svelte\\nThe \\`${rune}\\` rune is only available inside \\`.svelte\\` and \\`.svelte.js/ts\\` files\\nhttps://svelte.dev/e/rune_outside_svelte`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/rune_outside_svelte`);\n\t}\n}\n\n/**\n * Property descriptors defined on `$state` objects must contain `value` and always be `enumerable`, `configurable` and `writable`.\n * @returns {never}\n */\nexport function state_descriptors_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_descriptors_fixed\\nProperty descriptors defined on \\`$state\\` objects must contain \\`value\\` and always be \\`enumerable\\`, \\`configurable\\` and \\`writable\\`.\\nhttps://svelte.dev/e/state_descriptors_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_descriptors_fixed`);\n\t}\n}\n\n/**\n * Cannot set prototype of `$state` object\n * @returns {never}\n */\nexport function state_prototype_fixed() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_prototype_fixed\\nCannot set prototype of \\`$state\\` object\\nhttps://svelte.dev/e/state_prototype_fixed`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_prototype_fixed`);\n\t}\n}\n\n/**\n * Reading state that was created inside the same derived is forbidden. Consider using `untrack` to read locally created state\n * @returns {never}\n */\nexport function state_unsafe_local_read() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_local_read\\nReading state that was created inside the same derived is forbidden. Consider using \\`untrack\\` to read locally created state\\nhttps://svelte.dev/e/state_unsafe_local_read`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_local_read`);\n\t}\n}\n\n/**\n * Updating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without `$state`\n * @returns {never}\n */\nexport function state_unsafe_mutation() {\n\tif (DEV) {\n\t\tconst error = new Error(`state_unsafe_mutation\\nUpdating state inside a derived or a template expression is forbidden. If the value should not be reactive, declare it without \\`$state\\`\\nhttps://svelte.dev/e/state_unsafe_mutation`);\n\n\t\terror.name = 'Svelte error';\n\t\tthrow error;\n\t} else {\n\t\tthrow new Error(`https://svelte.dev/e/state_unsafe_mutation`);\n\t}\n}","export let legacy_mode_flag = false;\nexport let tracing_mode_flag = false;\n\nexport function enable_legacy_mode_flag() {\n\tlegacy_mode_flag = true;\n}\n\nexport function enable_tracing_mode_flag() {\n\ttracing_mode_flag = true;\n}\n","/** @import { Derived, Effect, Reaction, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tuntracked_writes,\n\tget,\n\tschedule_effect,\n\tset_untracked_writes,\n\tset_signal_status,\n\tuntrack,\n\tincrement_write_version,\n\tupdate_effect,\n\tderived_sources,\n\tset_derived_sources,\n\tcheck_dirtiness,\n\tset_is_flushing_effect,\n\tis_flushing_effect,\n\tuntracking\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tINSPECT_EFFECT,\n\tUNOWNED,\n\tMAYBE_DIRTY,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT\n} from '../constants.js';\nimport * as e from '../errors.js';\nimport { legacy_mode_flag, tracing_mode_flag } from '../../flags/index.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { component_context, is_runes } from '../context.js';\n\nexport let inspect_effects = new Set();\n\n/**\n * @param {Set<any>} v\n */\nexport function set_inspect_effects(v) {\n\tinspect_effects = v;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {Error | null} [stack]\n * @returns {Source<V>}\n */\nexport function source(v, stack) {\n\t/** @type {Value} */\n\tvar signal = {\n\t\tf: 0, // TODO ideally we could skip this altogether, but it causes type errors\n\t\tv,\n\t\treactions: null,\n\t\tequals,\n\t\trv: 0,\n\t\twv: 0\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = stack ?? get_stack('CreatedAt');\n\t\tsignal.debug = null;\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {V} v\n */\nexport function state(v) {\n\treturn push_derived_source(source(v));\n}\n\n/**\n * @template V\n * @param {V} initial_value\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mutable_source(initial_value, immutable = false) {\n\tconst s = source(initial_value);\n\tif (!immutable) {\n\t\ts.equals = safe_equals;\n\t}\n\n\t// bind the signal to the component context, in case we need to\n\t// track updates to trigger beforeUpdate/afterUpdate callbacks\n\tif (legacy_mode_flag && component_context !== null && component_context.l !== null) {\n\t\t(component_context.l.s ??= []).push(s);\n\t}\n\n\treturn s;\n}\n\n/**\n * @template V\n * @param {V} v\n * @param {boolean} [immutable]\n * @returns {Source<V>}\n */\nexport function mutable_state(v, immutable = false) {\n\treturn push_derived_source(mutable_source(v, immutable));\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n */\n/*#__NO_SIDE_EFFECTS__*/\nfunction push_derived_source(source) {\n\tif (active_reaction !== null && !untracking && (active_reaction.f & DERIVED) !== 0) {\n\t\tif (derived_sources === null) {\n\t\t\tset_derived_sources([source]);\n\t\t} else {\n\t\t\tderived_sources.push(source);\n\t\t}\n\t}\n\n\treturn source;\n}\n\n/**\n * @template V\n * @param {Value<V>} source\n * @param {V} value\n */\nexport function mutate(source, value) {\n\tset(\n\t\tsource,\n\t\tuntrack(() => get(source))\n\t);\n\treturn value;\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function set(source, value) {\n\tif (\n\t\tactive_reaction !== null &&\n\t\t!untracking &&\n\t\tis_runes() &&\n\t\t(active_reaction.f & (DERIVED | BLOCK_EFFECT)) !== 0 &&\n\t\t// If the source was created locally within the current derived, then\n\t\t// we allow the mutation.\n\t\t(derived_sources === null || !derived_sources.includes(source))\n\t) {\n\t\te.state_unsafe_mutation();\n\t}\n\n\treturn internal_set(source, value);\n}\n\n/**\n * @template V\n * @param {Source<V>} source\n * @param {V} value\n * @returns {V}\n */\nexport function internal_set(source, value) {\n\tif (!source.equals(value)) {\n\t\tvar old_value = source.v;\n\t\tsource.v = value;\n\t\tsource.wv = increment_write_version();\n\n\t\tif (DEV && tracing_mode_flag) {\n\t\t\tsource.updated = get_stack('UpdatedAt');\n\t\t\tif (active_effect != null) {\n\t\t\t\tsource.trace_need_increase = true;\n\t\t\t\tsource.trace_v ??= old_value;\n\t\t\t}\n\t\t}\n\n\t\tmark_reactions(source, DIRTY);\n\n\t\t// It's possible that the current reaction might not have up-to-date dependencies\n\t\t// whilst it's actively running. So in the case of ensuring it registers the reaction\n\t\t// properly for itself, we need to ensure the current effect actually gets\n\t\t// scheduled. i.e: `$effect(() => x++)`\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tactive_effect !== null &&\n\t\t\t(active_effect.f & CLEAN) !== 0 &&\n\t\t\t(active_effect.f & (BRANCH_EFFECT | ROOT_EFFECT)) === 0\n\t\t) {\n\t\t\tif (untracked_writes === null) {\n\t\t\t\tset_untracked_writes([source]);\n\t\t\t} else {\n\t\t\t\tuntracked_writes.push(source);\n\t\t\t}\n\t\t}\n\n\t\tif (DEV && inspect_effects.size > 0) {\n\t\t\tconst inspects = Array.from(inspect_effects);\n\t\t\tvar previously_flushing_effect = is_flushing_effect;\n\t\t\tset_is_flushing_effect(true);\n\t\t\ttry {\n\t\t\t\tfor (const effect of inspects) {\n\t\t\t\t\t// Mark clean inspect-effects as maybe dirty and then check their dirtiness\n\t\t\t\t\t// instead of just updating the effects - this way we avoid overfiring.\n\t\t\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t\t\t}\n\t\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\t\tupdate_effect(effect);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t\t}\n\t\t\tinspect_effects.clear();\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update(source, d = 1) {\n\tvar value = get(source);\n\tvar result = d === 1 ? value++ : value--;\n\n\tset(source, value);\n\n\t// @ts-expect-error\n\treturn result;\n}\n\n/**\n * @template {number | bigint} T\n * @param {Source<T>} source\n * @param {1 | -1} [d]\n * @returns {T}\n */\nexport function update_pre(source, d = 1) {\n\tvar value = get(source);\n\n\t// @ts-expect-error\n\treturn set(source, d === 1 ? ++value : --value);\n}\n\n/**\n * @param {Value} signal\n * @param {number} status should be DIRTY or MAYBE_DIRTY\n * @returns {void}\n */\nfunction mark_reactions(signal, status) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tvar runes = is_runes();\n\tvar length = reactions.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tvar flags = reaction.f;\n\n\t\t// Skip any effects that are already dirty\n\t\tif ((flags & DIRTY) !== 0) continue;\n\n\t\t// In legacy mode, skip the current effect to prevent infinite loops\n\t\tif (!runes && reaction === active_effect) continue;\n\n\t\t// Inspect effects need to run immediately, so that the stack trace makes sense\n\t\tif (DEV && (flags & INSPECT_EFFECT) !== 0) {\n\t\t\tinspect_effects.add(reaction);\n\t\t\tcontinue;\n\t\t}\n\n\t\tset_signal_status(reaction, status);\n\n\t\t// If the signal a) was previously clean or b) is an unowned derived, then mark it\n\t\tif ((flags & (CLEAN | UNOWNED)) !== 0) {\n\t\t\tif ((flags & DERIVED) !== 0) {\n\t\t\t\tmark_reactions(/** @type {Derived} */ (reaction), MAYBE_DIRTY);\n\t\t\t} else {\n\t\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { Derived, Effect } from '#client' */\nimport { DEV } from 'esm-env';\nimport {\n\tCLEAN,\n\tDERIVED,\n\tDESTROYED,\n\tDIRTY,\n\tEFFECT_HAS_DERIVED,\n\tMAYBE_DIRTY,\n\tUNOWNED\n} from '../constants.js';\nimport {\n\tactive_reaction,\n\tactive_effect,\n\tremove_reactions,\n\tset_signal_status,\n\tskip_reaction,\n\tupdate_reaction,\n\tincrement_write_version,\n\tset_active_effect\n} from '../runtime.js';\nimport { equals, safe_equals } from './equality.js';\nimport * as e from '../errors.js';\nimport { destroy_effect } from './effects.js';\nimport { inspect_effects, set_inspect_effects } from './sources.js';\nimport { get_stack } from '../dev/tracing.js';\nimport { tracing_mode_flag } from '../../flags/index.js';\nimport { component_context } from '../context.js';\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived(fn) {\n\tvar flags = DERIVED | DIRTY;\n\tvar parent_derived =\n\t\tactive_reaction !== null && (active_reaction.f & DERIVED) !== 0\n\t\t\t? /** @type {Derived} */ (active_reaction)\n\t\t\t: null;\n\n\tif (active_effect === null || (parent_derived !== null && (parent_derived.f & UNOWNED) !== 0)) {\n\t\tflags |= UNOWNED;\n\t} else {\n\t\t// Since deriveds are evaluated lazily, any effects created inside them are\n\t\t// created too late to ensure that the parent effect is added to the tree\n\t\tactive_effect.f |= EFFECT_HAS_DERIVED;\n\t}\n\n\t/** @type {Derived<V>} */\n\tconst signal = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\teffects: null,\n\t\tequals,\n\t\tf: flags,\n\t\tfn,\n\t\treactions: null,\n\t\trv: 0,\n\t\tv: /** @type {V} */ (null),\n\t\twv: 0,\n\t\tparent: parent_derived ?? active_effect\n\t};\n\n\tif (DEV && tracing_mode_flag) {\n\t\tsignal.created = get_stack('CreatedAt');\n\t}\n\n\treturn signal;\n}\n\n/**\n * @template V\n * @param {() => V} fn\n * @returns {Derived<V>}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function derived_safe_equal(fn) {\n\tconst signal = derived(fn);\n\tsignal.equals = safe_equals;\n\treturn signal;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function destroy_derived_effects(derived) {\n\tvar effects = derived.effects;\n\n\tif (effects !== null) {\n\t\tderived.effects = null;\n\n\t\tfor (var i = 0; i < effects.length; i += 1) {\n\t\t\tdestroy_effect(/** @type {Effect} */ (effects[i]));\n\t\t}\n\t}\n}\n\n/**\n * The currently updating deriveds, used to detect infinite recursion\n * in dev mode and provide a nicer error than 'too much recursion'\n * @type {Derived[]}\n */\nlet stack = [];\n\n/**\n * @param {Derived} derived\n * @returns {Effect | null}\n */\nfunction get_derived_parent_effect(derived) {\n\tvar parent = derived.parent;\n\twhile (parent !== null) {\n\t\tif ((parent.f & DERIVED) === 0) {\n\t\t\treturn /** @type {Effect} */ (parent);\n\t\t}\n\t\tparent = parent.parent;\n\t}\n\treturn null;\n}\n\n/**\n * @template T\n * @param {Derived} derived\n * @returns {T}\n */\nexport function execute_derived(derived) {\n\tvar value;\n\tvar prev_active_effect = active_effect;\n\n\tset_active_effect(get_derived_parent_effect(derived));\n\n\tif (DEV) {\n\t\tlet prev_inspect_effects = inspect_effects;\n\t\tset_inspect_effects(new Set());\n\t\ttry {\n\t\t\tif (stack.includes(derived)) {\n\t\t\t\te.derived_references_self();\n\t\t\t}\n\n\t\t\tstack.push(derived);\n\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t\tset_inspect_effects(prev_inspect_effects);\n\t\t\tstack.pop();\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tdestroy_derived_effects(derived);\n\t\t\tvalue = update_reaction(derived);\n\t\t} finally {\n\t\t\tset_active_effect(prev_active_effect);\n\t\t}\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {Derived} derived\n * @returns {void}\n */\nexport function update_derived(derived) {\n\tvar value = execute_derived(derived);\n\tvar status =\n\t\t(skip_reaction || (derived.f & UNOWNED) !== 0) && derived.deps !== null ? MAYBE_DIRTY : CLEAN;\n\n\tset_signal_status(derived, status);\n\n\tif (!derived.equals(value)) {\n\t\tderived.v = value;\n\t\tderived.wv = increment_write_version();\n\t}\n}\n","/** @import { ComponentContext, Derived, Effect, Reaction, Signal, Source, Value } from '#client' */\nimport { DEV } from 'esm-env';\nimport { define_property, get_descriptors, get_prototype_of, index_of } from '../shared/utils.js';\nimport {\n\tdestroy_block_effect_children,\n\tdestroy_effect_children,\n\texecute_effect_teardown,\n\tunlink_effect\n} from './reactivity/effects.js';\nimport {\n\tEFFECT,\n\tRENDER_EFFECT,\n\tDIRTY,\n\tMAYBE_DIRTY,\n\tCLEAN,\n\tDERIVED,\n\tUNOWNED,\n\tDESTROYED,\n\tINERT,\n\tBRANCH_EFFECT,\n\tSTATE_SYMBOL,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tLEGACY_DERIVED_PROP,\n\tDISCONNECTED,\n\tBOUNDARY_EFFECT\n} from './constants.js';\nimport { flush_tasks } from './dom/task.js';\nimport { internal_set } from './reactivity/sources.js';\nimport { destroy_derived_effects, update_derived } from './reactivity/deriveds.js';\nimport * as e from './errors.js';\nimport { FILENAME } from '../../constants.js';\nimport { tracing_mode_flag } from '../flags/index.js';\nimport { tracing_expressions, get_stack } from './dev/tracing.js';\nimport {\n\tcomponent_context,\n\tdev_current_component_function,\n\tis_runes,\n\tset_component_context,\n\tset_dev_current_component_function\n} from './context.js';\n\nconst FLUSH_MICROTASK = 0;\nconst FLUSH_SYNC = 1;\n// Used for DEV time error handling\n/** @param {WeakSet<Error>} value */\nconst handled_errors = new WeakSet();\nexport let is_throwing_error = false;\n\n// Used for controlling the flush of effects.\nlet scheduler_mode = FLUSH_MICROTASK;\n// Used for handling scheduling\nlet is_micro_task_queued = false;\n\n/** @type {Effect | null} */\nlet last_scheduled_effect = null;\n\nexport let is_flushing_effect = false;\nexport let is_destroying_effect = false;\n\n/** @param {boolean} value */\nexport function set_is_flushing_effect(value) {\n\tis_flushing_effect = value;\n}\n\n/** @param {boolean} value */\nexport function set_is_destroying_effect(value) {\n\tis_destroying_effect = value;\n}\n\n// Handle effect queues\n\n/** @type {Effect[]} */\nlet queued_root_effects = [];\n\nlet flush_count = 0;\n/** @type {Effect[]} Stack of effects, dev only */\nlet dev_effect_stack = [];\n// Handle signal reactivity tree dependencies and reactions\n\n/** @type {null | Reaction} */\nexport let active_reaction = null;\n\nexport let untracking = false;\n\n/** @param {null | Reaction} reaction */\nexport function set_active_reaction(reaction) {\n\tactive_reaction = reaction;\n}\n\n/** @type {null | Effect} */\nexport let active_effect = null;\n\n/** @param {null | Effect} effect */\nexport function set_active_effect(effect) {\n\tactive_effect = effect;\n}\n\n/**\n * When sources are created within a derived, we record them so that we can safely allow\n * local mutations to these sources without the side-effect error being invoked unnecessarily.\n * @type {null | Source[]}\n */\nexport let derived_sources = null;\n\n/**\n * @param {Source[] | null} sources\n */\nexport function set_derived_sources(sources) {\n\tderived_sources = sources;\n}\n\n/**\n * The dependencies of the reaction that is currently being executed. In many cases,\n * the dependencies are unchanged between runs, and so this will be `null` unless\n * and until a new dependency is accessed — we track this via `skipped_deps`\n * @type {null | Value[]}\n */\nexport let new_deps = null;\n\nlet skipped_deps = 0;\n\n/**\n * Tracks writes that the effect it's executed in doesn't listen to yet,\n * so that the dependency can be added to the effect later on if it then reads it\n * @type {null | Source[]}\n */\nexport let untracked_writes = null;\n\n/** @param {null | Source[]} value */\nexport function set_untracked_writes(value) {\n\tuntracked_writes = value;\n}\n\n/**\n * @type {number} Used by sources and deriveds for handling updates.\n * Version starts from 1 so that unowned deriveds differentiate between a created effect and a run one for tracing\n **/\nlet write_version = 1;\n\n/** @type {number} Used to version each read of a source of derived to avoid duplicating depedencies inside a reaction */\nlet read_version = 0;\n\n// If we are working with a get() chain that has no active container,\n// to prevent memory leaks, we skip adding the reaction.\nexport let skip_reaction = false;\n// Handle collecting all signals which are read during a specific time frame\n/** @type {Set<Value> | null} */\nexport let captured_signals = null;\n\n/** @param {Set<Value> | null} value */\nexport function set_captured_signals(value) {\n\tcaptured_signals = value;\n}\n\nexport function increment_write_version() {\n\treturn ++write_version;\n}\n\n/**\n * Determines whether a derived or effect is dirty.\n * If it is MAYBE_DIRTY, will set the status to CLEAN\n * @param {Reaction} reaction\n * @returns {boolean}\n */\nexport function check_dirtiness(reaction) {\n\tvar flags = reaction.f;\n\n\tif ((flags & DIRTY) !== 0) {\n\t\treturn true;\n\t}\n\n\tif ((flags & MAYBE_DIRTY) !== 0) {\n\t\tvar dependencies = reaction.deps;\n\t\tvar is_unowned = (flags & UNOWNED) !== 0;\n\n\t\tif (dependencies !== null) {\n\t\t\tvar i;\n\t\t\tvar dependency;\n\t\t\tvar is_disconnected = (flags & DISCONNECTED) !== 0;\n\t\t\tvar is_unowned_connected = is_unowned && active_effect !== null && !skip_reaction;\n\t\t\tvar length = dependencies.length;\n\n\t\t\t// If we are working with a disconnected or an unowned signal that is now connected (due to an active effect)\n\t\t\t// then we need to re-connect the reaction to the dependency\n\t\t\tif (is_disconnected || is_unowned_connected) {\n\t\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\t\t// We always re-add all reactions (even duplicates) if the derived was\n\t\t\t\t\t// previously disconnected, however we don't if it was unowned as we\n\t\t\t\t\t// de-duplicate dependencies in that case\n\t\t\t\t\tif (is_disconnected || !dependency?.reactions?.includes(reaction)) {\n\t\t\t\t\t\t(dependency.reactions ??= []).push(reaction);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (is_disconnected) {\n\t\t\t\t\treaction.f ^= DISCONNECTED;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < length; i++) {\n\t\t\t\tdependency = dependencies[i];\n\n\t\t\t\tif (check_dirtiness(/** @type {Derived} */ (dependency))) {\n\t\t\t\t\tupdate_derived(/** @type {Derived} */ (dependency));\n\t\t\t\t}\n\n\t\t\t\tif (dependency.wv > reaction.wv) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unowned signals should never be marked as clean unless they\n\t\t// are used within an active_effect without skip_reaction\n\t\tif (!is_unowned || (active_effect !== null && !skip_reaction)) {\n\t\t\tset_signal_status(reaction, CLEAN);\n\t\t}\n\t}\n\n\treturn false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n */\nfunction propagate_error(error, effect) {\n\t/** @type {Effect | null} */\n\tvar current = effect;\n\n\twhile (current !== null) {\n\t\tif ((current.f & BOUNDARY_EFFECT) !== 0) {\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tcurrent.fn(error);\n\t\t\t\treturn;\n\t\t\t} catch {\n\t\t\t\t// Remove boundary flag from effect\n\t\t\t\tcurrent.f ^= BOUNDARY_EFFECT;\n\t\t\t}\n\t\t}\n\n\t\tcurrent = current.parent;\n\t}\n\n\tis_throwing_error = false;\n\tthrow error;\n}\n\n/**\n * @param {Effect} effect\n */\nfunction should_rethrow_error(effect) {\n\treturn (\n\t\t(effect.f & DESTROYED) === 0 &&\n\t\t(effect.parent === null || (effect.parent.f & BOUNDARY_EFFECT) === 0)\n\t);\n}\n\nexport function reset_is_throwing_error() {\n\tis_throwing_error = false;\n}\n\n/**\n * @param {unknown} error\n * @param {Effect} effect\n * @param {Effect | null} previous_effect\n * @param {ComponentContext | null} component_context\n */\nexport function handle_error(error, effect, previous_effect, component_context) {\n\tif (is_throwing_error) {\n\t\tif (previous_effect === null) {\n\t\t\tis_throwing_error = false;\n\t\t}\n\n\t\tif (should_rethrow_error(effect)) {\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tif (previous_effect !== null) {\n\t\tis_throwing_error = true;\n\t}\n\n\tif (\n\t\t!DEV ||\n\t\tcomponent_context === null ||\n\t\t!(error instanceof Error) ||\n\t\thandled_errors.has(error)\n\t) {\n\t\tpropagate_error(error, effect);\n\t\treturn;\n\t}\n\n\thandled_errors.add(error);\n\n\tconst component_stack = [];\n\n\tconst effect_name = effect.fn?.name;\n\n\tif (effect_name) {\n\t\tcomponent_stack.push(effect_name);\n\t}\n\n\t/** @type {ComponentContext | null} */\n\tlet current_context = component_context;\n\n\twhile (current_context !== null) {\n\t\tif (DEV) {\n\t\t\t/** @type {string} */\n\t\t\tvar filename = current_context.function?.[FILENAME];\n\n\t\t\tif (filename) {\n\t\t\t\tconst file = filename.split('/').pop();\n\t\t\t\tcomponent_stack.push(file);\n\t\t\t}\n\t\t}\n\n\t\tcurrent_context = current_context.p;\n\t}\n\n\tconst indent = /Firefox/.test(navigator.userAgent) ? '  ' : '\\t';\n\tdefine_property(error, 'message', {\n\t\tvalue: error.message + `\\n${component_stack.map((name) => `\\n${indent}in ${name}`).join('')}\\n`\n\t});\n\tdefine_property(error, 'component_stack', {\n\t\tvalue: component_stack\n\t});\n\n\tconst stack = error.stack;\n\n\t// Filter out internal files from callstack\n\tif (stack) {\n\t\tconst lines = stack.split('\\n');\n\t\tconst new_lines = [];\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tconst line = lines[i];\n\t\t\tif (line.includes('svelte/src/internal')) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tnew_lines.push(line);\n\t\t}\n\t\tdefine_property(error, 'stack', {\n\t\t\tvalue: new_lines.join('\\n')\n\t\t});\n\t}\n\n\tpropagate_error(error, effect);\n\n\tif (should_rethrow_error(effect)) {\n\t\tthrow error;\n\t}\n}\n\n/**\n * @param {Value} signal\n * @param {Effect} effect\n * @param {number} [depth]\n */\nfunction schedule_possible_effect_self_invalidation(signal, effect, depth = 0) {\n\tvar reactions = signal.reactions;\n\tif (reactions === null) return;\n\n\tfor (var i = 0; i < reactions.length; i++) {\n\t\tvar reaction = reactions[i];\n\t\tif ((reaction.f & DERIVED) !== 0) {\n\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t/** @type {Derived} */ (reaction),\n\t\t\t\teffect,\n\t\t\t\tdepth + 1\n\t\t\t);\n\t\t} else if (effect === reaction) {\n\t\t\tif (depth === 0) {\n\t\t\t\tset_signal_status(reaction, DIRTY);\n\t\t\t} else if ((reaction.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(reaction, MAYBE_DIRTY);\n\t\t\t}\n\t\t\tschedule_effect(/** @type {Effect} */ (reaction));\n\t\t}\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} reaction\n * @returns {V}\n */\nexport function update_reaction(reaction) {\n\tvar previous_deps = new_deps;\n\tvar previous_skipped_deps = skipped_deps;\n\tvar previous_untracked_writes = untracked_writes;\n\tvar previous_reaction = active_reaction;\n\tvar previous_skip_reaction = skip_reaction;\n\tvar prev_derived_sources = derived_sources;\n\tvar previous_component_context = component_context;\n\tvar previous_untracking = untracking;\n\tvar flags = reaction.f;\n\n\tnew_deps = /** @type {null | Value[]} */ (null);\n\tskipped_deps = 0;\n\tuntracked_writes = null;\n\tactive_reaction = (flags & (BRANCH_EFFECT | ROOT_EFFECT)) === 0 ? reaction : null;\n\tskip_reaction =\n\t\t(flags & UNOWNED) !== 0 &&\n\t\t(!is_flushing_effect || previous_reaction === null || previous_untracking);\n\n\tderived_sources = null;\n\tset_component_context(reaction.ctx);\n\tuntracking = false;\n\tread_version++;\n\n\ttry {\n\t\tvar result = /** @type {Function} */ (0, reaction.fn)();\n\t\tvar deps = reaction.deps;\n\n\t\tif (new_deps !== null) {\n\t\t\tvar i;\n\n\t\t\tremove_reactions(reaction, skipped_deps);\n\n\t\t\tif (deps !== null && skipped_deps > 0) {\n\t\t\t\tdeps.length = skipped_deps + new_deps.length;\n\t\t\t\tfor (i = 0; i < new_deps.length; i++) {\n\t\t\t\t\tdeps[skipped_deps + i] = new_deps[i];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treaction.deps = deps = new_deps;\n\t\t\t}\n\n\t\t\tif (!skip_reaction) {\n\t\t\t\tfor (i = skipped_deps; i < deps.length; i++) {\n\t\t\t\t\t(deps[i].reactions ??= []).push(reaction);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (deps !== null && skipped_deps < deps.length) {\n\t\t\tremove_reactions(reaction, skipped_deps);\n\t\t\tdeps.length = skipped_deps;\n\t\t}\n\n\t\t// If we're inside an effect and we have untracked writes, then we need to\n\t\t// ensure that if any of those untracked writes result in re-invalidation\n\t\t// of the current effect, then that happens accordingly\n\t\tif (\n\t\t\tis_runes() &&\n\t\t\tuntracked_writes !== null &&\n\t\t\t(reaction.f & (DERIVED | MAYBE_DIRTY | DIRTY)) === 0\n\t\t) {\n\t\t\tfor (i = 0; i < /** @type {Source[]} */ (untracked_writes).length; i++) {\n\t\t\t\tschedule_possible_effect_self_invalidation(\n\t\t\t\t\tuntracked_writes[i],\n\t\t\t\t\t/** @type {Effect} */ (reaction)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t// If we are returning to an previous reaction then\n\t\t// we need to increment the read version to ensure that\n\t\t// any dependencies in this reaction aren't marked with\n\t\t// the same version\n\t\tif (previous_reaction !== null) {\n\t\t\tread_version++;\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tnew_deps = previous_deps;\n\t\tskipped_deps = previous_skipped_deps;\n\t\tuntracked_writes = previous_untracked_writes;\n\t\tactive_reaction = previous_reaction;\n\t\tskip_reaction = previous_skip_reaction;\n\t\tderived_sources = prev_derived_sources;\n\t\tset_component_context(previous_component_context);\n\t\tuntracking = previous_untracking;\n\t}\n}\n\n/**\n * @template V\n * @param {Reaction} signal\n * @param {Value<V>} dependency\n * @returns {void}\n */\nfunction remove_reaction(signal, dependency) {\n\tlet reactions = dependency.reactions;\n\tif (reactions !== null) {\n\t\tvar index = index_of.call(reactions, signal);\n\t\tif (index !== -1) {\n\t\t\tvar new_length = reactions.length - 1;\n\t\t\tif (new_length === 0) {\n\t\t\t\treactions = dependency.reactions = null;\n\t\t\t} else {\n\t\t\t\t// Swap with last element and then remove.\n\t\t\t\treactions[index] = reactions[new_length];\n\t\t\t\treactions.pop();\n\t\t\t}\n\t\t}\n\t}\n\t// If the derived has no reactions, then we can disconnect it from the graph,\n\t// allowing it to either reconnect in the future, or be GC'd by the VM.\n\tif (\n\t\treactions === null &&\n\t\t(dependency.f & DERIVED) !== 0 &&\n\t\t// Destroying a child effect while updating a parent effect can cause a dependency to appear\n\t\t// to be unused, when in fact it is used by the currently-updating parent. Checking `new_deps`\n\t\t// allows us to skip the expensive work of disconnecting and immediately reconnecting it\n\t\t(new_deps === null || !new_deps.includes(dependency))\n\t) {\n\t\tset_signal_status(dependency, MAYBE_DIRTY);\n\t\t// If we are working with a derived that is owned by an effect, then mark it as being\n\t\t// disconnected.\n\t\tif ((dependency.f & (UNOWNED | DISCONNECTED)) === 0) {\n\t\t\tdependency.f ^= DISCONNECTED;\n\t\t}\n\t\t// Disconnect any reactions owned by this reaction\n\t\tdestroy_derived_effects(/** @type {Derived} **/ (dependency));\n\t\tremove_reactions(/** @type {Derived} **/ (dependency), 0);\n\t}\n}\n\n/**\n * @param {Reaction} signal\n * @param {number} start_index\n * @returns {void}\n */\nexport function remove_reactions(signal, start_index) {\n\tvar dependencies = signal.deps;\n\tif (dependencies === null) return;\n\n\tfor (var i = start_index; i < dependencies.length; i++) {\n\t\tremove_reaction(signal, dependencies[i]);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @returns {void}\n */\nexport function update_effect(effect) {\n\tvar flags = effect.f;\n\n\tif ((flags & DESTROYED) !== 0) {\n\t\treturn;\n\t}\n\n\tset_signal_status(effect, CLEAN);\n\n\tvar previous_effect = active_effect;\n\tvar previous_component_context = component_context;\n\n\tactive_effect = effect;\n\n\tif (DEV) {\n\t\tvar previous_component_fn = dev_current_component_function;\n\t\tset_dev_current_component_function(effect.component_function);\n\t}\n\n\ttry {\n\t\tif ((flags & BLOCK_EFFECT) !== 0) {\n\t\t\tdestroy_block_effect_children(effect);\n\t\t} else {\n\t\t\tdestroy_effect_children(effect);\n\t\t}\n\n\t\texecute_effect_teardown(effect);\n\t\tvar teardown = update_reaction(effect);\n\t\teffect.teardown = typeof teardown === 'function' ? teardown : null;\n\t\teffect.wv = write_version;\n\n\t\tvar deps = effect.deps;\n\n\t\t// In DEV, we need to handle a case where $inspect.trace() might\n\t\t// incorrectly state a source dependency has not changed when it has.\n\t\t// That's beacuse that source was changed by the same effect, causing\n\t\t// the versions to match. We can avoid this by incrementing the version\n\t\tif (DEV && tracing_mode_flag && (effect.f & DIRTY) !== 0 && deps !== null) {\n\t\t\tfor (let i = 0; i < deps.length; i++) {\n\t\t\t\tvar dep = deps[i];\n\t\t\t\tif (dep.trace_need_increase) {\n\t\t\t\t\tdep.wv = increment_write_version();\n\t\t\t\t\tdep.trace_need_increase = undefined;\n\t\t\t\t\tdep.trace_v = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (DEV) {\n\t\t\tdev_effect_stack.push(effect);\n\t\t}\n\t} catch (error) {\n\t\thandle_error(error, effect, previous_effect, previous_component_context || effect.ctx);\n\t} finally {\n\t\tactive_effect = previous_effect;\n\n\t\tif (DEV) {\n\t\t\tset_dev_current_component_function(previous_component_fn);\n\t\t}\n\t}\n}\n\nfunction log_effect_stack() {\n\t// eslint-disable-next-line no-console\n\tconsole.error(\n\t\t'Last ten effects were: ',\n\t\tdev_effect_stack.slice(-10).map((d) => d.fn)\n\t);\n\tdev_effect_stack = [];\n}\n\nfunction infinite_loop_guard() {\n\tif (flush_count > 1000) {\n\t\tflush_count = 0;\n\t\ttry {\n\t\t\te.effect_update_depth_exceeded();\n\t\t} catch (error) {\n\t\t\tif (DEV) {\n\t\t\t\t// stack is garbage, ignore. Instead add a console.error message.\n\t\t\t\tdefine_property(error, 'stack', {\n\t\t\t\t\tvalue: ''\n\t\t\t\t});\n\t\t\t}\n\t\t\t// Try and handle the error so it can be caught at a boundary, that's\n\t\t\t// if there's an effect available from when it was last scheduled\n\t\t\tif (last_scheduled_effect !== null) {\n\t\t\t\tif (DEV) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// Only log the effect stack if the error is re-thrown\n\t\t\t\t\t\tlog_effect_stack();\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thandle_error(error, last_scheduled_effect, null, null);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (DEV) {\n\t\t\t\t\tlog_effect_stack();\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\tflush_count++;\n}\n\n/**\n * @param {Array<Effect>} root_effects\n * @returns {void}\n */\nfunction flush_queued_root_effects(root_effects) {\n\tvar length = root_effects.length;\n\tif (length === 0) {\n\t\treturn;\n\t}\n\tinfinite_loop_guard();\n\n\tvar previously_flushing_effect = is_flushing_effect;\n\tis_flushing_effect = true;\n\n\ttry {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar effect = root_effects[i];\n\n\t\t\tif ((effect.f & CLEAN) === 0) {\n\t\t\t\teffect.f ^= CLEAN;\n\t\t\t}\n\n\t\t\t/** @type {Effect[]} */\n\t\t\tvar collected_effects = [];\n\n\t\t\tprocess_effects(effect, collected_effects);\n\t\t\tflush_queued_effects(collected_effects);\n\t\t}\n\t} finally {\n\t\tis_flushing_effect = previously_flushing_effect;\n\t}\n}\n\n/**\n * @param {Array<Effect>} effects\n * @returns {void}\n */\nfunction flush_queued_effects(effects) {\n\tvar length = effects.length;\n\tif (length === 0) return;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tvar effect = effects[i];\n\n\t\tif ((effect.f & (DESTROYED | INERT)) === 0) {\n\t\t\ttry {\n\t\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\t\tupdate_effect(effect);\n\n\t\t\t\t\t// Effects with no dependencies or teardown do not get added to the effect tree.\n\t\t\t\t\t// Deferred effects (e.g. `$effect(...)`) _are_ added to the tree because we\n\t\t\t\t\t// don't know if we need to keep them until they are executed. Doing the check\n\t\t\t\t\t// here (rather than in `update_effect`) allows us to skip the work for\n\t\t\t\t\t// immediate effects.\n\t\t\t\t\tif (effect.deps === null && effect.first === null && effect.nodes_start === null) {\n\t\t\t\t\t\tif (effect.teardown === null) {\n\t\t\t\t\t\t\t// remove this effect from the graph\n\t\t\t\t\t\t\tunlink_effect(effect);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// keep the effect in the graph, but free up some memory\n\t\t\t\t\t\t\teffect.fn = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\thandle_error(error, effect, null, effect.ctx);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction process_deferred() {\n\tis_micro_task_queued = false;\n\tif (flush_count > 1001) {\n\t\treturn;\n\t}\n\tconst previous_queued_root_effects = queued_root_effects;\n\tqueued_root_effects = [];\n\tflush_queued_root_effects(previous_queued_root_effects);\n\n\tif (!is_micro_task_queued) {\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function schedule_effect(signal) {\n\tif (scheduler_mode === FLUSH_MICROTASK) {\n\t\tif (!is_micro_task_queued) {\n\t\t\tis_micro_task_queued = true;\n\t\t\tqueueMicrotask(process_deferred);\n\t\t}\n\t}\n\n\tlast_scheduled_effect = signal;\n\n\tvar effect = signal;\n\n\twhile (effect.parent !== null) {\n\t\teffect = effect.parent;\n\t\tvar flags = effect.f;\n\n\t\tif ((flags & (ROOT_EFFECT | BRANCH_EFFECT)) !== 0) {\n\t\t\tif ((flags & CLEAN) === 0) return;\n\t\t\teffect.f ^= CLEAN;\n\t\t}\n\t}\n\n\tqueued_root_effects.push(effect);\n}\n\n/**\n *\n * This function both runs render effects and collects user effects in topological order\n * from the starting effect passed in. Effects will be collected when they match the filtered\n * bitwise flag passed in only. The collected effects array will be populated with all the user\n * effects to be flushed.\n *\n * @param {Effect} effect\n * @param {Effect[]} collected_effects\n * @returns {void}\n */\nfunction process_effects(effect, collected_effects) {\n\tvar current_effect = effect.first;\n\tvar effects = [];\n\n\tmain_loop: while (current_effect !== null) {\n\t\tvar flags = current_effect.f;\n\t\tvar is_branch = (flags & BRANCH_EFFECT) !== 0;\n\t\tvar is_skippable_branch = is_branch && (flags & CLEAN) !== 0;\n\t\tvar sibling = current_effect.next;\n\n\t\tif (!is_skippable_branch && (flags & INERT) === 0) {\n\t\t\tif ((flags & RENDER_EFFECT) !== 0) {\n\t\t\t\tif (is_branch) {\n\t\t\t\t\tcurrent_effect.f ^= CLEAN;\n\t\t\t\t} else {\n\t\t\t\t\t// Ensure we set the effect to be the active reaction\n\t\t\t\t\t// to ensure that unowned deriveds are correctly tracked\n\t\t\t\t\t// because we're flushing the current effect\n\t\t\t\t\tvar previous_active_reaction = active_reaction;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tactive_reaction = current_effect;\n\t\t\t\t\t\tif (check_dirtiness(current_effect)) {\n\t\t\t\t\t\t\tupdate_effect(current_effect);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\thandle_error(error, current_effect, null, current_effect.ctx);\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tactive_reaction = previous_active_reaction;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar child = current_effect.first;\n\n\t\t\t\tif (child !== null) {\n\t\t\t\t\tcurrent_effect = child;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if ((flags & EFFECT) !== 0) {\n\t\t\t\teffects.push(current_effect);\n\t\t\t}\n\t\t}\n\n\t\tif (sibling === null) {\n\t\t\tlet parent = current_effect.parent;\n\n\t\t\twhile (parent !== null) {\n\t\t\t\tif (effect === parent) {\n\t\t\t\t\tbreak main_loop;\n\t\t\t\t}\n\t\t\t\tvar parent_sibling = parent.next;\n\t\t\t\tif (parent_sibling !== null) {\n\t\t\t\t\tcurrent_effect = parent_sibling;\n\t\t\t\t\tcontinue main_loop;\n\t\t\t\t}\n\t\t\t\tparent = parent.parent;\n\t\t\t}\n\t\t}\n\n\t\tcurrent_effect = sibling;\n\t}\n\n\t// We might be dealing with many effects here, far more than can be spread into\n\t// an array push call (callstack overflow). So let's deal with each effect in a loop.\n\tfor (var i = 0; i < effects.length; i++) {\n\t\tchild = effects[i];\n\t\tcollected_effects.push(child);\n\t\tprocess_effects(child, collected_effects);\n\t}\n}\n\n/**\n * Internal version of `flushSync` with the option to not flush previous effects.\n * Returns the result of the passed function, if given.\n * @param {() => any} [fn]\n * @returns {any}\n */\nexport function flush_sync(fn) {\n\tvar previous_scheduler_mode = scheduler_mode;\n\tvar previous_queued_root_effects = queued_root_effects;\n\n\ttry {\n\t\tinfinite_loop_guard();\n\n\t\t/** @type {Effect[]} */\n\t\tconst root_effects = [];\n\n\t\tscheduler_mode = FLUSH_SYNC;\n\t\tqueued_root_effects = root_effects;\n\t\tis_micro_task_queued = false;\n\n\t\tflush_queued_root_effects(previous_queued_root_effects);\n\n\t\tvar result = fn?.();\n\n\t\tflush_tasks();\n\t\tif (queued_root_effects.length > 0 || root_effects.length > 0) {\n\t\t\tflush_sync();\n\t\t}\n\n\t\tflush_count = 0;\n\t\tlast_scheduled_effect = null;\n\t\tif (DEV) {\n\t\t\tdev_effect_stack = [];\n\t\t}\n\n\t\treturn result;\n\t} finally {\n\t\tscheduler_mode = previous_scheduler_mode;\n\t\tqueued_root_effects = previous_queued_root_effects;\n\t}\n}\n\n/**\n * Returns a promise that resolves once any pending state changes have been applied.\n * @returns {Promise<void>}\n */\nexport async function tick() {\n\tawait Promise.resolve();\n\t// By calling flush_sync we guarantee that any pending state changes are applied after one tick.\n\t// TODO look into whether we can make flushing subsequent updates synchronously in the future.\n\tflush_sync();\n}\n\n/**\n * @template V\n * @param {Value<V>} signal\n * @returns {V}\n */\nexport function get(signal) {\n\tvar flags = signal.f;\n\tvar is_derived = (flags & DERIVED) !== 0;\n\n\tif (captured_signals !== null) {\n\t\tcaptured_signals.add(signal);\n\t}\n\n\t// Register the dependency on the current reaction signal.\n\tif (active_reaction !== null && !untracking) {\n\t\tif (derived_sources !== null && derived_sources.includes(signal)) {\n\t\t\te.state_unsafe_local_read();\n\t\t}\n\t\tvar deps = active_reaction.deps;\n\t\tif (signal.rv < read_version) {\n\t\t\tsignal.rv = read_version;\n\t\t\t// If the signal is accessing the same dependencies in the same\n\t\t\t// order as it did last time, increment `skipped_deps`\n\t\t\t// rather than updating `new_deps`, which creates GC cost\n\t\t\tif (new_deps === null && deps !== null && deps[skipped_deps] === signal) {\n\t\t\t\tskipped_deps++;\n\t\t\t} else if (new_deps === null) {\n\t\t\t\tnew_deps = [signal];\n\t\t\t} else if (!skip_reaction || !new_deps.includes(signal)) {\n\t\t\t\t// Normally we can push duplicated dependencies to `new_deps`, but if we're inside\n\t\t\t\t// an unowned derived because skip_reaction is true, then we need to ensure that\n\t\t\t\t// we don't have duplicates\n\t\t\t\tnew_deps.push(signal);\n\t\t\t}\n\t\t}\n\t} else if (\n\t\tis_derived &&\n\t\t/** @type {Derived} */ (signal).deps === null &&\n\t\t/** @type {Derived} */ (signal).effects === null\n\t) {\n\t\tvar derived = /** @type {Derived} */ (signal);\n\t\tvar parent = derived.parent;\n\n\t\tif (parent !== null && (parent.f & UNOWNED) === 0) {\n\t\t\t// If the derived is owned by another derived then mark it as unowned\n\t\t\t// as the derived value might have been referenced in a different context\n\t\t\t// since and thus its parent might not be its true owner anymore\n\t\t\tderived.f ^= UNOWNED;\n\t\t}\n\t}\n\n\tif (is_derived) {\n\t\tderived = /** @type {Derived} */ (signal);\n\n\t\tif (check_dirtiness(derived)) {\n\t\t\tupdate_derived(derived);\n\t\t}\n\t}\n\n\tif (\n\t\tDEV &&\n\t\ttracing_mode_flag &&\n\t\ttracing_expressions !== null &&\n\t\tactive_reaction !== null &&\n\t\ttracing_expressions.reaction === active_reaction\n\t) {\n\t\t// Used when mapping state between special blocks like `each`\n\t\tif (signal.debug) {\n\t\t\tsignal.debug();\n\t\t} else if (signal.created) {\n\t\t\tvar entry = tracing_expressions.entries.get(signal);\n\n\t\t\tif (entry === undefined) {\n\t\t\t\tentry = { read: [] };\n\t\t\t\ttracing_expressions.entries.set(signal, entry);\n\t\t\t}\n\n\t\t\tentry.read.push(get_stack('TracedAt'));\n\t\t}\n\t}\n\n\treturn signal.v;\n}\n\n/**\n * Like `get`, but checks for `undefined`. Used for `var` declarations because they can be accessed before being declared\n * @template V\n * @param {Value<V> | undefined} signal\n * @returns {V | undefined}\n */\nexport function safe_get(signal) {\n\treturn signal && get(signal);\n}\n\n/**\n * Capture an array of all the signals that are read when `fn` is called\n * @template T\n * @param {() => T} fn\n */\nexport function capture_signals(fn) {\n\tvar previous_captured_signals = captured_signals;\n\tcaptured_signals = new Set();\n\n\tvar captured = captured_signals;\n\tvar signal;\n\n\ttry {\n\t\tuntrack(fn);\n\t\tif (previous_captured_signals !== null) {\n\t\t\tfor (signal of captured_signals) {\n\t\t\t\tprevious_captured_signals.add(signal);\n\t\t\t}\n\t\t}\n\t} finally {\n\t\tcaptured_signals = previous_captured_signals;\n\t}\n\n\treturn captured;\n}\n\n/**\n * Invokes a function and captures all signals that are read during the invocation,\n * then invalidates them.\n * @param {() => any} fn\n */\nexport function invalidate_inner_signals(fn) {\n\tvar captured = capture_signals(() => untrack(fn));\n\n\tfor (var signal of captured) {\n\t\t// Go one level up because derived signals created as part of props in legacy mode\n\t\tif ((signal.f & LEGACY_DERIVED_PROP) !== 0) {\n\t\t\tfor (const dep of /** @type {Derived} */ (signal).deps || []) {\n\t\t\t\tif ((dep.f & DERIVED) === 0) {\n\t\t\t\t\t// Use internal_set instead of set here and below to avoid mutation validation\n\t\t\t\t\tinternal_set(dep, dep.v);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tinternal_set(signal, signal.v);\n\t\t}\n\t}\n}\n\n/**\n * When used inside a [`$derived`](https://svelte.dev/docs/svelte/$derived) or [`$effect`](https://svelte.dev/docs/svelte/$effect),\n * any state read inside `fn` will not be treated as a dependency.\n *\n * ```ts\n * $effect(() => {\n *   // this will run when `data` changes, but not when `time` changes\n *   save(data, {\n *     timestamp: untrack(() => time)\n *   });\n * });\n * ```\n * @template T\n * @param {() => T} fn\n * @returns {T}\n */\nexport function untrack(fn) {\n\tvar previous_untracking = untracking;\n\ttry {\n\t\tuntracking = true;\n\t\treturn fn();\n\t} finally {\n\t\tuntracking = previous_untracking;\n\t}\n}\n\nconst STATUS_MASK = ~(DIRTY | MAYBE_DIRTY | CLEAN);\n\n/**\n * @param {Signal} signal\n * @param {number} status\n * @returns {void}\n */\nexport function set_signal_status(signal, status) {\n\tsignal.f = (signal.f & STATUS_MASK) | status;\n}\n\n/**\n * @param {Record<string, unknown>} obj\n * @param {string[]} keys\n * @returns {Record<string, unknown>}\n */\nexport function exclude_from_object(obj, keys) {\n\t/** @type {Record<string, unknown>} */\n\tvar result = {};\n\n\tfor (var key in obj) {\n\t\tif (!keys.includes(key)) {\n\t\t\tresult[key] = obj[key];\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Possibly traverse an object and read all its properties so that they're all reactive in case this is `$state`.\n * Does only check first level of an object for performance reasons (heuristic should be good for 99% of all cases).\n * @param {any} value\n * @returns {void}\n */\nexport function deep_read_state(value) {\n\tif (typeof value !== 'object' || !value || value instanceof EventTarget) {\n\t\treturn;\n\t}\n\n\tif (STATE_SYMBOL in value) {\n\t\tdeep_read(value);\n\t} else if (!Array.isArray(value)) {\n\t\tfor (let key in value) {\n\t\t\tconst prop = value[key];\n\t\t\tif (typeof prop === 'object' && prop && STATE_SYMBOL in prop) {\n\t\t\t\tdeep_read(prop);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Deeply traverse an object and read all its properties\n * so that they're all reactive in case this is `$state`\n * @param {any} value\n * @param {Set<any>} visited\n * @returns {void}\n */\nexport function deep_read(value, visited = new Set()) {\n\tif (\n\t\ttypeof value === 'object' &&\n\t\tvalue !== null &&\n\t\t// We don't want to traverse DOM elements\n\t\t!(value instanceof EventTarget) &&\n\t\t!visited.has(value)\n\t) {\n\t\tvisited.add(value);\n\t\t// When working with a possible SvelteDate, this\n\t\t// will ensure we capture changes to it.\n\t\tif (value instanceof Date) {\n\t\t\tvalue.getTime();\n\t\t}\n\t\tfor (let key in value) {\n\t\t\ttry {\n\t\t\t\tdeep_read(value[key], visited);\n\t\t\t} catch (e) {\n\t\t\t\t// continue\n\t\t\t}\n\t\t}\n\t\tconst proto = get_prototype_of(value);\n\t\tif (\n\t\t\tproto !== Object.prototype &&\n\t\t\tproto !== Array.prototype &&\n\t\t\tproto !== Map.prototype &&\n\t\t\tproto !== Set.prototype &&\n\t\t\tproto !== Date.prototype\n\t\t) {\n\t\t\tconst descriptors = get_descriptors(proto);\n\t\t\tfor (let key in descriptors) {\n\t\t\t\tconst get = descriptors[key].get;\n\t\t\t\tif (get) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tget.call(value);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// continue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { TemplateNode } from '#client' */\n\nimport {\n\tHYDRATION_END,\n\tHYDRATION_ERROR,\n\tHYDRATION_START,\n\tHYDRATION_START_ELSE\n} from '../../../constants.js';\nimport * as w from '../warnings.js';\nimport { get_next_sibling } from './operations.js';\n\n/**\n * Use this variable to guard everything related to hydration code so it can be treeshaken out\n * if the user doesn't use the `hydrate` method and these code paths are therefore not needed.\n */\nexport let hydrating = false;\n\n/** @param {boolean} value */\nexport function set_hydrating(value) {\n\thydrating = value;\n}\n\n/**\n * The node that is currently being hydrated. This starts out as the first node inside the opening\n * <!--[--> comment, and updates each time a component calls `$.child(...)` or `$.sibling(...)`.\n * When entering a block (e.g. `{#if ...}`), `hydrate_node` is the block opening comment; by the\n * time we leave the block it is the closing comment, which serves as the block's anchor.\n * @type {TemplateNode}\n */\nexport let hydrate_node;\n\n/** @param {TemplateNode} node */\nexport function set_hydrate_node(node) {\n\tif (node === null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\treturn (hydrate_node = node);\n}\n\nexport function hydrate_next() {\n\treturn set_hydrate_node(/** @type {TemplateNode} */ (get_next_sibling(hydrate_node)));\n}\n\n/** @param {TemplateNode} node */\nexport function reset(node) {\n\tif (!hydrating) return;\n\n\t// If the node has remaining siblings, something has gone wrong\n\tif (get_next_sibling(hydrate_node) !== null) {\n\t\tw.hydration_mismatch();\n\t\tthrow HYDRATION_ERROR;\n\t}\n\n\thydrate_node = node;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n */\nexport function hydrate_template(template) {\n\tif (hydrating) {\n\t\t// @ts-expect-error TemplateNode doesn't include DocumentFragment, but it's actually fine\n\t\thydrate_node = template.content;\n\t}\n}\n\nexport function next(count = 1) {\n\tif (hydrating) {\n\t\tvar i = count;\n\t\tvar node = hydrate_node;\n\n\t\twhile (i--) {\n\t\t\tnode = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\t}\n\n\t\thydrate_node = node;\n\t}\n}\n\n/**\n * Removes all nodes starting at `hydrate_node` up until the next hydration end comment\n */\nexport function remove_nodes() {\n\tvar depth = 0;\n\tvar node = hydrate_node;\n\n\twhile (true) {\n\t\tif (node.nodeType === 8) {\n\t\t\tvar data = /** @type {Comment} */ (node).data;\n\n\t\t\tif (data === HYDRATION_END) {\n\t\t\t\tif (depth === 0) return node;\n\t\t\t\tdepth -= 1;\n\t\t\t} else if (data === HYDRATION_START || data === HYDRATION_START_ELSE) {\n\t\t\t\tdepth += 1;\n\t\t\t}\n\t\t}\n\n\t\tvar next = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tnode.remove();\n\t\tnode = next;\n\t}\n}\n","/** @import { ProxyMetadata, Source } from '#client' */\nimport { DEV } from 'esm-env';\nimport { get, active_effect } from './runtime.js';\nimport { component_context } from './context.js';\nimport {\n\tarray_prototype,\n\tget_descriptor,\n\tget_prototype_of,\n\tis_array,\n\tobject_prototype\n} from '../shared/utils.js';\nimport { check_ownership, widen_ownership } from './dev/ownership.js';\nimport { source, set } from './reactivity/sources.js';\nimport { STATE_SYMBOL, STATE_SYMBOL_METADATA } from './constants.js';\nimport { UNINITIALIZED } from '../../constants.js';\nimport * as e from './errors.js';\nimport { get_stack } from './dev/tracing.js';\nimport { tracing_mode_flag } from '../flags/index.js';\n\n/**\n * @template T\n * @param {T} value\n * @param {ProxyMetadata | null} [parent]\n * @param {Source<T>} [prev] dev mode only\n * @returns {T}\n */\nexport function proxy(value, parent = null, prev) {\n\t/** @type {Error | null} */\n\tvar stack = null;\n\tif (DEV && tracing_mode_flag) {\n\t\tstack = get_stack('CreatedAt');\n\t}\n\t// if non-proxyable, or is already a proxy, return `value`\n\tif (typeof value !== 'object' || value === null || STATE_SYMBOL in value) {\n\t\treturn value;\n\t}\n\n\tconst prototype = get_prototype_of(value);\n\n\tif (prototype !== object_prototype && prototype !== array_prototype) {\n\t\treturn value;\n\t}\n\n\t/** @type {Map<any, Source<any>>} */\n\tvar sources = new Map();\n\tvar is_proxied_array = is_array(value);\n\tvar version = source(0);\n\n\tif (is_proxied_array) {\n\t\t// We need to create the length source eagerly to ensure that\n\t\t// mutations to the array are properly synced with our proxy\n\t\tsources.set('length', source(/** @type {any[]} */ (value).length, stack));\n\t}\n\n\t/** @type {ProxyMetadata} */\n\tvar metadata;\n\n\tif (DEV) {\n\t\tmetadata = {\n\t\t\tparent,\n\t\t\towners: null\n\t\t};\n\n\t\tif (prev) {\n\t\t\t// Reuse owners from previous state; necessary because reassignment is not guaranteed to have correct component context.\n\t\t\t// If no previous proxy exists we play it safe and assume ownerless state\n\t\t\t// @ts-expect-error\n\t\t\tconst prev_owners = prev.v?.[STATE_SYMBOL_METADATA]?.owners;\n\t\t\tmetadata.owners = prev_owners ? new Set(prev_owners) : null;\n\t\t} else {\n\t\t\tmetadata.owners =\n\t\t\t\tparent === null\n\t\t\t\t\t? component_context !== null\n\t\t\t\t\t\t? new Set([component_context.function])\n\t\t\t\t\t\t: null\n\t\t\t\t\t: new Set();\n\t\t}\n\t}\n\n\treturn new Proxy(/** @type {any} */ (value), {\n\t\tdefineProperty(_, prop, descriptor) {\n\t\t\tif (\n\t\t\t\t!('value' in descriptor) ||\n\t\t\t\tdescriptor.configurable === false ||\n\t\t\t\tdescriptor.enumerable === false ||\n\t\t\t\tdescriptor.writable === false\n\t\t\t) {\n\t\t\t\t// we disallow non-basic descriptors, because unless they are applied to the\n\t\t\t\t// target object — which we avoid, so that state can be forked — we will run\n\t\t\t\t// afoul of the various invariants\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/getOwnPropertyDescriptor#invariants\n\t\t\t\te.state_descriptors_fixed();\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\ts = source(descriptor.value, stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t} else {\n\t\t\t\tset(s, proxy(descriptor.value, metadata));\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tdeleteProperty(target, prop) {\n\t\t\tvar s = sources.get(prop);\n\n\t\t\tif (s === undefined) {\n\t\t\t\tif (prop in target) {\n\t\t\t\t\tsources.set(prop, source(UNINITIALIZED, stack));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// When working with arrays, we need to also ensure we update the length when removing\n\t\t\t\t// an indexed property\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n < ls.v) {\n\t\t\t\t\t\tset(ls, n);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tset(s, UNINITIALIZED);\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\tget(target, prop, receiver) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn metadata;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar exists = prop in target;\n\n\t\t\t// create a source, but only if it's an own property and not a prototype property\n\t\t\tif (s === undefined && (!exists || get_descriptor(target, prop)?.writable)) {\n\t\t\t\ts = source(proxy(exists ? target[prop] : UNINITIALIZED, metadata), stack);\n\t\t\t\tsources.set(prop, s);\n\t\t\t}\n\n\t\t\tif (s !== undefined) {\n\t\t\t\tvar v = get(s);\n\n\t\t\t\t// In case of something like `foo = bar.map(...)`, foo would have ownership\n\t\t\t\t// of the array itself, while the individual items would have ownership\n\t\t\t\t// of the component that created bar. That means if we later do `foo[0].baz = 42`,\n\t\t\t\t// we could get a false-positive ownership violation, since the two proxies\n\t\t\t\t// are not connected to each other via the parent metadata relationship.\n\t\t\t\t// For this reason, we need to widen the ownership of the children\n\t\t\t\t// upon access when we detect they are not connected.\n\t\t\t\tif (DEV) {\n\t\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\t\tvar prop_metadata = v?.[STATE_SYMBOL_METADATA];\n\t\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn v === UNINITIALIZED ? undefined : v;\n\t\t\t}\n\n\t\t\treturn Reflect.get(target, prop, receiver);\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, prop) {\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\tif (descriptor && 'value' in descriptor) {\n\t\t\t\tvar s = sources.get(prop);\n\t\t\t\tif (s) descriptor.value = get(s);\n\t\t\t} else if (descriptor === undefined) {\n\t\t\t\tvar source = sources.get(prop);\n\t\t\t\tvar value = source?.v;\n\n\t\t\t\tif (source !== undefined && value !== UNINITIALIZED) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\twritable: true\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn descriptor;\n\t\t},\n\n\t\thas(target, prop) {\n\t\t\tif (DEV && prop === STATE_SYMBOL_METADATA) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (prop === STATE_SYMBOL) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = (s !== undefined && s.v !== UNINITIALIZED) || Reflect.has(target, prop);\n\n\t\t\tif (\n\t\t\t\ts !== undefined ||\n\t\t\t\t(active_effect !== null && (!has || get_descriptor(target, prop)?.writable))\n\t\t\t) {\n\t\t\t\tif (s === undefined) {\n\t\t\t\t\ts = source(has ? proxy(target[prop], metadata) : UNINITIALIZED, stack);\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\n\t\t\t\tvar value = get(s);\n\t\t\t\tif (value === UNINITIALIZED) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn has;\n\t\t},\n\n\t\tset(target, prop, value, receiver) {\n\t\t\tvar s = sources.get(prop);\n\t\t\tvar has = prop in target;\n\n\t\t\t// variable.length = value -> clear all signals with index >= value\n\t\t\tif (is_proxied_array && prop === 'length') {\n\t\t\t\tfor (var i = value; i < /** @type {Source<number>} */ (s).v; i += 1) {\n\t\t\t\t\tvar other_s = sources.get(i + '');\n\t\t\t\t\tif (other_s !== undefined) {\n\t\t\t\t\t\tset(other_s, UNINITIALIZED);\n\t\t\t\t\t} else if (i in target) {\n\t\t\t\t\t\t// If the item exists in the original, we need to create a uninitialized source,\n\t\t\t\t\t\t// else a later read of the property would result in a source being created with\n\t\t\t\t\t\t// the value of the original item at that index.\n\t\t\t\t\t\tother_s = source(UNINITIALIZED, stack);\n\t\t\t\t\t\tsources.set(i + '', other_s);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we haven't yet created a source for this property, we need to ensure\n\t\t\t// we do so otherwise if we read it later, then the write won't be tracked and\n\t\t\t// the heuristics of effects will be different vs if we had read the proxied\n\t\t\t// object property before writing to that property.\n\t\t\tif (s === undefined) {\n\t\t\t\tif (!has || get_descriptor(target, prop)?.writable) {\n\t\t\t\t\ts = source(undefined, stack);\n\t\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t\t\tsources.set(prop, s);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thas = s.v !== UNINITIALIZED;\n\t\t\t\tset(s, proxy(value, metadata));\n\t\t\t}\n\n\t\t\tif (DEV) {\n\t\t\t\t/** @type {ProxyMetadata | undefined} */\n\t\t\t\tvar prop_metadata = value?.[STATE_SYMBOL_METADATA];\n\t\t\t\tif (prop_metadata && prop_metadata?.parent !== metadata) {\n\t\t\t\t\twiden_ownership(metadata, prop_metadata);\n\t\t\t\t}\n\t\t\t\tcheck_ownership(metadata);\n\t\t\t}\n\n\t\t\tvar descriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\t\t\t// Set the new value before updating any signals so that any listeners get the new value\n\t\t\tif (descriptor?.set) {\n\t\t\t\tdescriptor.set.call(receiver, value);\n\t\t\t}\n\n\t\t\tif (!has) {\n\t\t\t\t// If we have mutated an array directly, we might need to\n\t\t\t\t// signal that length has also changed. Do it before updating metadata\n\t\t\t\t// to ensure that iterating over the array as a result of a metadata update\n\t\t\t\t// will not cause the length to be out of sync.\n\t\t\t\tif (is_proxied_array && typeof prop === 'string') {\n\t\t\t\t\tvar ls = /** @type {Source<number>} */ (sources.get('length'));\n\t\t\t\t\tvar n = Number(prop);\n\n\t\t\t\t\tif (Number.isInteger(n) && n >= ls.v) {\n\t\t\t\t\t\tset(ls, n + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tupdate_version(version);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\tget(version);\n\n\t\t\tvar own_keys = Reflect.ownKeys(target).filter((key) => {\n\t\t\t\tvar source = sources.get(key);\n\t\t\t\treturn source === undefined || source.v !== UNINITIALIZED;\n\t\t\t});\n\n\t\t\tfor (var [key, source] of sources) {\n\t\t\t\tif (source.v !== UNINITIALIZED && !(key in target)) {\n\t\t\t\t\town_keys.push(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn own_keys;\n\t\t},\n\n\t\tsetPrototypeOf() {\n\t\t\te.state_prototype_fixed();\n\t\t}\n\t});\n}\n\n/**\n * @param {Source<number>} signal\n * @param {1 | -1} [d]\n */\nfunction update_version(signal, d = 1) {\n\tset(signal, signal.v + d);\n}\n\n/**\n * @param {any} value\n */\nexport function get_proxied_value(value) {\n\tif (value !== null && typeof value === 'object' && STATE_SYMBOL in value) {\n\t\treturn value[STATE_SYMBOL];\n\t}\n\n\treturn value;\n}\n\n/**\n * @param {any} a\n * @param {any} b\n */\nexport function is(a, b) {\n\treturn Object.is(get_proxied_value(a), get_proxied_value(b));\n}\n","/** @import { TemplateNode } from '#client' */\nimport { hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { DEV } from 'esm-env';\nimport { init_array_prototype_warnings } from '../dev/equality.js';\nimport { get_descriptor } from '../../shared/utils.js';\n\n// export these for reference in the compiled code, making global name deduplication unnecessary\n/** @type {Window} */\nexport var $window;\n\n/** @type {Document} */\nexport var $document;\n\n/** @type {() => Node | null} */\nvar first_child_getter;\n/** @type {() => Node | null} */\nvar next_sibling_getter;\n\n/**\n * Initialize these lazily to avoid issues when using the runtime in a server context\n * where these globals are not available while avoiding a separate server entry point\n */\nexport function init_operations() {\n\tif ($window !== undefined) {\n\t\treturn;\n\t}\n\n\t$window = window;\n\t$document = document;\n\n\tvar element_prototype = Element.prototype;\n\tvar node_prototype = Node.prototype;\n\n\t// @ts-ignore\n\tfirst_child_getter = get_descriptor(node_prototype, 'firstChild').get;\n\t// @ts-ignore\n\tnext_sibling_getter = get_descriptor(node_prototype, 'nextSibling').get;\n\n\t// the following assignments improve perf of lookups on DOM nodes\n\t// @ts-expect-error\n\telement_prototype.__click = undefined;\n\t// @ts-expect-error\n\telement_prototype.__className = '';\n\t// @ts-expect-error\n\telement_prototype.__attributes = null;\n\t// @ts-expect-error\n\telement_prototype.__styles = null;\n\t// @ts-expect-error\n\telement_prototype.__e = undefined;\n\n\t// @ts-expect-error\n\tText.prototype.__t = undefined;\n\n\tif (DEV) {\n\t\t// @ts-expect-error\n\t\telement_prototype.__svelte_meta = null;\n\n\t\tinit_array_prototype_warnings();\n\t}\n}\n\n/**\n * @param {string} value\n * @returns {Text}\n */\nexport function create_text(value = '') {\n\treturn document.createTextNode(value);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_first_child(node) {\n\treturn first_child_getter.call(node);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {Node | null}\n */\n/*@__NO_SIDE_EFFECTS__*/\nexport function get_next_sibling(node) {\n\treturn next_sibling_getter.call(node);\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @template {Node} N\n * @param {N} node\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function child(node, is_text) {\n\tif (!hydrating) {\n\t\treturn get_first_child(node);\n\t}\n\n\tvar child = /** @type {TemplateNode} */ (get_first_child(hydrate_node));\n\n\t// Child can be null if we have an element with a single child, like `<p>{text}</p>`, where `text` is empty\n\tif (child === null) {\n\t\tchild = hydrate_node.appendChild(create_text());\n\t} else if (is_text && child.nodeType !== 3) {\n\t\tvar text = create_text();\n\t\tchild?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(child);\n\treturn child;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {DocumentFragment | TemplateNode[]} fragment\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function first_child(fragment, is_text) {\n\tif (!hydrating) {\n\t\t// when not hydrating, `fragment` is a `DocumentFragment` (the result of calling `open_frag`)\n\t\tvar first = /** @type {DocumentFragment} */ (get_first_child(/** @type {Node} */ (fragment)));\n\n\t\t// TODO prevent user comments with the empty string when preserveComments is true\n\t\tif (first instanceof Comment && first.data === '') return get_next_sibling(first);\n\n\t\treturn first;\n\t}\n\n\t// if an {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && hydrate_node?.nodeType !== 3) {\n\t\tvar text = create_text();\n\n\t\thydrate_node?.before(text);\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\treturn hydrate_node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {TemplateNode} node\n * @param {number} count\n * @param {boolean} is_text\n * @returns {Node | null}\n */\nexport function sibling(node, count = 1, is_text = false) {\n\tlet next_sibling = hydrating ? hydrate_node : node;\n\tvar last_sibling;\n\n\twhile (count--) {\n\t\tlast_sibling = next_sibling;\n\t\tnext_sibling = /** @type {TemplateNode} */ (get_next_sibling(next_sibling));\n\t}\n\n\tif (!hydrating) {\n\t\treturn next_sibling;\n\t}\n\n\tvar type = next_sibling?.nodeType;\n\n\t// if a sibling {expression} is empty during SSR, there might be no\n\t// text node to hydrate — we must therefore create one\n\tif (is_text && type !== 3) {\n\t\tvar text = create_text();\n\t\t// If the next sibling is `null` and we're handling text then it's because\n\t\t// the SSR content was empty for the text, so we need to generate a new text\n\t\t// node and insert it after the last sibling\n\t\tif (next_sibling === null) {\n\t\t\tlast_sibling?.after(text);\n\t\t} else {\n\t\t\tnext_sibling.before(text);\n\t\t}\n\t\tset_hydrate_node(text);\n\t\treturn text;\n\t}\n\n\tset_hydrate_node(next_sibling);\n\treturn /** @type {TemplateNode} */ (next_sibling);\n}\n\n/**\n * @template {Node} N\n * @param {N} node\n * @returns {void}\n */\nexport function clear_text_content(node) {\n\tnode.textContent = '';\n}\n","/** @import { ComponentContext, ComponentContextLegacy, Derived, Effect, TemplateNode, TransitionManager } from '#client' */\nimport {\n\tcheck_dirtiness,\n\tactive_effect,\n\tactive_reaction,\n\tupdate_effect,\n\tget,\n\tis_destroying_effect,\n\tis_flushing_effect,\n\tremove_reactions,\n\tschedule_effect,\n\tset_active_reaction,\n\tset_is_destroying_effect,\n\tset_is_flushing_effect,\n\tset_signal_status,\n\tuntrack,\n\tskip_reaction,\n\tuntracking\n} from '../runtime.js';\nimport {\n\tDIRTY,\n\tBRANCH_EFFECT,\n\tRENDER_EFFECT,\n\tEFFECT,\n\tDESTROYED,\n\tINERT,\n\tEFFECT_RAN,\n\tBLOCK_EFFECT,\n\tROOT_EFFECT,\n\tEFFECT_TRANSPARENT,\n\tDERIVED,\n\tUNOWNED,\n\tCLEAN,\n\tINSPECT_EFFECT,\n\tHEAD_EFFECT,\n\tMAYBE_DIRTY,\n\tEFFECT_HAS_DERIVED,\n\tBOUNDARY_EFFECT\n} from '../constants.js';\nimport { set } from './sources.js';\nimport * as e from '../errors.js';\nimport { DEV } from 'esm-env';\nimport { define_property } from '../../shared/utils.js';\nimport { get_next_sibling } from '../dom/operations.js';\nimport { derived } from './deriveds.js';\nimport { component_context, dev_current_component_function } from '../context.js';\n\n/**\n * @param {'$effect' | '$effect.pre' | '$inspect'} rune\n */\nexport function validate_effect(rune) {\n\tif (active_effect === null && active_reaction === null) {\n\t\te.effect_orphan(rune);\n\t}\n\n\tif (active_reaction !== null && (active_reaction.f & UNOWNED) !== 0 && active_effect === null) {\n\t\te.effect_in_unowned_derived();\n\t}\n\n\tif (is_destroying_effect) {\n\t\te.effect_in_teardown(rune);\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {Effect} parent_effect\n */\nfunction push_effect(effect, parent_effect) {\n\tvar parent_last = parent_effect.last;\n\tif (parent_last === null) {\n\t\tparent_effect.last = parent_effect.first = effect;\n\t} else {\n\t\tparent_last.next = effect;\n\t\teffect.prev = parent_last;\n\t\tparent_effect.last = effect;\n\t}\n}\n\n/**\n * @param {number} type\n * @param {null | (() => void | (() => void))} fn\n * @param {boolean} sync\n * @param {boolean} push\n * @returns {Effect}\n */\nfunction create_effect(type, fn, sync, push = true) {\n\tvar is_root = (type & ROOT_EFFECT) !== 0;\n\tvar parent_effect = active_effect;\n\n\tif (DEV) {\n\t\t// Ensure the parent is never an inspect effect\n\t\twhile (parent_effect !== null && (parent_effect.f & INSPECT_EFFECT) !== 0) {\n\t\t\tparent_effect = parent_effect.parent;\n\t\t}\n\t}\n\n\t/** @type {Effect} */\n\tvar effect = {\n\t\tctx: component_context,\n\t\tdeps: null,\n\t\tnodes_start: null,\n\t\tnodes_end: null,\n\t\tf: type | DIRTY,\n\t\tfirst: null,\n\t\tfn,\n\t\tlast: null,\n\t\tnext: null,\n\t\tparent: is_root ? null : parent_effect,\n\t\tprev: null,\n\t\tteardown: null,\n\t\ttransitions: null,\n\t\twv: 0\n\t};\n\n\tif (DEV) {\n\t\teffect.component_function = dev_current_component_function;\n\t}\n\n\tif (sync) {\n\t\tvar previously_flushing_effect = is_flushing_effect;\n\n\t\ttry {\n\t\t\tset_is_flushing_effect(true);\n\t\t\tupdate_effect(effect);\n\t\t\teffect.f |= EFFECT_RAN;\n\t\t} catch (e) {\n\t\t\tdestroy_effect(effect);\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tset_is_flushing_effect(previously_flushing_effect);\n\t\t}\n\t} else if (fn !== null) {\n\t\tschedule_effect(effect);\n\t}\n\n\t// if an effect has no dependencies, no DOM and no teardown function,\n\t// don't bother adding it to the effect tree\n\tvar inert =\n\t\tsync &&\n\t\teffect.deps === null &&\n\t\teffect.first === null &&\n\t\teffect.nodes_start === null &&\n\t\teffect.teardown === null &&\n\t\t(effect.f & (EFFECT_HAS_DERIVED | BOUNDARY_EFFECT)) === 0;\n\n\tif (!inert && !is_root && push) {\n\t\tif (parent_effect !== null) {\n\t\t\tpush_effect(effect, parent_effect);\n\t\t}\n\n\t\t// if we're in a derived, add the effect there too\n\t\tif (active_reaction !== null && (active_reaction.f & DERIVED) !== 0) {\n\t\t\tvar derived = /** @type {Derived} */ (active_reaction);\n\t\t\t(derived.effects ??= []).push(effect);\n\t\t}\n\t}\n\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect.tracking()`\n * @returns {boolean}\n */\nexport function effect_tracking() {\n\treturn active_reaction !== null && !untracking;\n}\n\n/**\n * @param {() => void} fn\n */\nexport function teardown(fn) {\n\tconst effect = create_effect(RENDER_EFFECT, null, false);\n\tset_signal_status(effect, CLEAN);\n\teffect.teardown = fn;\n\treturn effect;\n}\n\n/**\n * Internal representation of `$effect(...)`\n * @param {() => void | (() => void)} fn\n */\nexport function user_effect(fn) {\n\tvalidate_effect('$effect');\n\n\t// Non-nested `$effect(...)` in a component should be deferred\n\t// until the component is mounted\n\tvar defer =\n\t\tactive_effect !== null &&\n\t\t(active_effect.f & BRANCH_EFFECT) !== 0 &&\n\t\tcomponent_context !== null &&\n\t\t!component_context.m;\n\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect'\n\t\t});\n\t}\n\n\tif (defer) {\n\t\tvar context = /** @type {ComponentContext} */ (component_context);\n\t\t(context.e ??= []).push({\n\t\t\tfn,\n\t\t\teffect: active_effect,\n\t\t\treaction: active_reaction\n\t\t});\n\t} else {\n\t\tvar signal = effect(fn);\n\t\treturn signal;\n\t}\n}\n\n/**\n * Internal representation of `$effect.pre(...)`\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function user_pre_effect(fn) {\n\tvalidate_effect('$effect.pre');\n\tif (DEV) {\n\t\tdefine_property(fn, 'name', {\n\t\t\tvalue: '$effect.pre'\n\t\t});\n\t}\n\treturn render_effect(fn);\n}\n\n/** @param {() => void | (() => void)} fn */\nexport function inspect_effect(fn) {\n\treturn create_effect(INSPECT_EFFECT, fn, true);\n}\n\n/**\n * Internal representation of `$effect.root(...)`\n * @param {() => void | (() => void)} fn\n * @returns {() => void}\n */\nexport function effect_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn () => {\n\t\tdestroy_effect(effect);\n\t};\n}\n\n/**\n * An effect root whose children can transition out\n * @param {() => void} fn\n * @returns {(options?: { outro?: boolean }) => Promise<void>}\n */\nexport function component_root(fn) {\n\tconst effect = create_effect(ROOT_EFFECT, fn, true);\n\n\treturn (options = {}) => {\n\t\treturn new Promise((fulfil) => {\n\t\t\tif (options.outro) {\n\t\t\t\tpause_effect(effect, () => {\n\t\t\t\t\tdestroy_effect(effect);\n\t\t\t\t\tfulfil(undefined);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tdestroy_effect(effect);\n\t\t\t\tfulfil(undefined);\n\t\t\t}\n\t\t});\n\t};\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function effect(fn) {\n\treturn create_effect(EFFECT, fn, false);\n}\n\n/**\n * Internal representation of `$: ..`\n * @param {() => any} deps\n * @param {() => void | (() => void)} fn\n */\nexport function legacy_pre_effect(deps, fn) {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\t/** @type {{ effect: null | Effect, ran: boolean }} */\n\tvar token = { effect: null, ran: false };\n\tcontext.l.r1.push(token);\n\n\ttoken.effect = render_effect(() => {\n\t\tdeps();\n\n\t\t// If this legacy pre effect has already run before the end of the reset, then\n\t\t// bail out to emulate the same behavior.\n\t\tif (token.ran) return;\n\n\t\ttoken.ran = true;\n\t\tset(context.l.r2, true);\n\t\tuntrack(fn);\n\t});\n}\n\nexport function legacy_pre_effect_reset() {\n\tvar context = /** @type {ComponentContextLegacy} */ (component_context);\n\n\trender_effect(() => {\n\t\tif (!get(context.l.r2)) return;\n\n\t\t// Run dirty `$:` statements\n\t\tfor (var token of context.l.r1) {\n\t\t\tvar effect = token.effect;\n\n\t\t\t// If the effect is CLEAN, then make it MAYBE_DIRTY. This ensures we traverse through\n\t\t\t// the effects dependencies and correctly ensure each dependency is up-to-date.\n\t\t\tif ((effect.f & CLEAN) !== 0) {\n\t\t\t\tset_signal_status(effect, MAYBE_DIRTY);\n\t\t\t}\n\n\t\t\tif (check_dirtiness(effect)) {\n\t\t\t\tupdate_effect(effect);\n\t\t\t}\n\n\t\t\ttoken.ran = false;\n\t\t}\n\n\t\tcontext.l.r2.v = false; // set directly to avoid rerunning this effect\n\t});\n}\n\n/**\n * @param {() => void | (() => void)} fn\n * @returns {Effect}\n */\nexport function render_effect(fn) {\n\treturn create_effect(RENDER_EFFECT, fn, true);\n}\n\n/**\n * @param {(...expressions: any) => void | (() => void)} fn\n * @param {Array<() => any>} thunks\n * @returns {Effect}\n */\nexport function template_effect(fn, thunks = [], d = derived) {\n\tconst deriveds = thunks.map(d);\n\tconst effect = () => fn(...deriveds.map(get));\n\n\tif (DEV) {\n\t\tdefine_property(effect, 'name', {\n\t\t\tvalue: '{expression}'\n\t\t});\n\t}\n\n\treturn block(effect);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {number} flags\n */\nexport function block(fn, flags = 0) {\n\treturn create_effect(RENDER_EFFECT | BLOCK_EFFECT | flags, fn, true);\n}\n\n/**\n * @param {(() => void)} fn\n * @param {boolean} [push]\n */\nexport function branch(fn, push = true) {\n\treturn create_effect(RENDER_EFFECT | BRANCH_EFFECT, fn, true, push);\n}\n\n/**\n * @param {Effect} effect\n */\nexport function execute_effect_teardown(effect) {\n\tvar teardown = effect.teardown;\n\tif (teardown !== null) {\n\t\tconst previously_destroying_effect = is_destroying_effect;\n\t\tconst previous_reaction = active_reaction;\n\t\tset_is_destroying_effect(true);\n\t\tset_active_reaction(null);\n\t\ttry {\n\t\t\tteardown.call(null);\n\t\t} finally {\n\t\t\tset_is_destroying_effect(previously_destroying_effect);\n\t\t\tset_active_reaction(previous_reaction);\n\t\t}\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @param {boolean} remove_dom\n * @returns {void}\n */\nexport function destroy_effect_children(signal, remove_dom = false) {\n\tvar effect = signal.first;\n\tsignal.first = signal.last = null;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tdestroy_effect(effect, remove_dom);\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} signal\n * @returns {void}\n */\nexport function destroy_block_effect_children(signal) {\n\tvar effect = signal.first;\n\n\twhile (effect !== null) {\n\t\tvar next = effect.next;\n\t\tif ((effect.f & BRANCH_EFFECT) === 0) {\n\t\t\tdestroy_effect(effect);\n\t\t}\n\t\teffect = next;\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} [remove_dom]\n * @returns {void}\n */\nexport function destroy_effect(effect, remove_dom = true) {\n\tvar removed = false;\n\n\tif ((remove_dom || (effect.f & HEAD_EFFECT) !== 0) && effect.nodes_start !== null) {\n\t\t/** @type {TemplateNode | null} */\n\t\tvar node = effect.nodes_start;\n\t\tvar end = effect.nodes_end;\n\n\t\twhile (node !== null) {\n\t\t\t/** @type {TemplateNode | null} */\n\t\t\tvar next = node === end ? null : /** @type {TemplateNode} */ (get_next_sibling(node));\n\n\t\t\tnode.remove();\n\t\t\tnode = next;\n\t\t}\n\n\t\tremoved = true;\n\t}\n\n\tdestroy_effect_children(effect, remove_dom && !removed);\n\tremove_reactions(effect, 0);\n\tset_signal_status(effect, DESTROYED);\n\n\tvar transitions = effect.transitions;\n\n\tif (transitions !== null) {\n\t\tfor (const transition of transitions) {\n\t\t\ttransition.stop();\n\t\t}\n\t}\n\n\texecute_effect_teardown(effect);\n\n\tvar parent = effect.parent;\n\n\t// If the parent doesn't have any children, then skip this work altogether\n\tif (parent !== null && parent.first !== null) {\n\t\tunlink_effect(effect);\n\t}\n\n\tif (DEV) {\n\t\teffect.component_function = null;\n\t}\n\n\t// `first` and `child` are nulled out in destroy_effect_children\n\t// we don't null out `parent` so that error propagation can work correctly\n\teffect.next =\n\t\teffect.prev =\n\t\teffect.teardown =\n\t\teffect.ctx =\n\t\teffect.deps =\n\t\teffect.fn =\n\t\teffect.nodes_start =\n\t\teffect.nodes_end =\n\t\t\tnull;\n}\n\n/**\n * Detach an effect from the effect tree, freeing up memory and\n * reducing the amount of work that happens on subsequent traversals\n * @param {Effect} effect\n */\nexport function unlink_effect(effect) {\n\tvar parent = effect.parent;\n\tvar prev = effect.prev;\n\tvar next = effect.next;\n\n\tif (prev !== null) prev.next = next;\n\tif (next !== null) next.prev = prev;\n\n\tif (parent !== null) {\n\t\tif (parent.first === effect) parent.first = next;\n\t\tif (parent.last === effect) parent.last = prev;\n\t}\n}\n\n/**\n * When a block effect is removed, we don't immediately destroy it or yank it\n * out of the DOM, because it might have transitions. Instead, we 'pause' it.\n * It stays around (in memory, and in the DOM) until outro transitions have\n * completed, and if the state change is reversed then we _resume_ it.\n * A paused effect does not update, and the DOM subtree becomes inert.\n * @param {Effect} effect\n * @param {() => void} [callback]\n */\nexport function pause_effect(effect, callback) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\n\tpause_children(effect, transitions, true);\n\n\trun_out_transitions(transitions, () => {\n\t\tdestroy_effect(effect);\n\t\tif (callback) callback();\n\t});\n}\n\n/**\n * @param {TransitionManager[]} transitions\n * @param {() => void} fn\n */\nexport function run_out_transitions(transitions, fn) {\n\tvar remaining = transitions.length;\n\tif (remaining > 0) {\n\t\tvar check = () => --remaining || fn();\n\t\tfor (var transition of transitions) {\n\t\t\ttransition.out(check);\n\t\t}\n\t} else {\n\t\tfn();\n\t}\n}\n\n/**\n * @param {Effect} effect\n * @param {TransitionManager[]} transitions\n * @param {boolean} local\n */\nexport function pause_children(effect, transitions, local) {\n\tif ((effect.f & INERT) !== 0) return;\n\teffect.f ^= INERT;\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransitions.push(transition);\n\t\t\t}\n\t\t}\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call pause_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tpause_children(child, transitions, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n}\n\n/**\n * The opposite of `pause_effect`. We call this if (for example)\n * `x` becomes falsy then truthy: `{#if x}...{/if}`\n * @param {Effect} effect\n */\nexport function resume_effect(effect) {\n\tresume_children(effect, true);\n}\n\n/**\n * @param {Effect} effect\n * @param {boolean} local\n */\nfunction resume_children(effect, local) {\n\tif ((effect.f & INERT) === 0) return;\n\teffect.f ^= INERT;\n\n\t// Ensure the effect is marked as clean again so that any dirty child\n\t// effects can schedule themselves for execution\n\tif ((effect.f & CLEAN) === 0) {\n\t\teffect.f ^= CLEAN;\n\t}\n\n\t// If a dependency of this effect changed while it was paused,\n\t// schedule the effect to update\n\tif (check_dirtiness(effect)) {\n\t\tset_signal_status(effect, DIRTY);\n\t\tschedule_effect(effect);\n\t}\n\n\tvar child = effect.first;\n\n\twhile (child !== null) {\n\t\tvar sibling = child.next;\n\t\tvar transparent = (child.f & EFFECT_TRANSPARENT) !== 0 || (child.f & BRANCH_EFFECT) !== 0;\n\t\t// TODO we don't need to call resume_children recursively with a linked list in place\n\t\t// it's slightly more involved though as we have to account for `transparent` changing\n\t\t// through the tree.\n\t\tresume_children(child, transparent ? local : false);\n\t\tchild = sibling;\n\t}\n\n\tif (effect.transitions !== null) {\n\t\tfor (const transition of effect.transitions) {\n\t\t\tif (transition.is_global || local) {\n\t\t\t\ttransition.in();\n\t\t\t}\n\t\t}\n\t}\n}\n","/** @import { ComponentContext } from '#client' */\n\nimport { DEV } from 'esm-env';\nimport { add_owner } from './dev/ownership.js';\nimport { lifecycle_outside_component } from '../shared/errors.js';\nimport { source } from './reactivity/sources.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction,\n\tuntrack\n} from './runtime.js';\nimport { effect } from './reactivity/effects.js';\nimport { legacy_mode_flag } from '../flags/index.js';\n\n/** @type {ComponentContext | null} */\nexport let component_context = null;\n\n/** @param {ComponentContext | null} context */\nexport function set_component_context(context) {\n\tcomponent_context = context;\n}\n\n/**\n * The current component function. Different from current component context:\n * ```html\n * <!-- App.svelte -->\n * <Foo>\n *   <Bar /> <!-- context == Foo.svelte, function == App.svelte -->\n * </Foo>\n * ```\n * @type {ComponentContext['function']}\n */\nexport let dev_current_component_function = null;\n\n/** @param {ComponentContext['function']} fn */\nexport function set_dev_current_component_function(fn) {\n\tdev_current_component_function = fn;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\tconst context_map = get_or_init_context_map('getContext');\n\tconst result = /** @type {T} */ (context_map.get(key));\n\treturn result;\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tconst context_map = get_or_init_context_map('setContext');\n\n\tif (DEV) {\n\t\t// When state is put into context, we treat as if it's global from now on.\n\t\t// We do for performance reasons (it's for example very expensive to call\n\t\t// getContext on a big object many times when part of a list component)\n\t\t// and danger of false positives.\n\t\tuntrack(() => add_owner(context, null, true));\n\t}\n\n\tcontext_map.set(key, context);\n\treturn context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\tconst context_map = get_or_init_context_map('hasContext');\n\treturn context_map.has(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\tconst context_map = get_or_init_context_map('getAllContexts');\n\treturn /** @type {T} */ (context_map);\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {any} runes\n * @param {Function} [fn]\n * @returns {void}\n */\nexport function push(props, runes = false, fn) {\n\tcomponent_context = {\n\t\tp: component_context,\n\t\tc: null,\n\t\te: null,\n\t\tm: false,\n\t\ts: props,\n\t\tx: null,\n\t\tl: null\n\t};\n\n\tif (legacy_mode_flag && !runes) {\n\t\tcomponent_context.l = {\n\t\t\ts: null,\n\t\t\tu: null,\n\t\t\tr1: [],\n\t\t\tr2: source(false)\n\t\t};\n\t}\n\n\tif (DEV) {\n\t\t// component function\n\t\tcomponent_context.function = fn;\n\t\tdev_current_component_function = fn;\n\t}\n}\n\n/**\n * @template {Record<string, any>} T\n * @param {T} [component]\n * @returns {T}\n */\nexport function pop(component) {\n\tconst context_stack_item = component_context;\n\tif (context_stack_item !== null) {\n\t\tif (component !== undefined) {\n\t\t\tcontext_stack_item.x = component;\n\t\t}\n\t\tconst component_effects = context_stack_item.e;\n\t\tif (component_effects !== null) {\n\t\t\tvar previous_effect = active_effect;\n\t\t\tvar previous_reaction = active_reaction;\n\t\t\tcontext_stack_item.e = null;\n\t\t\ttry {\n\t\t\t\tfor (var i = 0; i < component_effects.length; i++) {\n\t\t\t\t\tvar component_effect = component_effects[i];\n\t\t\t\t\tset_active_effect(component_effect.effect);\n\t\t\t\t\tset_active_reaction(component_effect.reaction);\n\t\t\t\t\teffect(component_effect.fn);\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tset_active_effect(previous_effect);\n\t\t\t\tset_active_reaction(previous_reaction);\n\t\t\t}\n\t\t}\n\t\tcomponent_context = context_stack_item.p;\n\t\tif (DEV) {\n\t\t\tdev_current_component_function = context_stack_item.p?.function ?? null;\n\t\t}\n\t\tcontext_stack_item.m = true;\n\t}\n\t// Micro-optimization: Don't set .a above to the empty object\n\t// so it can be garbage-collected when the return here is unused\n\treturn component || /** @type {T} */ ({});\n}\n\n/** @returns {boolean} */\nexport function is_runes() {\n\treturn !legacy_mode_flag || (component_context !== null && component_context.l === null);\n}\n\n/**\n * @param {string} name\n * @returns {Map<unknown, unknown>}\n */\nfunction get_or_init_context_map(name) {\n\tif (component_context === null) {\n\t\tlifecycle_outside_component(name);\n\t}\n\n\treturn (component_context.c ??= new Map(get_parent_context(component_context) || undefined));\n}\n\n/**\n * @param {ComponentContext} component_context\n * @returns {Map<unknown, unknown> | null}\n */\nfunction get_parent_context(component_context) {\n\tlet parent = component_context.p;\n\twhile (parent !== null) {\n\t\tconst context_map = parent.c;\n\t\tif (context_map !== null) {\n\t\t\treturn context_map;\n\t\t}\n\t\tparent = parent.p;\n\t}\n\treturn null;\n}\n","const regex_return_characters = /\\r/g;\n\n/**\n * @param {string} str\n * @returns {string}\n */\nexport function hash(str) {\n\tstr = str.replace(regex_return_characters, '');\n\tlet hash = 5381;\n\tlet i = str.length;\n\n\twhile (i--) hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n\treturn (hash >>> 0).toString(36);\n}\n\nconst VOID_ELEMENT_NAMES = [\n\t'area',\n\t'base',\n\t'br',\n\t'col',\n\t'command',\n\t'embed',\n\t'hr',\n\t'img',\n\t'input',\n\t'keygen',\n\t'link',\n\t'meta',\n\t'param',\n\t'source',\n\t'track',\n\t'wbr'\n];\n\n/**\n * Returns `true` if `name` is of a void element\n * @param {string} name\n */\nexport function is_void(name) {\n\treturn VOID_ELEMENT_NAMES.includes(name) || name.toLowerCase() === '!doctype';\n}\n\nconst RESERVED_WORDS = [\n\t'arguments',\n\t'await',\n\t'break',\n\t'case',\n\t'catch',\n\t'class',\n\t'const',\n\t'continue',\n\t'debugger',\n\t'default',\n\t'delete',\n\t'do',\n\t'else',\n\t'enum',\n\t'eval',\n\t'export',\n\t'extends',\n\t'false',\n\t'finally',\n\t'for',\n\t'function',\n\t'if',\n\t'implements',\n\t'import',\n\t'in',\n\t'instanceof',\n\t'interface',\n\t'let',\n\t'new',\n\t'null',\n\t'package',\n\t'private',\n\t'protected',\n\t'public',\n\t'return',\n\t'static',\n\t'super',\n\t'switch',\n\t'this',\n\t'throw',\n\t'true',\n\t'try',\n\t'typeof',\n\t'var',\n\t'void',\n\t'while',\n\t'with',\n\t'yield'\n];\n\n/**\n * Returns `true` if `word` is a reserved JavaScript keyword\n * @param {string} word\n */\nexport function is_reserved(word) {\n\treturn RESERVED_WORDS.includes(word);\n}\n\n/**\n * @param {string} name\n */\nexport function is_capture_event(name) {\n\treturn name.endsWith('capture') && name !== 'gotpointercapture' && name !== 'lostpointercapture';\n}\n\n/** List of Element events that will be delegated */\nconst DELEGATED_EVENTS = [\n\t'beforeinput',\n\t'click',\n\t'change',\n\t'dblclick',\n\t'contextmenu',\n\t'focusin',\n\t'focusout',\n\t'input',\n\t'keydown',\n\t'keyup',\n\t'mousedown',\n\t'mousemove',\n\t'mouseout',\n\t'mouseover',\n\t'mouseup',\n\t'pointerdown',\n\t'pointermove',\n\t'pointerout',\n\t'pointerover',\n\t'pointerup',\n\t'touchend',\n\t'touchmove',\n\t'touchstart'\n];\n\n/**\n * Returns `true` if `event_name` is a delegated event\n * @param {string} event_name\n */\nexport function is_delegated(event_name) {\n\treturn DELEGATED_EVENTS.includes(event_name);\n}\n\n/**\n * Attributes that are boolean, i.e. they are present or not present.\n */\nconst DOM_BOOLEAN_ATTRIBUTES = [\n\t'allowfullscreen',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'indeterminate',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'seamless',\n\t'selected',\n\t'webkitdirectory',\n\t'defer',\n\t'disablepictureinpicture',\n\t'disableremoteplayback'\n];\n\n/**\n * Returns `true` if `name` is a boolean attribute\n * @param {string} name\n */\nexport function is_boolean_attribute(name) {\n\treturn DOM_BOOLEAN_ATTRIBUTES.includes(name);\n}\n\n/**\n * @type {Record<string, string>}\n * List of attribute names that should be aliased to their property names\n * because they behave differently between setting them as an attribute and\n * setting them as a property.\n */\nconst ATTRIBUTE_ALIASES = {\n\t// no `class: 'className'` because we handle that separately\n\tformnovalidate: 'formNoValidate',\n\tismap: 'isMap',\n\tnomodule: 'noModule',\n\tplaysinline: 'playsInline',\n\treadonly: 'readOnly',\n\tdefaultvalue: 'defaultValue',\n\tdefaultchecked: 'defaultChecked',\n\tsrcobject: 'srcObject',\n\tnovalidate: 'noValidate',\n\tallowfullscreen: 'allowFullscreen',\n\tdisablepictureinpicture: 'disablePictureInPicture',\n\tdisableremoteplayback: 'disableRemotePlayback'\n};\n\n/**\n * @param {string} name\n */\nexport function normalize_attribute(name) {\n\tname = name.toLowerCase();\n\treturn ATTRIBUTE_ALIASES[name] ?? name;\n}\n\nconst DOM_PROPERTIES = [\n\t...DOM_BOOLEAN_ATTRIBUTES,\n\t'formNoValidate',\n\t'isMap',\n\t'noModule',\n\t'playsInline',\n\t'readOnly',\n\t'value',\n\t'volume',\n\t'defaultValue',\n\t'defaultChecked',\n\t'srcObject',\n\t'noValidate',\n\t'allowFullscreen',\n\t'disablePictureInPicture',\n\t'disableRemotePlayback'\n];\n\n/**\n * @param {string} name\n */\nexport function is_dom_property(name) {\n\treturn DOM_PROPERTIES.includes(name);\n}\n\nconst NON_STATIC_PROPERTIES = ['autofocus', 'muted', 'defaultValue', 'defaultChecked'];\n\n/**\n * Returns `true` if the given attribute cannot be set through the template\n * string, i.e. needs some kind of JavaScript handling to work.\n * @param {string} name\n */\nexport function cannot_be_set_statically(name) {\n\treturn NON_STATIC_PROPERTIES.includes(name);\n}\n\n/**\n * Subset of delegated events which should be passive by default.\n * These two are already passive via browser defaults on window, document and body.\n * But since\n * - we're delegating them\n * - they happen often\n * - they apply to mobile which is generally less performant\n * we're marking them as passive by default for other elements, too.\n */\nconst PASSIVE_EVENTS = ['touchstart', 'touchmove'];\n\n/**\n * Returns `true` if `name` is a passive event\n * @param {string} name\n */\nexport function is_passive_event(name) {\n\treturn PASSIVE_EVENTS.includes(name);\n}\n\nconst CONTENT_EDITABLE_BINDINGS = ['textContent', 'innerHTML', 'innerText'];\n\n/** @param {string} name */\nexport function is_content_editable_binding(name) {\n\treturn CONTENT_EDITABLE_BINDINGS.includes(name);\n}\n\nconst LOAD_ERROR_ELEMENTS = [\n\t'body',\n\t'embed',\n\t'iframe',\n\t'img',\n\t'link',\n\t'object',\n\t'script',\n\t'style',\n\t'track'\n];\n\n/**\n * Returns `true` if the element emits `load` and `error` events\n * @param {string} name\n */\nexport function is_load_error_element(name) {\n\treturn LOAD_ERROR_ELEMENTS.includes(name);\n}\n\nconst SVG_ELEMENTS = [\n\t'altGlyph',\n\t'altGlyphDef',\n\t'altGlyphItem',\n\t'animate',\n\t'animateColor',\n\t'animateMotion',\n\t'animateTransform',\n\t'circle',\n\t'clipPath',\n\t'color-profile',\n\t'cursor',\n\t'defs',\n\t'desc',\n\t'discard',\n\t'ellipse',\n\t'feBlend',\n\t'feColorMatrix',\n\t'feComponentTransfer',\n\t'feComposite',\n\t'feConvolveMatrix',\n\t'feDiffuseLighting',\n\t'feDisplacementMap',\n\t'feDistantLight',\n\t'feDropShadow',\n\t'feFlood',\n\t'feFuncA',\n\t'feFuncB',\n\t'feFuncG',\n\t'feFuncR',\n\t'feGaussianBlur',\n\t'feImage',\n\t'feMerge',\n\t'feMergeNode',\n\t'feMorphology',\n\t'feOffset',\n\t'fePointLight',\n\t'feSpecularLighting',\n\t'feSpotLight',\n\t'feTile',\n\t'feTurbulence',\n\t'filter',\n\t'font',\n\t'font-face',\n\t'font-face-format',\n\t'font-face-name',\n\t'font-face-src',\n\t'font-face-uri',\n\t'foreignObject',\n\t'g',\n\t'glyph',\n\t'glyphRef',\n\t'hatch',\n\t'hatchpath',\n\t'hkern',\n\t'image',\n\t'line',\n\t'linearGradient',\n\t'marker',\n\t'mask',\n\t'mesh',\n\t'meshgradient',\n\t'meshpatch',\n\t'meshrow',\n\t'metadata',\n\t'missing-glyph',\n\t'mpath',\n\t'path',\n\t'pattern',\n\t'polygon',\n\t'polyline',\n\t'radialGradient',\n\t'rect',\n\t'set',\n\t'solidcolor',\n\t'stop',\n\t'svg',\n\t'switch',\n\t'symbol',\n\t'text',\n\t'textPath',\n\t'tref',\n\t'tspan',\n\t'unknown',\n\t'use',\n\t'view',\n\t'vkern'\n];\n\n/** @param {string} name */\nexport function is_svg(name) {\n\treturn SVG_ELEMENTS.includes(name);\n}\n\nconst MATHML_ELEMENTS = [\n\t'annotation',\n\t'annotation-xml',\n\t'maction',\n\t'math',\n\t'merror',\n\t'mfrac',\n\t'mi',\n\t'mmultiscripts',\n\t'mn',\n\t'mo',\n\t'mover',\n\t'mpadded',\n\t'mphantom',\n\t'mprescripts',\n\t'mroot',\n\t'mrow',\n\t'ms',\n\t'mspace',\n\t'msqrt',\n\t'mstyle',\n\t'msub',\n\t'msubsup',\n\t'msup',\n\t'mtable',\n\t'mtd',\n\t'mtext',\n\t'mtr',\n\t'munder',\n\t'munderover',\n\t'semantics'\n];\n\n/** @param {string} name */\nexport function is_mathml(name) {\n\treturn MATHML_ELEMENTS.includes(name);\n}\n\nconst RUNES = /** @type {const} */ ([\n\t'$state',\n\t'$state.raw',\n\t'$state.snapshot',\n\t'$props',\n\t'$bindable',\n\t'$derived',\n\t'$derived.by',\n\t'$effect',\n\t'$effect.pre',\n\t'$effect.tracking',\n\t'$effect.root',\n\t'$inspect',\n\t'$inspect().with',\n\t'$inspect.trace',\n\t'$host'\n]);\n\n/**\n * @param {string} name\n * @returns {name is RUNES[number]}\n */\nexport function is_rune(name) {\n\treturn RUNES.includes(/** @type {RUNES[number]} */ (name));\n}\n\n/** List of elements that require raw contents and should not have SSR comments put in them */\nconst RAW_TEXT_ELEMENTS = /** @type {const} */ (['textarea', 'script', 'style', 'title']);\n\n/** @param {string} name */\nexport function is_raw_text_element(name) {\n\treturn RAW_TEXT_ELEMENTS.includes(/** @type {RAW_TEXT_ELEMENTS[number]} */ (name));\n}\n\n/**\n * Prevent devtools trying to make `location` a clickable link by inserting a zero-width space\n * @param {string | undefined} location\n */\nexport function sanitize_location(location) {\n\treturn location?.replace(/\\//g, '/\\u200b');\n}\n","import { teardown } from '../../../reactivity/effects.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../../runtime.js';\nimport { add_form_reset_listener } from '../misc.js';\n\n/**\n * Fires the handler once immediately (unless corresponding arg is set to `false`),\n * then listens to the given events until the render effect context is destroyed\n * @param {EventTarget} target\n * @param {Array<string>} events\n * @param {(event?: Event) => void} handler\n * @param {any} call_handler_immediately\n */\nexport function listen(target, events, handler, call_handler_immediately = true) {\n\tif (call_handler_immediately) {\n\t\thandler();\n\t}\n\n\tfor (var name of events) {\n\t\ttarget.addEventListener(name, handler);\n\t}\n\n\tteardown(() => {\n\t\tfor (var name of events) {\n\t\t\ttarget.removeEventListener(name, handler);\n\t\t}\n\t});\n}\n\n/**\n * @template T\n * @param {() => T} fn\n */\nexport function without_reactive_context(fn) {\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\treturn fn();\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * Listen to the given event, and then instantiate a global form reset listener if not already done,\n * to notify all bindings when the form is reset\n * @param {HTMLElement} element\n * @param {string} event\n * @param {(is_reset?: true) => void} handler\n * @param {(is_reset?: true) => void} [on_reset]\n */\nexport function listen_to_event_and_reset_event(element, event, handler, on_reset = handler) {\n\telement.addEventListener(event, () => without_reactive_context(handler));\n\t// @ts-expect-error\n\tconst prev = element.__on_r;\n\tif (prev) {\n\t\t// special case for checkbox that can have multiple binds (group & checked)\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => {\n\t\t\tprev();\n\t\t\ton_reset(true);\n\t\t};\n\t} else {\n\t\t// @ts-expect-error\n\t\telement.__on_r = () => on_reset(true);\n\t}\n\n\tadd_form_reset_listener();\n}\n","/** @import { Location } from 'locate-character' */\nimport { teardown } from '../../reactivity/effects.js';\nimport { define_property, is_array } from '../../../shared/utils.js';\nimport { hydrating } from '../hydration.js';\nimport { queue_micro_task } from '../task.js';\nimport { FILENAME } from '../../../../constants.js';\nimport * as w from '../../warnings.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { without_reactive_context } from './bindings/shared.js';\n\n/** @type {Set<string>} */\nexport const all_registered_events = new Set();\n\n/** @type {Set<(events: Array<string>) => void>} */\nexport const root_event_handles = new Set();\n\n/**\n * SSR adds onload and onerror attributes to catch those events before the hydration.\n * This function detects those cases, removes the attributes and replays the events.\n * @param {HTMLElement} dom\n */\nexport function replay_events(dom) {\n\tif (!hydrating) return;\n\n\tif (dom.onload) {\n\t\tdom.removeAttribute('onload');\n\t}\n\tif (dom.onerror) {\n\t\tdom.removeAttribute('onerror');\n\t}\n\t// @ts-expect-error\n\tconst event = dom.__e;\n\tif (event !== undefined) {\n\t\t// @ts-expect-error\n\t\tdom.__e = undefined;\n\t\tqueueMicrotask(() => {\n\t\t\tif (dom.isConnected) {\n\t\t\t\tdom.dispatchEvent(event);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * @param {string} event_name\n * @param {EventTarget} dom\n * @param {EventListener} [handler]\n * @param {AddEventListenerOptions} [options]\n */\nexport function create_event(event_name, dom, handler, options = {}) {\n\t/**\n\t * @this {EventTarget}\n\t */\n\tfunction target_handler(/** @type {Event} */ event) {\n\t\tif (!options.capture) {\n\t\t\t// Only call in the bubble phase, else delegated events would be called before the capturing events\n\t\t\thandle_event_propagation.call(dom, event);\n\t\t}\n\t\tif (!event.cancelBubble) {\n\t\t\treturn without_reactive_context(() => {\n\t\t\t\treturn handler?.call(this, event);\n\t\t\t});\n\t\t}\n\t}\n\n\t// Chrome has a bug where pointer events don't work when attached to a DOM element that has been cloned\n\t// with cloneNode() and the DOM element is disconnected from the document. To ensure the event works, we\n\t// defer the attachment till after it's been appended to the document. TODO: remove this once Chrome fixes\n\t// this bug. The same applies to wheel events and touch events.\n\tif (\n\t\tevent_name.startsWith('pointer') ||\n\t\tevent_name.startsWith('touch') ||\n\t\tevent_name === 'wheel'\n\t) {\n\t\tqueue_micro_task(() => {\n\t\t\tdom.addEventListener(event_name, target_handler, options);\n\t\t});\n\t} else {\n\t\tdom.addEventListener(event_name, target_handler, options);\n\t}\n\n\treturn target_handler;\n}\n\n/**\n * Attaches an event handler to an element and returns a function that removes the handler. Using this\n * rather than `addEventListener` will preserve the correct order relative to handlers added declaratively\n * (with attributes like `onclick`), which use event delegation for performance reasons\n *\n * @param {EventTarget} element\n * @param {string} type\n * @param {EventListener} handler\n * @param {AddEventListenerOptions} [options]\n */\nexport function on(element, type, handler, options = {}) {\n\tvar target_handler = create_event(type, element, handler, options);\n\n\treturn () => {\n\t\telement.removeEventListener(type, target_handler, options);\n\t};\n}\n\n/**\n * @param {string} event_name\n * @param {Element} dom\n * @param {EventListener} [handler]\n * @param {boolean} [capture]\n * @param {boolean} [passive]\n * @returns {void}\n */\nexport function event(event_name, dom, handler, capture, passive) {\n\tvar options = { capture, passive };\n\tvar target_handler = create_event(event_name, dom, handler, options);\n\n\t// @ts-ignore\n\tif (dom === document.body || dom === window || dom === document) {\n\t\tteardown(() => {\n\t\t\tdom.removeEventListener(event_name, target_handler, options);\n\t\t});\n\t}\n}\n\n/**\n * @param {Array<string>} events\n * @returns {void}\n */\nexport function delegate(events) {\n\tfor (var i = 0; i < events.length; i++) {\n\t\tall_registered_events.add(events[i]);\n\t}\n\n\tfor (var fn of root_event_handles) {\n\t\tfn(events);\n\t}\n}\n\n/**\n * @this {EventTarget}\n * @param {Event} event\n * @returns {void}\n */\nexport function handle_event_propagation(event) {\n\tvar handler_element = this;\n\tvar owner_document = /** @type {Node} */ (handler_element).ownerDocument;\n\tvar event_name = event.type;\n\tvar path = event.composedPath?.() || [];\n\tvar current_target = /** @type {null | Element} */ (path[0] || event.target);\n\n\t// composedPath contains list of nodes the event has propagated through.\n\t// We check __root to skip all nodes below it in case this is a\n\t// parent of the __root node, which indicates that there's nested\n\t// mounted apps. In this case we don't want to trigger events multiple times.\n\tvar path_idx = 0;\n\n\t// @ts-expect-error is added below\n\tvar handled_at = event.__root;\n\n\tif (handled_at) {\n\t\tvar at_idx = path.indexOf(handled_at);\n\t\tif (\n\t\t\tat_idx !== -1 &&\n\t\t\t(handler_element === document || handler_element === /** @type {any} */ (window))\n\t\t) {\n\t\t\t// This is the fallback document listener or a window listener, but the event was already handled\n\t\t\t// -> ignore, but set handle_at to document/window so that we're resetting the event\n\t\t\t// chain in case someone manually dispatches the same event object again.\n\t\t\t// @ts-expect-error\n\t\t\tevent.__root = handler_element;\n\t\t\treturn;\n\t\t}\n\n\t\t// We're deliberately not skipping if the index is higher, because\n\t\t// someone could create an event programmatically and emit it multiple times,\n\t\t// in which case we want to handle the whole propagation chain properly each time.\n\t\t// (this will only be a false negative if the event is dispatched multiple times and\n\t\t// the fallback document listener isn't reached in between, but that's super rare)\n\t\tvar handler_idx = path.indexOf(handler_element);\n\t\tif (handler_idx === -1) {\n\t\t\t// handle_idx can theoretically be -1 (happened in some JSDOM testing scenarios with an event listener on the window object)\n\t\t\t// so guard against that, too, and assume that everything was handled at this point.\n\t\t\treturn;\n\t\t}\n\n\t\tif (at_idx <= handler_idx) {\n\t\t\tpath_idx = at_idx;\n\t\t}\n\t}\n\n\tcurrent_target = /** @type {Element} */ (path[path_idx] || event.target);\n\t// there can only be one delegated event per element, and we either already handled the current target,\n\t// or this is the very first target in the chain which has a non-delegated listener, in which case it's safe\n\t// to handle a possible delegated event on it later (through the root delegation listener for example).\n\tif (current_target === handler_element) return;\n\n\t// Proxy currentTarget to correct target\n\tdefine_property(event, 'currentTarget', {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn current_target || owner_document;\n\t\t}\n\t});\n\n\t// This started because of Chromium issue https://chromestatus.com/feature/5128696823545856,\n\t// where removal or moving of of the DOM can cause sync `blur` events to fire, which can cause logic\n\t// to run inside the current `active_reaction`, which isn't what we want at all. However, on reflection,\n\t// it's probably best that all event handled by Svelte have this behaviour, as we don't really want\n\t// an event handler to run in the context of another reaction or effect.\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\n\ttry {\n\t\t/**\n\t\t * @type {unknown}\n\t\t */\n\t\tvar throw_error;\n\t\t/**\n\t\t * @type {unknown[]}\n\t\t */\n\t\tvar other_errors = [];\n\n\t\twhile (current_target !== null) {\n\t\t\t/** @type {null | Element} */\n\t\t\tvar parent_element =\n\t\t\t\tcurrent_target.assignedSlot ||\n\t\t\t\tcurrent_target.parentNode ||\n\t\t\t\t/** @type {any} */ (current_target).host ||\n\t\t\t\tnull;\n\n\t\t\ttry {\n\t\t\t\t// @ts-expect-error\n\t\t\t\tvar delegated = current_target['__' + event_name];\n\n\t\t\t\tif (delegated !== undefined && !(/** @type {any} */ (current_target).disabled)) {\n\t\t\t\t\tif (is_array(delegated)) {\n\t\t\t\t\t\tvar [fn, ...data] = delegated;\n\t\t\t\t\t\tfn.apply(current_target, [event, ...data]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelegated.call(current_target, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (throw_error) {\n\t\t\t\t\tother_errors.push(error);\n\t\t\t\t} else {\n\t\t\t\t\tthrow_error = error;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (event.cancelBubble || parent_element === handler_element || parent_element === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrent_target = parent_element;\n\t\t}\n\n\t\tif (throw_error) {\n\t\t\tfor (let error of other_errors) {\n\t\t\t\t// Throw the rest of the errors, one-by-one on a microtask\n\t\t\t\tqueueMicrotask(() => {\n\t\t\t\t\tthrow error;\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow throw_error;\n\t\t}\n\t} finally {\n\t\t// @ts-expect-error is used above\n\t\tevent.__root = handler_element;\n\t\t// @ts-ignore remove proxy on currentTarget\n\t\tdelete event.currentTarget;\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t}\n}\n\n/**\n * In dev, warn if an event handler is not a function, as it means the\n * user probably called the handler or forgot to add a `() =>`\n * @param {() => (event: Event, ...args: any) => void} thunk\n * @param {EventTarget} element\n * @param {[Event, ...any]} args\n * @param {any} component\n * @param {[number, number]} [loc]\n * @param {boolean} [remove_parens]\n */\nexport function apply(\n\tthunk,\n\telement,\n\targs,\n\tcomponent,\n\tloc,\n\thas_side_effects = false,\n\tremove_parens = false\n) {\n\tlet handler;\n\tlet error;\n\n\ttry {\n\t\thandler = thunk();\n\t} catch (e) {\n\t\terror = e;\n\t}\n\n\tif (typeof handler === 'function') {\n\t\thandler.apply(element, args);\n\t} else if (has_side_effects || handler != null || error) {\n\t\tconst filename = component?.[FILENAME];\n\t\tconst location = loc ? ` at ${filename}:${loc[0]}:${loc[1]}` : ` in ${filename}`;\n\n\t\tconst event_name = args[0].type;\n\t\tconst description = `\\`${event_name}\\` handler${location}`;\n\t\tconst suggestion = remove_parens ? 'remove the trailing `()`' : 'add a leading `() =>`';\n\n\t\tw.event_handler_invalid(description, suggestion);\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/** @param {string} html */\nexport function create_fragment_from_html(html) {\n\tvar elem = document.createElement('template');\n\telem.innerHTML = html;\n\treturn elem.content;\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from './hydration.js';\nimport { create_text, get_first_child } from './operations.js';\nimport { create_fragment_from_html } from './reconciler.js';\nimport { active_effect } from '../runtime.js';\nimport { TEMPLATE_FRAGMENT, TEMPLATE_USE_IMPORT_NODE } from '../../../constants.js';\n\n/**\n * @param {TemplateNode} start\n * @param {TemplateNode | null} end\n */\nexport function assign_nodes(start, end) {\n\tvar effect = /** @type {Effect} */ (active_effect);\n\tif (effect.nodes_start === null) {\n\t\teffect.nodes_start = start;\n\t\teffect.nodes_end = end;\n\t}\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template(content, flags) {\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar use_import_node = (flags & TEMPLATE_USE_IMPORT_NODE) !== 0;\n\n\t/** @type {Node} */\n\tvar node;\n\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (node === undefined) {\n\t\t\tnode = create_fragment_from_html(has_start ? content : '<!>' + content);\n\t\t\tif (!is_fragment) node = /** @type {Node} */ (get_first_child(node));\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (\n\t\t\tuse_import_node ? document.importNode(node, true) : node.cloneNode(true)\n\t\t);\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function template_with_script(content, flags) {\n\tvar fn = template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @param {'svg' | 'math'} ns\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function ns_template(content, flags, ns = 'svg') {\n\t/**\n\t * Whether or not the first item is a text/element node. If not, we need to\n\t * create an additional comment node to act as `effect.nodes.start`\n\t */\n\tvar has_start = !content.startsWith('<!>');\n\n\tvar is_fragment = (flags & TEMPLATE_FRAGMENT) !== 0;\n\tvar wrapped = `<${ns}>${has_start ? content : '<!>' + content}</${ns}>`;\n\n\t/** @type {Element | DocumentFragment} */\n\tvar node;\n\n\treturn () => {\n\t\tif (hydrating) {\n\t\t\tassign_nodes(hydrate_node, null);\n\t\t\treturn hydrate_node;\n\t\t}\n\n\t\tif (!node) {\n\t\t\tvar fragment = /** @type {DocumentFragment} */ (create_fragment_from_html(wrapped));\n\t\t\tvar root = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (is_fragment) {\n\t\t\t\tnode = document.createDocumentFragment();\n\t\t\t\twhile (get_first_child(root)) {\n\t\t\t\t\tnode.appendChild(/** @type {Node} */ (get_first_child(root)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(root));\n\t\t\t}\n\t\t}\n\n\t\tvar clone = /** @type {TemplateNode} */ (node.cloneNode(true));\n\n\t\tif (is_fragment) {\n\t\t\tvar start = /** @type {TemplateNode} */ (get_first_child(clone));\n\t\t\tvar end = /** @type {TemplateNode} */ (clone.lastChild);\n\n\t\t\tassign_nodes(start, end);\n\t\t} else {\n\t\t\tassign_nodes(clone, clone);\n\t\t}\n\n\t\treturn clone;\n\t};\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function svg_template_with_script(content, flags) {\n\tvar fn = ns_template(content, flags);\n\treturn () => run_scripts(/** @type {Element | DocumentFragment} */ (fn()));\n}\n\n/**\n * @param {string} content\n * @param {number} flags\n * @returns {() => Node | Node[]}\n */\n/*#__NO_SIDE_EFFECTS__*/\nexport function mathml_template(content, flags) {\n\treturn ns_template(content, flags, 'math');\n}\n\n/**\n * Creating a document fragment from HTML that contains script tags will not execute\n * the scripts. We need to replace the script tags with new ones so that they are executed.\n * @param {Element | DocumentFragment} node\n * @returns {Node | Node[]}\n */\nfunction run_scripts(node) {\n\t// scripts were SSR'd, in which case they will run\n\tif (hydrating) return node;\n\n\tconst is_fragment = node.nodeType === 11;\n\tconst scripts =\n\t\t/** @type {HTMLElement} */ (node).tagName === 'SCRIPT'\n\t\t\t? [/** @type {HTMLScriptElement} */ (node)]\n\t\t\t: node.querySelectorAll('script');\n\tconst effect = /** @type {Effect} */ (active_effect);\n\n\tfor (const script of scripts) {\n\t\tconst clone = document.createElement('script');\n\t\tfor (var attribute of script.attributes) {\n\t\t\tclone.setAttribute(attribute.name, attribute.value);\n\t\t}\n\n\t\tclone.textContent = script.textContent;\n\n\t\t// The script has changed - if it's at the edges, the effect now points at dead nodes\n\t\tif (is_fragment ? node.firstChild === script : node === script) {\n\t\t\teffect.nodes_start = clone;\n\t\t}\n\t\tif (is_fragment ? node.lastChild === script : node === script) {\n\t\t\teffect.nodes_end = clone;\n\t\t}\n\n\t\tscript.replaceWith(clone);\n\t}\n\treturn node;\n}\n\n/**\n * Don't mark this as side-effect-free, hydration needs to walk all nodes\n * @param {any} value\n */\nexport function text(value = '') {\n\tif (!hydrating) {\n\t\tvar t = create_text(value + '');\n\t\tassign_nodes(t, t);\n\t\treturn t;\n\t}\n\n\tvar node = hydrate_node;\n\n\tif (node.nodeType !== 3) {\n\t\t// if an {expression} is empty during SSR, we need to insert an empty text node\n\t\tnode.before((node = create_text()));\n\t\tset_hydrate_node(node);\n\t}\n\n\tassign_nodes(node, node);\n\treturn node;\n}\n\nexport function comment() {\n\t// we're not delegating to `template` here for performance reasons\n\tif (hydrating) {\n\t\tassign_nodes(hydrate_node, null);\n\t\treturn hydrate_node;\n\t}\n\n\tvar frag = document.createDocumentFragment();\n\tvar start = document.createComment('');\n\tvar anchor = create_text();\n\tfrag.append(start, anchor);\n\n\tassign_nodes(start, anchor);\n\n\treturn frag;\n}\n\n/**\n * Assign the created (or in hydration mode, traversed) dom elements to the current block\n * and insert the elements into the dom (in client mode).\n * @param {Text | Comment | Element} anchor\n * @param {DocumentFragment | Element} dom\n */\nexport function append(anchor, dom) {\n\tif (hydrating) {\n\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\thydrate_next();\n\t\treturn;\n\t}\n\n\tif (anchor === null) {\n\t\t// edge case — void `<svelte:element>` with content\n\t\treturn;\n\t}\n\n\tanchor.before(/** @type {Node} */ (dom));\n}\n","/** @import { ComponentContext, Effect, TemplateNode } from '#client' */\n/** @import { Component, ComponentType, SvelteComponent, MountOptions } from '../../index.js' */\nimport { DEV } from 'esm-env';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling,\n\tinit_operations\n} from './dom/operations.js';\nimport { HYDRATION_END, HYDRATION_ERROR, HYDRATION_START } from '../../constants.js';\nimport { active_effect } from './runtime.js';\nimport { push, pop, component_context } from './context.js';\nimport { component_root, branch } from './reactivity/effects.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tset_hydrate_node,\n\tset_hydrating\n} from './dom/hydration.js';\nimport { array_from } from '../shared/utils.js';\nimport {\n\tall_registered_events,\n\thandle_event_propagation,\n\troot_event_handles\n} from './dom/elements/events.js';\nimport { reset_head_anchor } from './dom/blocks/svelte-head.js';\nimport * as w from './warnings.js';\nimport * as e from './errors.js';\nimport { assign_nodes } from './dom/template.js';\nimport { is_passive_event } from '../../utils.js';\n\n/**\n * This is normally true — block effects should run their intro transitions —\n * but is false during hydration (unless `options.intro` is `true`) and\n * when creating the children of a `<svelte:element>` that just changed tag\n */\nexport let should_intro = true;\n\n/** @param {boolean} value */\nexport function set_should_intro(value) {\n\tshould_intro = value;\n}\n\n/**\n * @param {Element} text\n * @param {string} value\n * @returns {void}\n */\nexport function set_text(text, value) {\n\t// For objects, we apply string coercion (which might make things like $state array references in the template reactive) before diffing\n\tvar str = value == null ? '' : typeof value === 'object' ? value + '' : value;\n\t// @ts-expect-error\n\tif (str !== (text.__t ??= text.nodeValue)) {\n\t\t// @ts-expect-error\n\t\ttext.__t = str;\n\t\ttext.nodeValue = str + '';\n\t}\n}\n\n/**\n * Mounts a component to the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component.\n * Transitions will play during the initial render unless the `intro` option is set to `false`.\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {MountOptions<Props>} options\n * @returns {Exports}\n */\nexport function mount(component, options) {\n\treturn _mount(component, options);\n}\n\n/**\n * Hydrates a component on the given target and returns the exports and potentially the props (if compiled with `accessors: true`) of the component\n *\n * @template {Record<string, any>} Props\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<Props>> | Component<Props, Exports, any>} component\n * @param {{} extends Props ? {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops?: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t} : {\n * \t\ttarget: Document | Element | ShadowRoot;\n * \t\tprops: Props;\n * \t\tevents?: Record<string, (e: any) => any>;\n *  \tcontext?: Map<any, any>;\n * \t\tintro?: boolean;\n * \t\trecover?: boolean;\n * \t}} options\n * @returns {Exports}\n */\nexport function hydrate(component, options) {\n\tinit_operations();\n\toptions.intro = options.intro ?? false;\n\tconst target = options.target;\n\tconst was_hydrating = hydrating;\n\tconst previous_hydrate_node = hydrate_node;\n\n\ttry {\n\t\tvar anchor = /** @type {TemplateNode} */ (get_first_child(target));\n\t\twhile (\n\t\t\tanchor &&\n\t\t\t(anchor.nodeType !== 8 || /** @type {Comment} */ (anchor).data !== HYDRATION_START)\n\t\t) {\n\t\t\tanchor = /** @type {TemplateNode} */ (get_next_sibling(anchor));\n\t\t}\n\n\t\tif (!anchor) {\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(true);\n\t\tset_hydrate_node(/** @type {Comment} */ (anchor));\n\t\thydrate_next();\n\n\t\tconst instance = _mount(component, { ...options, anchor });\n\n\t\tif (\n\t\t\thydrate_node === null ||\n\t\t\thydrate_node.nodeType !== 8 ||\n\t\t\t/** @type {Comment} */ (hydrate_node).data !== HYDRATION_END\n\t\t) {\n\t\t\tw.hydration_mismatch();\n\t\t\tthrow HYDRATION_ERROR;\n\t\t}\n\n\t\tset_hydrating(false);\n\n\t\treturn /**  @type {Exports} */ (instance);\n\t} catch (error) {\n\t\tif (error === HYDRATION_ERROR) {\n\t\t\tif (options.recover === false) {\n\t\t\t\te.hydration_failed();\n\t\t\t}\n\n\t\t\t// If an error occured above, the operations might not yet have been initialised.\n\t\t\tinit_operations();\n\t\t\tclear_text_content(target);\n\n\t\t\tset_hydrating(false);\n\t\t\treturn mount(component, options);\n\t\t}\n\n\t\tthrow error;\n\t} finally {\n\t\tset_hydrating(was_hydrating);\n\t\tset_hydrate_node(previous_hydrate_node);\n\t\treset_head_anchor();\n\t}\n}\n\n/** @type {Map<string, number>} */\nconst document_listeners = new Map();\n\n/**\n * @template {Record<string, any>} Exports\n * @param {ComponentType<SvelteComponent<any>> | Component<any>} Component\n * @param {MountOptions} options\n * @returns {Exports}\n */\nfunction _mount(Component, { target, anchor, props = {}, events, context, intro = true }) {\n\tinit_operations();\n\n\tvar registered_events = new Set();\n\n\t/** @param {Array<string>} events */\n\tvar event_handle = (events) => {\n\t\tfor (var i = 0; i < events.length; i++) {\n\t\t\tvar event_name = events[i];\n\n\t\t\tif (registered_events.has(event_name)) continue;\n\t\t\tregistered_events.add(event_name);\n\n\t\t\tvar passive = is_passive_event(event_name);\n\n\t\t\t// Add the event listener to both the container and the document.\n\t\t\t// The container listener ensures we catch events from within in case\n\t\t\t// the outer content stops propagation of the event.\n\t\t\ttarget.addEventListener(event_name, handle_event_propagation, { passive });\n\n\t\t\tvar n = document_listeners.get(event_name);\n\n\t\t\tif (n === undefined) {\n\t\t\t\t// The document listener ensures we catch events that originate from elements that were\n\t\t\t\t// manually moved outside of the container (e.g. via manual portals).\n\t\t\t\tdocument.addEventListener(event_name, handle_event_propagation, { passive });\n\t\t\t\tdocument_listeners.set(event_name, 1);\n\t\t\t} else {\n\t\t\t\tdocument_listeners.set(event_name, n + 1);\n\t\t\t}\n\t\t}\n\t};\n\n\tevent_handle(array_from(all_registered_events));\n\troot_event_handles.add(event_handle);\n\n\t/** @type {Exports} */\n\t// @ts-expect-error will be defined because the render effect runs synchronously\n\tvar component = undefined;\n\n\tvar unmount = component_root(() => {\n\t\tvar anchor_node = anchor ?? target.appendChild(create_text());\n\n\t\tbranch(() => {\n\t\t\tif (context) {\n\t\t\t\tpush({});\n\t\t\t\tvar ctx = /** @type {ComponentContext} */ (component_context);\n\t\t\t\tctx.c = context;\n\t\t\t}\n\n\t\t\tif (events) {\n\t\t\t\t// We can't spread the object or else we'd lose the state proxy stuff, if it is one\n\t\t\t\t/** @type {any} */ (props).$$events = events;\n\t\t\t}\n\n\t\t\tif (hydrating) {\n\t\t\t\tassign_nodes(/** @type {TemplateNode} */ (anchor_node), null);\n\t\t\t}\n\n\t\t\tshould_intro = intro;\n\t\t\t// @ts-expect-error the public typings are not what the actual function looks like\n\t\t\tcomponent = Component(anchor_node, props) || {};\n\t\t\tshould_intro = true;\n\n\t\t\tif (hydrating) {\n\t\t\t\t/** @type {Effect} */ (active_effect).nodes_end = hydrate_node;\n\t\t\t}\n\n\t\t\tif (context) {\n\t\t\t\tpop();\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\tfor (var event_name of registered_events) {\n\t\t\t\ttarget.removeEventListener(event_name, handle_event_propagation);\n\n\t\t\t\tvar n = /** @type {number} */ (document_listeners.get(event_name));\n\n\t\t\t\tif (--n === 0) {\n\t\t\t\t\tdocument.removeEventListener(event_name, handle_event_propagation);\n\t\t\t\t\tdocument_listeners.delete(event_name);\n\t\t\t\t} else {\n\t\t\t\t\tdocument_listeners.set(event_name, n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\troot_event_handles.delete(event_handle);\n\n\t\t\tif (anchor_node !== anchor) {\n\t\t\t\tanchor_node.parentNode?.removeChild(anchor_node);\n\t\t\t}\n\t\t};\n\t});\n\n\tmounted_components.set(component, unmount);\n\treturn component;\n}\n\n/**\n * References of the components that were mounted or hydrated.\n * Uses a `WeakMap` to avoid memory leaks.\n */\nlet mounted_components = new WeakMap();\n\n/**\n * Unmounts a component that was previously mounted using `mount` or `hydrate`.\n *\n * Since 5.13.0, if `options.outro` is `true`, [transitions](https://svelte.dev/docs/svelte/transition) will play before the component is removed from the DOM.\n *\n * Returns a `Promise` that resolves after transitions have completed if `options.outro` is true, or immediately otherwise (prior to 5.13.0, returns `void`).\n *\n * ```js\n * import { mount, unmount } from 'svelte';\n * import App from './App.svelte';\n *\n * const app = mount(App, { target: document.body });\n *\n * // later...\n * unmount(app, { outro: true });\n * ```\n * @param {Record<string, any>} component\n * @param {{ outro?: boolean }} [options]\n * @returns {Promise<void>}\n */\nexport function unmount(component, options) {\n\tconst fn = mounted_components.get(component);\n\n\tif (fn) {\n\t\tmounted_components.delete(component);\n\t\treturn fn(options);\n\t}\n\n\tif (DEV) {\n\t\tw.lifecycle_double_unmount();\n\t}\n\n\treturn Promise.resolve();\n}\n","/** @import { EachItem, EachState, Effect, MaybeSource, Source, TemplateNode, TransitionManager, Value } from '#client' */\nimport {\n\tEACH_INDEX_REACTIVE,\n\tEACH_IS_ANIMATED,\n\tEACH_IS_CONTROLLED,\n\tEACH_ITEM_IMMUTABLE,\n\tEACH_ITEM_REACTIVE,\n\tHYDRATION_END,\n\tHYDRATION_START_ELSE\n} from '../../../../constants.js';\nimport {\n\thydrate_next,\n\thydrate_node,\n\thydrating,\n\tremove_nodes,\n\tset_hydrate_node,\n\tset_hydrating\n} from '../hydration.js';\nimport {\n\tclear_text_content,\n\tcreate_text,\n\tget_first_child,\n\tget_next_sibling\n} from '../operations.js';\nimport {\n\tblock,\n\tbranch,\n\tdestroy_effect,\n\trun_out_transitions,\n\tpause_children,\n\tpause_effect,\n\tresume_effect\n} from '../../reactivity/effects.js';\nimport { source, mutable_source, internal_set } from '../../reactivity/sources.js';\nimport { array_from, is_array } from '../../../shared/utils.js';\nimport { INERT } from '../../constants.js';\nimport { queue_micro_task } from '../task.js';\nimport { active_effect, active_reaction, get } from '../../runtime.js';\nimport { DEV } from 'esm-env';\nimport { derived_safe_equal } from '../../reactivity/deriveds.js';\n\n/**\n * The row of a keyed each block that is currently updating. We track this\n * so that `animate:` directives have something to attach themselves to\n * @type {EachItem | null}\n */\nexport let current_each_item = null;\n\n/** @param {EachItem | null} item */\nexport function set_current_each_item(item) {\n\tcurrent_each_item = item;\n}\n\n/**\n * @param {any} _\n * @param {number} i\n */\nexport function index(_, i) {\n\treturn i;\n}\n\n/**\n * Pause multiple effects simultaneously, and coordinate their\n * subsequent destruction. Used in each blocks\n * @param {EachState} state\n * @param {EachItem[]} items\n * @param {null | Node} controlled_anchor\n * @param {Map<any, EachItem>} items_map\n */\nfunction pause_effects(state, items, controlled_anchor, items_map) {\n\t/** @type {TransitionManager[]} */\n\tvar transitions = [];\n\tvar length = items.length;\n\n\tfor (var i = 0; i < length; i++) {\n\t\tpause_children(items[i].e, transitions, true);\n\t}\n\n\tvar is_controlled = length > 0 && transitions.length === 0 && controlled_anchor !== null;\n\t// If we have a controlled anchor, it means that the each block is inside a single\n\t// DOM element, so we can apply a fast-path for clearing the contents of the element.\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (\n\t\t\t/** @type {Element} */ (controlled_anchor).parentNode\n\t\t);\n\t\tclear_text_content(parent_node);\n\t\tparent_node.append(/** @type {Element} */ (controlled_anchor));\n\t\titems_map.clear();\n\t\tlink(state, items[0].prev, items[length - 1].next);\n\t}\n\n\trun_out_transitions(transitions, () => {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (!is_controlled) {\n\t\t\t\titems_map.delete(item.k);\n\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t}\n\t\t\tdestroy_effect(item.e, !is_controlled);\n\t\t}\n\t});\n}\n\n/**\n * @template V\n * @param {Element | Comment} node The next sibling node, or the parent node if this is a 'controlled' block\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @param {(value: V, index: number) => any} get_key\n * @param {(anchor: Node, item: MaybeSource<V>, index: MaybeSource<number>) => void} render_fn\n * @param {null | ((anchor: Node) => void)} fallback_fn\n * @returns {void}\n */\nexport function each(node, flags, get_collection, get_key, render_fn, fallback_fn = null) {\n\tvar anchor = node;\n\n\t/** @type {EachState} */\n\tvar state = { flags, items: new Map(), first: null };\n\n\tvar is_controlled = (flags & EACH_IS_CONTROLLED) !== 0;\n\n\tif (is_controlled) {\n\t\tvar parent_node = /** @type {Element} */ (node);\n\n\t\tanchor = hydrating\n\t\t\t? set_hydrate_node(/** @type {Comment | Text} */ (get_first_child(parent_node)))\n\t\t\t: parent_node.appendChild(create_text());\n\t}\n\n\tif (hydrating) {\n\t\thydrate_next();\n\t}\n\n\t/** @type {Effect | null} */\n\tvar fallback = null;\n\n\tvar was_empty = false;\n\n\t// TODO: ideally we could use derived for runes mode but because of the ability\n\t// to use a store which can be mutated, we can't do that here as mutating a store\n\t// will still result in the collection array being the same from the store\n\tvar each_array = derived_safe_equal(() => {\n\t\tvar collection = get_collection();\n\n\t\treturn is_array(collection) ? collection : collection == null ? [] : array_from(collection);\n\t});\n\n\tblock(() => {\n\t\tvar array = get(each_array);\n\t\tvar length = array.length;\n\n\t\tif (was_empty && length === 0) {\n\t\t\t// ignore updates if the array is empty,\n\t\t\t// and it already was empty on previous run\n\t\t\treturn;\n\t\t}\n\t\twas_empty = length === 0;\n\n\t\t/** `true` if there was a hydration mismatch. Needs to be a `let` or else it isn't treeshaken out */\n\t\tlet mismatch = false;\n\n\t\tif (hydrating) {\n\t\t\tvar is_else = /** @type {Comment} */ (anchor).data === HYDRATION_START_ELSE;\n\n\t\t\tif (is_else !== (length === 0)) {\n\t\t\t\t// hydration mismatch — remove the server-rendered DOM and start over\n\t\t\t\tanchor = remove_nodes();\n\n\t\t\t\tset_hydrate_node(anchor);\n\t\t\t\tset_hydrating(false);\n\t\t\t\tmismatch = true;\n\t\t\t}\n\t\t}\n\n\t\t// this is separate to the previous block because `hydrating` might change\n\t\tif (hydrating) {\n\t\t\t/** @type {EachItem | null} */\n\t\t\tvar prev = null;\n\n\t\t\t/** @type {EachItem} */\n\t\t\tvar item;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tif (\n\t\t\t\t\thydrate_node.nodeType === 8 &&\n\t\t\t\t\t/** @type {Comment} */ (hydrate_node).data === HYDRATION_END\n\t\t\t\t) {\n\t\t\t\t\t// The server rendered fewer items than expected,\n\t\t\t\t\t// so break out and continue appending non-hydrated items\n\t\t\t\t\tanchor = /** @type {Comment} */ (hydrate_node);\n\t\t\t\t\tmismatch = true;\n\t\t\t\t\tset_hydrating(false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvar value = array[i];\n\t\t\t\tvar key = get_key(value, i);\n\t\t\t\titem = create_item(\n\t\t\t\t\thydrate_node,\n\t\t\t\t\tstate,\n\t\t\t\t\tprev,\n\t\t\t\t\tnull,\n\t\t\t\t\tvalue,\n\t\t\t\t\tkey,\n\t\t\t\t\ti,\n\t\t\t\t\trender_fn,\n\t\t\t\t\tflags,\n\t\t\t\t\tget_collection\n\t\t\t\t);\n\t\t\t\tstate.items.set(key, item);\n\n\t\t\t\tprev = item;\n\t\t\t}\n\n\t\t\t// remove excess nodes\n\t\t\tif (length > 0) {\n\t\t\t\tset_hydrate_node(remove_nodes());\n\t\t\t}\n\t\t}\n\n\t\tif (!hydrating) {\n\t\t\treconcile(array, state, anchor, render_fn, flags, get_key, get_collection);\n\t\t}\n\n\t\tif (fallback_fn !== null) {\n\t\t\tif (length === 0) {\n\t\t\t\tif (fallback) {\n\t\t\t\t\tresume_effect(fallback);\n\t\t\t\t} else {\n\t\t\t\t\tfallback = branch(() => fallback_fn(anchor));\n\t\t\t\t}\n\t\t\t} else if (fallback !== null) {\n\t\t\t\tpause_effect(fallback, () => {\n\t\t\t\t\tfallback = null;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (mismatch) {\n\t\t\t// continue in hydration mode\n\t\t\tset_hydrating(true);\n\t\t}\n\n\t\t// When we mount the each block for the first time, the collection won't be\n\t\t// connected to this effect as the effect hasn't finished running yet and its deps\n\t\t// won't be assigned. However, it's possible that when reconciling the each block\n\t\t// that a mutation occurred and it's made the collection MAYBE_DIRTY, so reading the\n\t\t// collection again can provide consistency to the reactive graph again as the deriveds\n\t\t// will now be `CLEAN`.\n\t\tget(each_array);\n\t});\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * Add, remove, or reorder items output by an each block as its input changes\n * @template V\n * @param {Array<V>} array\n * @param {EachState} state\n * @param {Element | Comment | Text} anchor\n * @param {(anchor: Node, item: MaybeSource<V>, index: number | Source<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {(value: V, index: number) => any} get_key\n * @param {() => V[]} get_collection\n * @returns {void}\n */\nfunction reconcile(array, state, anchor, render_fn, flags, get_key, get_collection) {\n\tvar is_animated = (flags & EACH_IS_ANIMATED) !== 0;\n\tvar should_update = (flags & (EACH_ITEM_REACTIVE | EACH_INDEX_REACTIVE)) !== 0;\n\n\tvar length = array.length;\n\tvar items = state.items;\n\tvar first = state.first;\n\tvar current = first;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar seen;\n\n\t/** @type {EachItem | null} */\n\tvar prev = null;\n\n\t/** @type {undefined | Set<EachItem>} */\n\tvar to_animate;\n\n\t/** @type {EachItem[]} */\n\tvar matched = [];\n\n\t/** @type {EachItem[]} */\n\tvar stashed = [];\n\n\t/** @type {V} */\n\tvar value;\n\n\t/** @type {any} */\n\tvar key;\n\n\t/** @type {EachItem | undefined} */\n\tvar item;\n\n\t/** @type {number} */\n\tvar i;\n\n\tif (is_animated) {\n\t\tfor (i = 0; i < length; i += 1) {\n\t\t\tvalue = array[i];\n\t\t\tkey = get_key(value, i);\n\t\t\titem = items.get(key);\n\n\t\t\tif (item !== undefined) {\n\t\t\t\titem.a?.measure();\n\t\t\t\t(to_animate ??= new Set()).add(item);\n\t\t\t}\n\t\t}\n\t}\n\n\tfor (i = 0; i < length; i += 1) {\n\t\tvalue = array[i];\n\t\tkey = get_key(value, i);\n\t\titem = items.get(key);\n\n\t\tif (item === undefined) {\n\t\t\tvar child_anchor = current ? /** @type {TemplateNode} */ (current.e.nodes_start) : anchor;\n\n\t\t\tprev = create_item(\n\t\t\t\tchild_anchor,\n\t\t\t\tstate,\n\t\t\t\tprev,\n\t\t\t\tprev === null ? state.first : prev.next,\n\t\t\t\tvalue,\n\t\t\t\tkey,\n\t\t\t\ti,\n\t\t\t\trender_fn,\n\t\t\t\tflags,\n\t\t\t\tget_collection\n\t\t\t);\n\n\t\t\titems.set(key, prev);\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\tcurrent = prev.next;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (should_update) {\n\t\t\tupdate_item(item, value, i, flags);\n\t\t}\n\n\t\tif ((item.e.f & INERT) !== 0) {\n\t\t\tresume_effect(item.e);\n\t\t\tif (is_animated) {\n\t\t\t\titem.a?.unfix();\n\t\t\t\t(to_animate ??= new Set()).delete(item);\n\t\t\t}\n\t\t}\n\n\t\tif (item !== current) {\n\t\t\tif (seen !== undefined && seen.has(item)) {\n\t\t\t\tif (matched.length < stashed.length) {\n\t\t\t\t\t// more efficient to move later items to the front\n\t\t\t\t\tvar start = stashed[0];\n\t\t\t\t\tvar j;\n\n\t\t\t\t\tprev = start.prev;\n\n\t\t\t\t\tvar a = matched[0];\n\t\t\t\t\tvar b = matched[matched.length - 1];\n\n\t\t\t\t\tfor (j = 0; j < matched.length; j += 1) {\n\t\t\t\t\t\tmove(matched[j], start, anchor);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (j = 0; j < stashed.length; j += 1) {\n\t\t\t\t\t\tseen.delete(stashed[j]);\n\t\t\t\t\t}\n\n\t\t\t\t\tlink(state, a.prev, b.next);\n\t\t\t\t\tlink(state, prev, a);\n\t\t\t\t\tlink(state, b, start);\n\n\t\t\t\t\tcurrent = start;\n\t\t\t\t\tprev = b;\n\t\t\t\t\ti -= 1;\n\n\t\t\t\t\tmatched = [];\n\t\t\t\t\tstashed = [];\n\t\t\t\t} else {\n\t\t\t\t\t// more efficient to move earlier items to the back\n\t\t\t\t\tseen.delete(item);\n\t\t\t\t\tmove(item, current, anchor);\n\n\t\t\t\t\tlink(state, item.prev, item.next);\n\t\t\t\t\tlink(state, item, prev === null ? state.first : prev.next);\n\t\t\t\t\tlink(state, prev, item);\n\n\t\t\t\t\tprev = item;\n\t\t\t\t}\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tmatched = [];\n\t\t\tstashed = [];\n\n\t\t\twhile (current !== null && current.k !== key) {\n\t\t\t\t// If the each block isn't inert and an item has an effect that is already inert,\n\t\t\t\t// skip over adding it to our seen Set as the item is already being handled\n\t\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\t\t(seen ??= new Set()).add(current);\n\t\t\t\t}\n\t\t\t\tstashed.push(current);\n\t\t\t\tcurrent = current.next;\n\t\t\t}\n\n\t\t\tif (current === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\titem = current;\n\t\t}\n\n\t\tmatched.push(item);\n\t\tprev = item;\n\t\tcurrent = item.next;\n\t}\n\n\tif (current !== null || seen !== undefined) {\n\t\tvar to_destroy = seen === undefined ? [] : array_from(seen);\n\n\t\twhile (current !== null) {\n\t\t\t// If the each block isn't inert, then inert effects are currently outroing and will be removed once the transition is finished\n\t\t\tif ((current.e.f & INERT) === 0) {\n\t\t\t\tto_destroy.push(current);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\n\t\tvar destroy_length = to_destroy.length;\n\n\t\tif (destroy_length > 0) {\n\t\t\tvar controlled_anchor = (flags & EACH_IS_CONTROLLED) !== 0 && length === 0 ? anchor : null;\n\n\t\t\tif (is_animated) {\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.measure();\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < destroy_length; i += 1) {\n\t\t\t\t\tto_destroy[i].a?.fix();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpause_effects(state, to_destroy, controlled_anchor, items);\n\t\t}\n\t}\n\n\tif (is_animated) {\n\t\tqueue_micro_task(() => {\n\t\t\tif (to_animate === undefined) return;\n\t\t\tfor (item of to_animate) {\n\t\t\t\titem.a?.apply();\n\t\t\t}\n\t\t});\n\t}\n\n\t/** @type {Effect} */ (active_effect).first = state.first && state.first.e;\n\t/** @type {Effect} */ (active_effect).last = prev && prev.e;\n}\n\n/**\n * @param {EachItem} item\n * @param {any} value\n * @param {number} index\n * @param {number} type\n * @returns {void}\n */\nfunction update_item(item, value, index, type) {\n\tif ((type & EACH_ITEM_REACTIVE) !== 0) {\n\t\tinternal_set(item.v, value);\n\t}\n\n\tif ((type & EACH_INDEX_REACTIVE) !== 0) {\n\t\tinternal_set(/** @type {Value<number>} */ (item.i), index);\n\t} else {\n\t\titem.i = index;\n\t}\n}\n\n/**\n * @template V\n * @param {Node} anchor\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n * @param {V} value\n * @param {unknown} key\n * @param {number} index\n * @param {(anchor: Node, item: V | Source<V>, index: number | Value<number>, collection: () => V[]) => void} render_fn\n * @param {number} flags\n * @param {() => V[]} get_collection\n * @returns {EachItem}\n */\nfunction create_item(\n\tanchor,\n\tstate,\n\tprev,\n\tnext,\n\tvalue,\n\tkey,\n\tindex,\n\trender_fn,\n\tflags,\n\tget_collection\n) {\n\tvar previous_each_item = current_each_item;\n\tvar reactive = (flags & EACH_ITEM_REACTIVE) !== 0;\n\tvar mutable = (flags & EACH_ITEM_IMMUTABLE) === 0;\n\n\tvar v = reactive ? (mutable ? mutable_source(value) : source(value)) : value;\n\tvar i = (flags & EACH_INDEX_REACTIVE) === 0 ? index : source(index);\n\n\tif (DEV && reactive) {\n\t\t// For tracing purposes, we need to link the source signal we create with the\n\t\t// collection + index so that tracing works as intended\n\t\t/** @type {Value} */ (v).debug = () => {\n\t\t\tvar collection_index = typeof i === 'number' ? index : i.v;\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\t\t\tget_collection()[collection_index];\n\t\t};\n\t}\n\n\t/** @type {EachItem} */\n\tvar item = {\n\t\ti,\n\t\tv,\n\t\tk: key,\n\t\ta: null,\n\t\t// @ts-expect-error\n\t\te: null,\n\t\tprev,\n\t\tnext\n\t};\n\n\tcurrent_each_item = item;\n\n\ttry {\n\t\titem.e = branch(() => render_fn(anchor, v, i, get_collection), hydrating);\n\n\t\titem.e.prev = prev && prev.e;\n\t\titem.e.next = next && next.e;\n\n\t\tif (prev === null) {\n\t\t\tstate.first = item;\n\t\t} else {\n\t\t\tprev.next = item;\n\t\t\tprev.e.next = item.e;\n\t\t}\n\n\t\tif (next !== null) {\n\t\t\tnext.prev = item;\n\t\t\tnext.e.prev = item.e;\n\t\t}\n\n\t\treturn item;\n\t} finally {\n\t\tcurrent_each_item = previous_each_item;\n\t}\n}\n\n/**\n * @param {EachItem} item\n * @param {EachItem | null} next\n * @param {Text | Element | Comment} anchor\n */\nfunction move(item, next, anchor) {\n\tvar end = item.next ? /** @type {TemplateNode} */ (item.next.e.nodes_start) : anchor;\n\n\tvar dest = next ? /** @type {TemplateNode} */ (next.e.nodes_start) : anchor;\n\tvar node = /** @type {TemplateNode} */ (item.e.nodes_start);\n\n\twhile (node !== end) {\n\t\tvar next_node = /** @type {TemplateNode} */ (get_next_sibling(node));\n\t\tdest.before(node);\n\t\tnode = next_node;\n\t}\n}\n\n/**\n * @param {EachState} state\n * @param {EachItem | null} prev\n * @param {EachItem | null} next\n */\nfunction link(state, prev, next) {\n\tif (prev === null) {\n\t\tstate.first = next;\n\t} else {\n\t\tprev.next = next;\n\t\tprev.e.next = next && next.e;\n\t}\n\n\tif (next !== null) {\n\t\tnext.prev = prev;\n\t\tnext.e.prev = prev && prev.e;\n\t}\n}\n","/** @import { Effect, TemplateNode } from '#client' */\nimport { FILENAME, HYDRATION_ERROR } from '../../../../constants.js';\nimport { block, branch, destroy_effect } from '../../reactivity/effects.js';\nimport { hydrate_next, hydrate_node, hydrating, set_hydrate_node } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport { hash, sanitize_location } from '../../../../utils.js';\nimport { DEV } from 'esm-env';\nimport { dev_current_component_function } from '../../context.js';\nimport { get_first_child, get_next_sibling } from '../operations.js';\n\n/**\n * @param {Element} element\n * @param {string | null} server_hash\n * @param {string} value\n */\nfunction check_hash(element, server_hash, value) {\n\tif (!server_hash || server_hash === hash(String(value ?? ''))) return;\n\n\tlet location;\n\n\t// @ts-expect-error\n\tconst loc = element.__svelte_meta?.loc;\n\tif (loc) {\n\t\tlocation = `near ${loc.file}:${loc.line}:${loc.column}`;\n\t} else if (dev_current_component_function?.[FILENAME]) {\n\t\tlocation = `in ${dev_current_component_function[FILENAME]}`;\n\t}\n\n\tw.hydration_html_changed(sanitize_location(location));\n}\n\n/**\n * @param {Element | Text | Comment} node\n * @param {() => string} get_value\n * @param {boolean} svg\n * @param {boolean} mathml\n * @param {boolean} [skip_warning]\n * @returns {void}\n */\nexport function html(node, get_value, svg, mathml, skip_warning) {\n\tvar anchor = node;\n\n\tvar value = '';\n\n\t/** @type {Effect | undefined} */\n\tvar effect;\n\n\tblock(() => {\n\t\tif (value === (value = get_value() ?? '')) {\n\t\t\tif (hydrating) {\n\t\t\t\thydrate_next();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (effect !== undefined) {\n\t\t\tdestroy_effect(effect);\n\t\t\teffect = undefined;\n\t\t}\n\n\t\tif (value === '') return;\n\n\t\teffect = branch(() => {\n\t\t\tif (hydrating) {\n\t\t\t\t// We're deliberately not trying to repair mismatches between server and client,\n\t\t\t\t// as it's costly and error-prone (and it's an edge case to have a mismatch anyway)\n\t\t\t\tvar hash = /** @type {Comment} */ (hydrate_node).data;\n\t\t\t\tvar next = hydrate_next();\n\t\t\t\tvar last = next;\n\n\t\t\t\twhile (\n\t\t\t\t\tnext !== null &&\n\t\t\t\t\t(next.nodeType !== 8 || /** @type {Comment} */ (next).data !== '')\n\t\t\t\t) {\n\t\t\t\t\tlast = next;\n\t\t\t\t\tnext = /** @type {TemplateNode} */ (get_next_sibling(next));\n\t\t\t\t}\n\n\t\t\t\tif (next === null) {\n\t\t\t\t\tw.hydration_mismatch();\n\t\t\t\t\tthrow HYDRATION_ERROR;\n\t\t\t\t}\n\n\t\t\t\tif (DEV && !skip_warning) {\n\t\t\t\t\tcheck_hash(/** @type {Element} */ (next.parentNode), hash, value);\n\t\t\t\t}\n\n\t\t\t\tassign_nodes(hydrate_node, last);\n\t\t\t\tanchor = set_hydrate_node(next);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar html = value + '';\n\t\t\tif (svg) html = `<svg>${html}</svg>`;\n\t\t\telse if (mathml) html = `<math>${html}</math>`;\n\n\t\t\t// Don't use create_fragment_with_script_from_html here because that would mean script tags are executed.\n\t\t\t// @html is basically `.innerHTML = ...` and that doesn't execute scripts either due to security reasons.\n\t\t\t/** @type {DocumentFragment | Element} */\n\t\t\tvar node = create_fragment_from_html(html);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\tnode = /** @type {Element} */ (get_first_child(node));\n\t\t\t}\n\n\t\t\tassign_nodes(\n\t\t\t\t/** @type {TemplateNode} */ (get_first_child(node)),\n\t\t\t\t/** @type {TemplateNode} */ (node.lastChild)\n\t\t\t);\n\n\t\t\tif (svg || mathml) {\n\t\t\t\twhile (get_first_child(node)) {\n\t\t\t\t\tanchor.before(/** @type {Node} */ (get_first_child(node)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tanchor.before(node);\n\t\t\t}\n\t\t});\n\t});\n}\n","import { DEV } from 'esm-env';\nimport { queue_micro_task } from './task.js';\nimport { register_style } from '../dev/css.js';\n\n/**\n * @param {Node} anchor\n * @param {{ hash: string, code: string }} css\n */\nexport function append_styles(anchor, css) {\n\t// Use `queue_micro_task` to ensure `anchor` is in the DOM, otherwise getRootNode() will yield wrong results\n\tqueue_micro_task(() => {\n\t\tvar root = anchor.getRootNode();\n\n\t\tvar target = /** @type {ShadowRoot} */ (root).host\n\t\t\t? /** @type {ShadowRoot} */ (root)\n\t\t\t: /** @type {Document} */ (root).head ?? /** @type {Document} */ (root.ownerDocument).head;\n\n\t\t// Always querying the DOM is roughly the same perf as additionally checking for presence in a map first assuming\n\t\t// that you'll get cache hits half of the time, so we just always query the dom for simplicity and code savings.\n\t\tif (!target.querySelector('#' + css.hash)) {\n\t\t\tconst style = document.createElement('style');\n\t\t\tstyle.id = css.hash;\n\t\t\tstyle.textContent = css.code;\n\n\t\t\ttarget.appendChild(style);\n\n\t\t\tif (DEV) {\n\t\t\t\tregister_style(css.hash, style);\n\t\t\t}\n\t\t}\n\t});\n}\n","/** @import { ActionPayload } from '#client' */\nimport { effect, render_effect } from '../../reactivity/effects.js';\nimport { safe_not_equal } from '../../reactivity/equality.js';\nimport { deep_read_state, untrack } from '../../runtime.js';\n\n/**\n * @template P\n * @param {Element} dom\n * @param {(dom: Element, value?: P) => ActionPayload<P>} action\n * @param {() => P} [get_value]\n * @returns {void}\n */\nexport function action(dom, action, get_value) {\n\teffect(() => {\n\t\tvar payload = untrack(() => action(dom, get_value?.()) || {});\n\n\t\tif (get_value && payload?.update) {\n\t\t\tvar inited = false;\n\t\t\t/** @type {P} */\n\t\t\tvar prev = /** @type {any} */ ({}); // initialize with something so it's never equal on first run\n\n\t\t\trender_effect(() => {\n\t\t\t\tvar value = get_value();\n\n\t\t\t\t// Action's update method is coarse-grained, i.e. when anything in the passed value changes, update.\n\t\t\t\t// This works in legacy mode because of mutable_source being updated as a whole, but when using $state\n\t\t\t\t// together with actions and mutation, it wouldn't notice the change without a deep read.\n\t\t\t\tdeep_read_state(value);\n\n\t\t\t\tif (inited && safe_not_equal(prev, value)) {\n\t\t\t\t\tprev = value;\n\t\t\t\t\t/** @type {Function} */ (payload.update)(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tinited = true;\n\t\t}\n\n\t\tif (payload?.destroy) {\n\t\t\treturn () => /** @type {Function} */ (payload.destroy)();\n\t\t}\n\t});\n}\n","import { DEV } from 'esm-env';\nimport { hydrating, set_hydrating } from '../hydration.js';\nimport { get_descriptors, get_prototype_of } from '../../../shared/utils.js';\nimport { create_event, delegate } from './events.js';\nimport { add_form_reset_listener, autofocus } from './misc.js';\nimport * as w from '../../warnings.js';\nimport { LOADING_ATTR_SYMBOL } from '../../constants.js';\nimport { queue_idle_task } from '../task.js';\nimport { is_capture_event, is_delegated, normalize_attribute } from '../../../../utils.js';\nimport {\n\tactive_effect,\n\tactive_reaction,\n\tset_active_effect,\n\tset_active_reaction\n} from '../../runtime.js';\nimport { clsx } from '../../../shared/attributes.js';\n\n/**\n * The value/checked attribute in the template actually corresponds to the defaultValue property, so we need\n * to remove it upon hydration to avoid a bug when someone resets the form value.\n * @param {HTMLInputElement} input\n * @returns {void}\n */\nexport function remove_input_defaults(input) {\n\tif (!hydrating) return;\n\n\tvar already_removed = false;\n\n\t// We try and remove the default attributes later, rather than sync during hydration.\n\t// Doing it sync during hydration has a negative impact on performance, but deferring the\n\t// work in an idle task alleviates this greatly. If a form reset event comes in before\n\t// the idle callback, then we ensure the input defaults are cleared just before.\n\tvar remove_defaults = () => {\n\t\tif (already_removed) return;\n\t\talready_removed = true;\n\n\t\t// Remove the attributes but preserve the values\n\t\tif (input.hasAttribute('value')) {\n\t\t\tvar value = input.value;\n\t\t\tset_attribute(input, 'value', null);\n\t\t\tinput.value = value;\n\t\t}\n\n\t\tif (input.hasAttribute('checked')) {\n\t\t\tvar checked = input.checked;\n\t\t\tset_attribute(input, 'checked', null);\n\t\t\tinput.checked = checked;\n\t\t}\n\t};\n\n\t// @ts-expect-error\n\tinput.__on_r = remove_defaults;\n\tqueue_idle_task(remove_defaults);\n\tadd_form_reset_listener();\n}\n\n/**\n * @param {Element} element\n * @param {any} value\n */\nexport function set_value(element, value) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.value ===\n\t\t\t(attributes.value =\n\t\t\t\t// treat null and undefined the same for the initial value\n\t\t\t\tvalue ?? undefined) ||\n\t\t// @ts-expect-error\n\t\t// `progress` elements always need their value set when it's `0`\n\t\t(element.value === value && (value !== 0 || element.nodeName !== 'PROGRESS'))\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.value = value ?? '';\n}\n\n/**\n * @param {Element} element\n * @param {boolean} checked\n */\nexport function set_checked(element, checked) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (\n\t\tattributes.checked ===\n\t\t(attributes.checked =\n\t\t\t// treat null and undefined the same for the initial value\n\t\t\tchecked ?? undefined)\n\t) {\n\t\treturn;\n\t}\n\n\t// @ts-expect-error\n\telement.checked = checked;\n}\n\n/**\n * Sets the `selected` attribute on an `option` element.\n * Not set through the property because that doesn't reflect to the DOM,\n * which means it wouldn't be taken into account when a form is reset.\n * @param {HTMLOptionElement} element\n * @param {boolean} selected\n */\nexport function set_selected(element, selected) {\n\tif (selected) {\n\t\t// The selected option could've changed via user selection, and\n\t\t// setting the value without this check would set it back.\n\t\tif (!element.hasAttribute('selected')) {\n\t\t\telement.setAttribute('selected', '');\n\t\t}\n\t} else {\n\t\telement.removeAttribute('selected');\n\t}\n}\n\n/**\n * Applies the default checked property without influencing the current checked property.\n * @param {HTMLInputElement} element\n * @param {boolean} checked\n */\nexport function set_default_checked(element, checked) {\n\tconst existing_value = element.checked;\n\telement.defaultChecked = checked;\n\telement.checked = existing_value;\n}\n\n/**\n * Applies the default value property without influencing the current value property.\n * @param {HTMLInputElement | HTMLTextAreaElement} element\n * @param {string} value\n */\nexport function set_default_value(element, value) {\n\tconst existing_value = element.value;\n\telement.defaultValue = value;\n\telement.value = existing_value;\n}\n\n/**\n * @param {Element} element\n * @param {string} attribute\n * @param {string | null} value\n * @param {boolean} [skip_warning]\n */\nexport function set_attribute(element, attribute, value, skip_warning) {\n\t// @ts-expect-error\n\tvar attributes = (element.__attributes ??= {});\n\n\tif (hydrating) {\n\t\tattributes[attribute] = element.getAttribute(attribute);\n\n\t\tif (\n\t\t\tattribute === 'src' ||\n\t\t\tattribute === 'srcset' ||\n\t\t\t(attribute === 'href' && element.nodeName === 'LINK')\n\t\t) {\n\t\t\tif (!skip_warning) {\n\t\t\t\tcheck_src_in_dev_hydration(element, attribute, value ?? '');\n\t\t\t}\n\n\t\t\t// If we reset these attributes, they would result in another network request, which we want to avoid.\n\t\t\t// We assume they are the same between client and server as checking if they are equal is expensive\n\t\t\t// (we can't just compare the strings as they can be different between client and server but result in the\n\t\t\t// same url, so we would need to create hidden anchor elements to compare them)\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (attributes[attribute] === (attributes[attribute] = value)) return;\n\n\tif (attribute === 'style' && '__styles' in element) {\n\t\t// reset styles to force style: directive to update\n\t\telement.__styles = {};\n\t}\n\n\tif (attribute === 'loading') {\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = value;\n\t}\n\n\tif (value == null) {\n\t\telement.removeAttribute(attribute);\n\t} else if (typeof value !== 'string' && get_setters(element).includes(attribute)) {\n\t\t// @ts-ignore\n\t\telement[attribute] = value;\n\t} else {\n\t\telement.setAttribute(attribute, value);\n\t}\n}\n\n/**\n * @param {Element} dom\n * @param {string} attribute\n * @param {string} value\n */\nexport function set_xlink_attribute(dom, attribute, value) {\n\tdom.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @param {string} prop\n * @param {any} value\n */\nexport function set_custom_element_data(node, prop, value) {\n\t// We need to ensure that setting custom element props, which can\n\t// invoke lifecycle methods on other custom elements, does not also\n\t// associate those lifecycle methods with the current active reaction\n\t// or effect\n\tvar previous_reaction = active_reaction;\n\tvar previous_effect = active_effect;\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet was_hydrating = hydrating;\n\tif (hydrating) {\n\t\tset_hydrating(false);\n\t}\n\n\tset_active_reaction(null);\n\tset_active_effect(null);\n\ttry {\n\t\tif (\n\t\t\t// Don't compute setters for custom elements while they aren't registered yet,\n\t\t\t// because during their upgrade/instantiation they might add more setters.\n\t\t\t// Instead, fall back to a simple \"an object, then set as property\" heuristic.\n\t\t\tsetters_cache.has(node.nodeName) ||\n\t\t\t// customElements may not be available in browser extension contexts\n\t\t\t!customElements ||\n\t\t\tcustomElements.get(node.tagName.toLowerCase())\n\t\t\t\t? get_setters(node).includes(prop)\n\t\t\t\t: value && typeof value === 'object'\n\t\t) {\n\t\t\t// @ts-expect-error\n\t\t\tnode[prop] = value;\n\t\t} else {\n\t\t\t// We did getters etc checks already, stringify before passing to set_attribute\n\t\t\t// to ensure it doesn't invoke the same logic again, and potentially populating\n\t\t\t// the setters cache too early.\n\t\t\tset_attribute(node, prop, value == null ? value : String(value));\n\t\t}\n\t} finally {\n\t\tset_active_reaction(previous_reaction);\n\t\tset_active_effect(previous_effect);\n\t\tif (was_hydrating) {\n\t\t\tset_hydrating(true);\n\t\t}\n\t}\n}\n\n/**\n * Spreads attributes onto a DOM element, taking into account the currently set attributes\n * @param {Element & ElementCSSInlineStyle} element\n * @param {Record<string, any> | undefined} prev\n * @param {Record<string, any>} next New attributes - this function mutates this object\n * @param {string} [css_hash]\n * @param {boolean} [preserve_attribute_case]\n * @param {boolean} [is_custom_element]\n * @param {boolean} [skip_warning]\n * @returns {Record<string, any>}\n */\nexport function set_attributes(\n\telement,\n\tprev,\n\tnext,\n\tcss_hash,\n\tpreserve_attribute_case = false,\n\tis_custom_element = false,\n\tskip_warning = false\n) {\n\t// If we're hydrating but the custom element is from Svelte, and it already scaffolded,\n\t// then it might run block logic in hydration mode, which we have to prevent.\n\tlet is_hydrating_custom_element = hydrating && is_custom_element;\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(false);\n\t}\n\n\tvar current = prev || {};\n\tvar is_option_element = element.tagName === 'OPTION';\n\n\tfor (var key in prev) {\n\t\tif (!(key in next)) {\n\t\t\tnext[key] = null;\n\t\t}\n\t}\n\n\tif (next.class) {\n\t\tnext.class = clsx(next.class);\n\t}\n\n\tif (css_hash !== undefined) {\n\t\tnext.class = next.class ? next.class + ' ' + css_hash : css_hash;\n\t}\n\n\tvar setters = get_setters(element);\n\n\t// @ts-expect-error\n\tvar attributes = /** @type {Record<string, unknown>} **/ (element.__attributes ??= {});\n\n\t// since key is captured we use const\n\tfor (const key in next) {\n\t\t// let instead of var because referenced in a closure\n\t\tlet value = next[key];\n\n\t\t// Up here because we want to do this for the initial value, too, even if it's undefined,\n\t\t// and this wouldn't be reached in case of undefined because of the equality check below\n\t\tif (is_option_element && key === 'value' && value == null) {\n\t\t\t// The <option> element is a special case because removing the value attribute means\n\t\t\t// the value is set to the text content of the option element, and setting the value\n\t\t\t// to null or undefined means the value is set to the string \"null\" or \"undefined\".\n\t\t\t// To align with how we handle this case in non-spread-scenarios, this logic is needed.\n\t\t\t// There's a super-edge-case bug here that is left in in favor of smaller code size:\n\t\t\t// Because of the \"set missing props to null\" logic above, we can't differentiate\n\t\t\t// between a missing value and an explicitly set value of null or undefined. That means\n\t\t\t// that once set, the value attribute of an <option> element can't be removed. This is\n\t\t\t// a very rare edge case, and removing the attribute altogether isn't possible either\n\t\t\t// for the <option value={undefined}> case, so we're not losing any functionality here.\n\t\t\t// @ts-ignore\n\t\t\telement.value = element.__value = '';\n\t\t\tcurrent[key] = value;\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar prev_value = current[key];\n\t\tif (value === prev_value) continue;\n\n\t\tcurrent[key] = value;\n\n\t\tvar prefix = key[0] + key[1]; // this is faster than key.slice(0, 2)\n\t\tif (prefix === '$$') continue;\n\n\t\tif (prefix === 'on') {\n\t\t\t/** @type {{ capture?: true }} */\n\t\t\tconst opts = {};\n\t\t\tconst event_handle_key = '$$' + key;\n\t\t\tlet event_name = key.slice(2);\n\t\t\tvar delegated = is_delegated(event_name);\n\n\t\t\tif (is_capture_event(event_name)) {\n\t\t\t\tevent_name = event_name.slice(0, -7);\n\t\t\t\topts.capture = true;\n\t\t\t}\n\n\t\t\tif (!delegated && prev_value) {\n\t\t\t\t// Listening to same event but different handler -> our handle function below takes care of this\n\t\t\t\t// If we were to remove and add listeners in this case, it could happen that the event is \"swallowed\"\n\t\t\t\t// (the browser seems to not know yet that a new one exists now) and doesn't reach the handler\n\t\t\t\t// https://github.com/sveltejs/svelte/issues/11903\n\t\t\t\tif (value != null) continue;\n\n\t\t\t\telement.removeEventListener(event_name, current[event_handle_key], opts);\n\t\t\t\tcurrent[event_handle_key] = null;\n\t\t\t}\n\n\t\t\tif (value != null) {\n\t\t\t\tif (!delegated) {\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {any}\n\t\t\t\t\t * @param {Event} evt\n\t\t\t\t\t */\n\t\t\t\t\tfunction handle(evt) {\n\t\t\t\t\t\tcurrent[key].call(this, evt);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrent[event_handle_key] = create_event(event_name, element, handle, opts);\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\telement[`__${event_name}`] = value;\n\t\t\t\t\tdelegate([event_name]);\n\t\t\t\t}\n\t\t\t} else if (delegated) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[`__${event_name}`] = undefined;\n\t\t\t}\n\t\t} else if (key === 'style' && value != null) {\n\t\t\telement.style.cssText = value + '';\n\t\t} else if (key === 'autofocus') {\n\t\t\tautofocus(/** @type {HTMLElement} */ (element), Boolean(value));\n\t\t} else if (!is_custom_element && (key === '__value' || (key === 'value' && value != null))) {\n\t\t\t// @ts-ignore We're not running this for custom elements because __value is actually\n\t\t\t// how Lit stores the current value on the element, and messing with that would break things.\n\t\t\telement.value = element.__value = value;\n\t\t} else if (key === 'selected' && is_option_element) {\n\t\t\tset_selected(/** @type {HTMLOptionElement} */ (element), value);\n\t\t} else {\n\t\t\tvar name = key;\n\t\t\tif (!preserve_attribute_case) {\n\t\t\t\tname = normalize_attribute(name);\n\t\t\t}\n\n\t\t\tvar is_default = name === 'defaultValue' || name === 'defaultChecked';\n\n\t\t\tif (value == null && !is_custom_element && !is_default) {\n\t\t\t\tattributes[key] = null;\n\n\t\t\t\tif (name === 'value' || name === 'checked') {\n\t\t\t\t\t// removing value/checked also removes defaultValue/defaultChecked — preserve\n\t\t\t\t\tlet input = /** @type {HTMLInputElement} */ (element);\n\n\t\t\t\t\tif (name === 'value') {\n\t\t\t\t\t\tlet prev = input.defaultValue;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultValue = prev;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet prev = input.defaultChecked;\n\t\t\t\t\t\tinput.removeAttribute(name);\n\t\t\t\t\t\tinput.defaultChecked = prev;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\telement.removeAttribute(key);\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\tis_default ||\n\t\t\t\t(setters.includes(name) && (is_custom_element || typeof value !== 'string'))\n\t\t\t) {\n\t\t\t\t// @ts-ignore\n\t\t\t\telement[name] = value;\n\t\t\t} else if (typeof value !== 'function') {\n\t\t\t\tset_attribute(element, name, value);\n\t\t\t}\n\t\t}\n\t\tif (key === 'style' && '__styles' in element) {\n\t\t\t// reset styles to force style: directive to update\n\t\t\telement.__styles = {};\n\t\t}\n\t}\n\n\tif (is_hydrating_custom_element) {\n\t\tset_hydrating(true);\n\t}\n\n\treturn current;\n}\n\n/** @type {Map<string, string[]>} */\nvar setters_cache = new Map();\n\n/** @param {Element} element */\nfunction get_setters(element) {\n\tvar setters = setters_cache.get(element.nodeName);\n\tif (setters) return setters;\n\tsetters_cache.set(element.nodeName, (setters = []));\n\n\tvar descriptors;\n\tvar proto = element; // In the case of custom elements there might be setters on the instance\n\tvar element_proto = Element.prototype;\n\n\t// Stop at Element, from there on there's only unnecessary setters we're not interested in\n\t// Do not use contructor.name here as that's unreliable in some browser environments\n\twhile (element_proto !== proto) {\n\t\tdescriptors = get_descriptors(proto);\n\n\t\tfor (var key in descriptors) {\n\t\t\tif (descriptors[key].set) {\n\t\t\t\tsetters.push(key);\n\t\t\t}\n\t\t}\n\n\t\tproto = get_prototype_of(proto);\n\t}\n\n\treturn setters;\n}\n\n/**\n * @param {any} element\n * @param {string} attribute\n * @param {string} value\n */\nfunction check_src_in_dev_hydration(element, attribute, value) {\n\tif (!DEV) return;\n\tif (attribute === 'srcset' && srcset_url_equal(element, value)) return;\n\tif (src_url_equal(element.getAttribute(attribute) ?? '', value)) return;\n\n\tw.hydration_attribute_changed(\n\t\tattribute,\n\t\telement.outerHTML.replace(element.innerHTML, element.innerHTML && '...'),\n\t\tString(value)\n\t);\n}\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nfunction src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\treturn new URL(element_src, document.baseURI).href === new URL(url, document.baseURI).href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element\n * @param {string} srcset\n * @returns {boolean}\n */\nfunction srcset_url_equal(element, srcset) {\n\tvar element_urls = split_srcset(element.srcset);\n\tvar urls = split_srcset(srcset);\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/**\n * @param {HTMLImageElement} element\n * @returns {void}\n */\nexport function handle_lazy_img(element) {\n\t// If we're using an image that has a lazy loading attribute, we need to apply\n\t// the loading and src after the img element has been appended to the document.\n\t// Otherwise the lazy behaviour will not work due to our cloneNode heuristic for\n\t// templates.\n\tif (!hydrating && element.loading === 'lazy') {\n\t\tvar src = element.src;\n\t\t// @ts-expect-error\n\t\telement[LOADING_ATTR_SYMBOL] = null;\n\t\telement.loading = 'eager';\n\t\telement.removeAttribute('src');\n\t\trequestAnimationFrame(() => {\n\t\t\t// @ts-expect-error\n\t\t\tif (element[LOADING_ATTR_SYMBOL] !== 'eager') {\n\t\t\t\telement.loading = 'lazy';\n\t\t\t}\n\t\t\telement.src = src;\n\t\t});\n\t}\n}\n","import { hydrating } from '../hydration.js';\n\n/**\n * @param {SVGElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_svg_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {MathMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_mathml_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.getAttribute('class') === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.getAttribute('class') !== next_class_name)\n\t) {\n\t\tif (next_class_name === '') {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.setAttribute('class', next_class_name);\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @param {HTMLElement} dom\n * @param {string} value\n * @param {string} [hash]\n * @returns {void}\n */\nexport function set_class(dom, value, hash) {\n\t// @ts-expect-error need to add __className to patched prototype\n\tvar prev_class_name = dom.__className;\n\tvar next_class_name = to_class(value, hash);\n\n\tif (hydrating && dom.className === next_class_name) {\n\t\t// In case of hydration don't reset the class as it's already correct.\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t} else if (\n\t\tprev_class_name !== next_class_name ||\n\t\t(hydrating && dom.className !== next_class_name)\n\t) {\n\t\t// Removing the attribute when the value is only an empty string causes\n\t\t// peformance issues vs simply making the className an empty string. So\n\t\t// we should only remove the class if the the value is nullish.\n\t\tif (value == null && !hash) {\n\t\t\tdom.removeAttribute('class');\n\t\t} else {\n\t\t\tdom.className = next_class_name;\n\t\t}\n\n\t\t// @ts-expect-error need to add __className to patched prototype\n\t\tdom.__className = next_class_name;\n\t}\n}\n\n/**\n * @template V\n * @param {V} value\n * @param {string} [hash]\n * @returns {string | V}\n */\nfunction to_class(value, hash) {\n\treturn (value == null ? '' : value) + (hash ? ' ' + hash : '');\n}\n\n/**\n * @param {Element} dom\n * @param {string} class_name\n * @param {boolean} value\n * @returns {void}\n */\nexport function toggle_class(dom, class_name, value) {\n\tif (value) {\n\t\tif (dom.classList.contains(class_name)) return;\n\t\tdom.classList.add(class_name);\n\t} else {\n\t\tif (!dom.classList.contains(class_name)) return;\n\t\tdom.classList.remove(class_name);\n\t}\n}\n","import { STATE_SYMBOL } from '../../../constants.js';\nimport { effect, render_effect } from '../../../reactivity/effects.js';\nimport { untrack } from '../../../runtime.js';\nimport { queue_micro_task } from '../../task.js';\n\n/**\n * @param {any} bound_value\n * @param {Element} element_or_component\n * @returns {boolean}\n */\nfunction is_bound_this(bound_value, element_or_component) {\n\treturn (\n\t\tbound_value === element_or_component || bound_value?.[STATE_SYMBOL] === element_or_component\n\t);\n}\n\n/**\n * @param {any} element_or_component\n * @param {(value: unknown, ...parts: unknown[]) => void} update\n * @param {(...parts: unknown[]) => unknown} get_value\n * @param {() => unknown[]} [get_parts] Set if the this binding is used inside an each block,\n * \t\t\t\t\t\t\t\t\t\treturns all the parts of the each block context that are used in the expression\n * @returns {void}\n */\nexport function bind_this(element_or_component = {}, update, get_value, get_parts) {\n\teffect(() => {\n\t\t/** @type {unknown[]} */\n\t\tvar old_parts;\n\n\t\t/** @type {unknown[]} */\n\t\tvar parts;\n\n\t\trender_effect(() => {\n\t\t\told_parts = parts;\n\t\t\t// We only track changes to the parts, not the value itself to avoid unnecessary reruns.\n\t\t\tparts = get_parts?.() || [];\n\n\t\t\tuntrack(() => {\n\t\t\t\tif (element_or_component !== get_value(...parts)) {\n\t\t\t\t\tupdate(element_or_component, ...parts);\n\t\t\t\t\t// If this is an effect rerun (cause: each block context changes), then nullfiy the binding at\n\t\t\t\t\t// the previous position if it isn't already taken over by a different effect.\n\t\t\t\t\tif (old_parts && is_bound_this(get_value(...old_parts), element_or_component)) {\n\t\t\t\t\t\tupdate(null, ...old_parts);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn () => {\n\t\t\t// We cannot use effects in the teardown phase, we we use a microtask instead.\n\t\t\tqueue_micro_task(() => {\n\t\t\t\tif (parts && is_bound_this(get_value(...parts), element_or_component)) {\n\t\t\t\t\tupdate(null, ...parts);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t});\n\n\treturn element_or_component;\n}\n","import { tick } from 'svelte';\nimport { on } from 'svelte/events';\n\n/**\n * Trigger node displacement on pointerdown (via position.left & position.top)\n * @example\n *\n * Minimal usage\n *\n * ```html\n * <script>\n *   import { movable } from '@svelte-put/movable';\n * </script>\n *\n * <div use:movable>\n *   <!-- drag this div and move it freely around the screen -->\n * </div>\n * ```\n * @example\n *\n * A more typical & complex usage of `movable`: move a node\n * when user clicks and on a handle; and limit the movement within\n * a certain boundary.\n *\n * ```html\n * <script lang=\"ts\">\n *   import { movable } from '@svelte-put/movable';\n *\n *   let modal = false;\n *   let handleNode: HTMLElement;\n *   let containerNode: HTMLElement;\n * </script>\n *\n * <section bind:this={containerNode}>\n *   <!-- ... some content ... -->\n *\n *   {#if modal}\n *     <div\n *       use:movable={{\n *         limit: {\n *           delta: '20%',\n *           parent: containerNode,\n *         },\n *         handle: handleNode,\n *       }}\n *       onmovablestart={(event) => console.log('movable:start', event.detail.node, event.detail.position)}\n *       onmovableend={(event) => console.log('movable:end', event.detail.node, event.detail.position)}\n *     >\n *       <button bind:this={handleNode}>\n *          likely some 'move' icon\n *       </button>\n *\n *       <!-- ... some other modal content ... -->\n *     </div>\n *   {/if}\n *\n * </section>\n * ```\n *\n * Things that will happen in the above example:\n *\n * 1. on `pointerdown` of the handle (`button` element), a `movablestart` {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent | CustomEvent } is dispatched,\n *\n * 2. any `pointermove` event will tell `div` to move accordingly;\n *\n * 3. movement will be limited to the border of the `containerNode`, ±20% of the width & height of the `div` that the action is being used on,\n *\n * 4. `pointerup` event will stop the movement; a `movableend` {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent | CustomEvent } is dispatched.\n *\n *\n *\n * As with any svelte action, `movable` should be use with element and not component.\n *\n * ```html\n * <-- correct usage-->\n *  <div use:movable />\n *\n * <-- incorrect usage-->\n * <Component use:movable/>\n * ```\n *\n * It is recommended to use the `handle` option in {@link MovableParameters } to avoid unintended behavior.\n * If no `handle` is provided, the whole node is the handle and it might be difficult for\n * user to copy texts within the node.\n *\n * Be aware of side effects:\n *\n * - element.style.position is set to `relative` if not already 'absolute', 'relative', or 'fixed during the first time pointerdown is triggered\n *\n * - document.body.userSelect is set to `none` after `pointerdown` and restored on `pointerup`\n *\n * - document.body.cursor is set to `move` after `pointerdown` and restored on `pointerup`\n * @param {HTMLElement} node - HTMLElement to be moved\n * @param {import('./types.public').MovableParameter} param - svelte action parameters\n * @returns {import('./types.public').MovableActionReturn}\n */\nexport function movable(node, param = { enabled: true }) {\n\tlet { parent, normalizedDelta, handle, enabled, ignore, cursor } = input(node, param);\n\n\tconst lastMousePosition = { x: 0, y: 0 };\n\tconst lastNodePosition = { top: 0, left: 0 };\n\tlet ΣΔx = 0; // total displacement in x-axis\n\tlet ΣΔy = 0; // total displacement in y-axis\n\n\t/**\n\t * @returns {HTMLElement[]}\n\t */\n\tfunction getIgnoredElements() {\n\t\treturn ignore ? Array.from(handle.querySelectorAll(ignore)) : [];\n\t}\n\n\t/**\n\t * @param {PointerEvent} event\n\t */\n\tfunction updateLastMousePosition(event) {\n\t\tlastMousePosition.x = event.clientX;\n\t\tlastMousePosition.y = event.clientY;\n\t}\n\n\t/**\n\t * @param {typeof lastNodePosition} param0\n\t */\n\tfunction updateLastNodePosition({ top, left }) {\n\t\tlastNodePosition.top = top;\n\t\tlastNodePosition.left = left;\n\t}\n\n\t/**\n\t * @param {PointerEvent} event\n\t */\n\tfunction move(event) {\n\t\tconst nodeBoundingRect = node.getBoundingClientRect();\n\n\t\t// TODO: perhaps can improve perf by doing this earlier outside move (on 'resize'??)\n\t\t/** @type {number | undefined} */\n\t\tlet boundX = undefined;\n\t\tif (normalizedDelta.x) {\n\t\t\tswitch (normalizedDelta.x?.unit) {\n\t\t\t\tcase '%':\n\t\t\t\t\tboundX = (normalizedDelta.x.value * nodeBoundingRect.width) / 100;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'px':\n\t\t\t\t\tboundX = normalizedDelta.x.value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t/** @type {number | undefined} */\n\t\tlet boundY = undefined;\n\t\tif (normalizedDelta.y) {\n\t\t\tswitch (normalizedDelta.y.unit) {\n\t\t\t\tcase '%':\n\t\t\t\t\tboundY = (normalizedDelta.y.value * nodeBoundingRect.height) / 100;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'px':\n\t\t\t\t\tboundY = normalizedDelta.y.value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tconst Δx = event.clientX - lastMousePosition.x;\n\t\tconst Δy = event.clientY - lastMousePosition.y;\n\t\tupdateLastMousePosition(event);\n\n\t\tlet left = lastNodePosition.left;\n\t\tif (boundX !== 0) {\n\t\t\tleft += Δx;\n\t\t}\n\t\tlet top = lastNodePosition.top;\n\t\tif (boundY !== 0) {\n\t\t\ttop += Δy;\n\t\t}\n\n\t\tif (parent) {\n\t\t\t/** @type {Pick<DOMRectReadOnly, 'top' | 'bottom' | 'left' | 'right'>} */\n\t\t\tlet insideBoundingRect;\n\t\t\tif (parent === 'screen') {\n\t\t\t\tinsideBoundingRect = {\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: window.innerHeight,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: window.innerWidth,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tinsideBoundingRect = parent.getBoundingClientRect();\n\t\t\t}\n\n\t\t\tif (boundX !== 0) {\n\t\t\t\tconst rBoundX = boundX ?? 0;\n\t\t\t\tconst newAbsLeft = nodeBoundingRect.left + Δx + rBoundX;\n\t\t\t\tif (newAbsLeft < insideBoundingRect.left) {\n\t\t\t\t\t// out of bound from the left\n\t\t\t\t\tleft += insideBoundingRect.left - newAbsLeft;\n\t\t\t\t} else {\n\t\t\t\t\tconst newAbsRight = nodeBoundingRect.right + Δx - rBoundX;\n\t\t\t\t\tif (newAbsRight > insideBoundingRect.right) {\n\t\t\t\t\t\t// out of bound from the right\n\t\t\t\t\t\tleft -= newAbsRight - insideBoundingRect.right;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (boundY !== 0) {\n\t\t\t\tconst rBoundY = boundY ?? 0;\n\t\t\t\tconst newAbsTop = nodeBoundingRect.top + Δy + rBoundY;\n\t\t\t\tif (newAbsTop < insideBoundingRect.top) {\n\t\t\t\t\t// out of bound from the top\n\t\t\t\t\ttop += insideBoundingRect.top - newAbsTop;\n\t\t\t\t} else {\n\t\t\t\t\tconst newAbsBottom = nodeBoundingRect.bottom + Δy - rBoundY;\n\t\t\t\t\tif (newAbsBottom > insideBoundingRect.bottom) {\n\t\t\t\t\t\t// out of bound from the bottom\n\t\t\t\t\t\ttop -= newAbsBottom - insideBoundingRect.bottom;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (boundX) {\n\t\t\t\tconst newΣΔx = ΣΔx + left - lastNodePosition.left;\n\t\t\t\tif (newΣΔx > boundX) {\n\t\t\t\t\t// out of bound from the right\n\t\t\t\t\tleft -= newΣΔx - boundX;\n\t\t\t\t} else if (newΣΔx < -boundX) {\n\t\t\t\t\t// out of bound from the left\n\t\t\t\t\tleft -= newΣΔx + boundX;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (boundY) {\n\t\t\t\tconst newΣΔy = ΣΔy + top - lastNodePosition.top;\n\t\t\t\tif (newΣΔy > boundY) {\n\t\t\t\t\t// out of bound from the top\n\t\t\t\t\ttop -= newΣΔy - boundY;\n\t\t\t\t} else if (newΣΔy < -boundY) {\n\t\t\t\t\t// out of bound from the bottom\n\t\t\t\t\ttop -= newΣΔy + boundY;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (left !== lastNodePosition.left) {\n\t\t\tnode.style.left = `${left}px`;\n\t\t}\n\t\tif (top !== lastNodePosition.top) {\n\t\t\tnode.style.top = `${top}px`;\n\t\t}\n\n\t\tΣΔx += left - lastNodePosition.left;\n\t\tΣΔy += top - lastNodePosition.top;\n\t\tupdateLastNodePosition({ top, left });\n\t}\n\n\t/** @type {Array<() => void>} */\n\tlet offPointerEvents = [];\n\tfunction end() {\n\t\tdocument.body.style.userSelect = '';\n\t\tif (cursor) {\n\t\t\tif (document.body.style.cursor === 'grabbing') {\n\t\t\t\tdocument.body.style.removeProperty('cursor');\n\t\t\t}\n\t\t\thandle.style.cursor = 'grab';\n\t\t}\n\t\toffPointerEvents.forEach((off) => off());\n\t\toffPointerEvents = [];\n\n\t\t/** @type {import('./types.public').MovableEventDetail} */\n\t\tconst detail = { node, position: lastNodePosition };\n\t\tnode.dispatchEvent(new CustomEvent('movableend', { detail }));\n\t}\n\n\t/**\n\t * @param {PointerEvent} event\n\t */\n\tfunction start(event) {\n\t\t// if (event.target?.hasPointerCapture(event.pointerId)) {\n\t\t//   event.target?.releasePointerCapture(event.pointerId);\n\t\t// }\n\t\tconst ignoredElements = getIgnoredElements();\n\t\tif (\n\t\t\tignoredElements.some((node) => node.isSameNode(/** @type {HTMLElement} */ (event.target)))\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle(node);\n\n\t\t// init position\n\t\tconst regex = '^[-0-9]+';\n\t\tconst left = parseInt(computedStyles.getPropertyValue('left').match(regex)?.[0] ?? '0');\n\t\tconst top = parseInt(computedStyles.getPropertyValue('top').match(regex)?.[0] ?? '0');\n\t\tupdateLastNodePosition({ left, top });\n\n\t\t/** @type {import('./types.public').MovableEventDetail} */\n\t\tconst detail = { node, position: lastNodePosition };\n\t\tnode.dispatchEvent(new CustomEvent('movablestart', { detail }));\n\n\t\t// init position style\n\t\tconst position = computedStyles.getPropertyValue('position');\n\t\tif (position !== 'relative' && position !== 'absolute' && position !== 'fixed') {\n\t\t\tnode.style.position = 'relative';\n\t\t}\n\n\t\tupdateLastMousePosition(event);\n\n\t\tdocument.body.style.userSelect = 'none';\n\t\tif (cursor) {\n\t\t\tdocument.body.style.cursor = 'grabbing';\n\t\t\thandle.style.cursor = 'grabbing';\n\t\t}\n\t\toffPointerEvents.push(on(window, 'pointermove', /** @type {EventListener} */(move)));\n\t\toffPointerEvents.push(on(window, 'pointerup', end));\n\t\toffPointerEvents.push(on(window, 'pointercancel', end));\n\t}\n\n\tfunction addStyles() {\n\t\thandle.style.touchAction = 'none';\n\t\tif (cursor) {\n\t\t\thandle.style.cursor = 'grab';\n\t\t\tconst ignoredElements = getIgnoredElements();\n\t\t\tfor (const e of ignoredElements) {\n\t\t\t\tif (!e.style.cursor) {\n\t\t\t\t\te.style.cursor = 'auto';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfunction removeStyles() {\n\t\thandle.style.removeProperty('touch-action');\n\t\tif (cursor) {\n\t\t\tif (handle?.style.cursor === 'grab') {\n\t\t\t\thandle.style.removeProperty('cursor');\n\t\t\t}\n\t\t\tconst ignoredElements = getIgnoredElements();\n\t\t\tfor (const e of ignoredElements) {\n\t\t\t\tif (e.style.cursor === 'auto') {\n\t\t\t\t\te.style.removeProperty('cursor');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {undefined | (() => void)} */\n\tlet offPointerDownEvent;\n\tif (enabled) {\n\t\toffPointerDownEvent = on(handle, 'pointerdown', start, { capture: true });\n\t\ttick().then(() => {\n\t\t\taddStyles();\n\t\t});\n\t}\n\treturn {\n\t\tupdate(update) {\n\t\t\tremoveStyles();\n\t\t\toffPointerDownEvent?.();\n\t\t\t({ parent, normalizedDelta, handle, enabled, ignore, cursor } = input(node, update));\n\n\t\t\tif (enabled) {\n\t\t\t\toffPointerDownEvent = on(handle, 'pointerdown', start, { capture: true });\n\t\t\t\ttick().then(() => {\n\t\t\t\t\taddStyles();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdestroy() {\n\t\t\toffPointerDownEvent?.();\n\t\t\tremoveStyles();\n\t\t},\n\t};\n}\n\n/**\n * @package\n * @typedef {{\n *  unit: 'px' | '%';\n *  value: number;\n * }} NormalizedLimit\n * MovableLimit interface normalized to use in runtime\n * @typedef {'px' | '%'} SpacingUnit\n * @typedef {'x' | 'y'} Axis\n */\n\n/**\n * @package\n * @param {import('./types.public').MovableLimit['delta']} delta - MovableLimit to normalize\n * @returns {{ x?: NormalizedLimit, y?: NormalizedLimit }}\n */\nexport function normalizeDelta(delta) {\n\t/** @type {NormalizedLimit | undefined} */\n\t// const x = { unit: 'px', value: 0 };\n\tlet x = undefined;\n\t/** @type {NormalizedLimit | undefined} */\n\t// const y = { unit: 'px', value: 0 };\n\tlet y = undefined;\n\n\tif (delta) {\n\t\tif (typeof delta === 'number') {\n\t\t\tx = y = {\n\t\t\t\tunit: 'px',\n\t\t\t\tvalue: 0,\n\t\t\t};\n\t\t} else if (typeof delta === 'string') {\n\t\t\tx = y = {\n\t\t\t\tunit: extractUnit(delta),\n\t\t\t\tvalue: parseInt(delta, 10),\n\t\t\t};\n\t\t} else {\n\t\t\tif (delta.x === 0) {\n\t\t\t\tx = {\n\t\t\t\t\tunit: 'px',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t};\n\t\t\t} else if (delta.x !== undefined) {\n\t\t\t\tx = {\n\t\t\t\t\tunit: extractUnit(delta.x, 'x'),\n\t\t\t\t\tvalue: parseInt(delta.x, 10),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif (delta.y === 0) {\n\t\t\t\ty = {\n\t\t\t\t\tunit: 'px',\n\t\t\t\t\tvalue: 0,\n\t\t\t\t};\n\t\t\t} else if (delta.y !== undefined) {\n\t\t\t\ty = {\n\t\t\t\t\tunit: extractUnit(delta.y, 'y'),\n\t\t\t\t\tvalue: parseInt(delta.y, 10),\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { x, y };\n}\n\n/**\n * @package\n * @param {string} text\n * @param {Axis | undefined} axis\n * @returns {SpacingUnit}\n */\nfunction extractUnit(text, axis = undefined) {\n\t/** @type {SpacingUnit} */\n\tlet unit = 'px';\n\tif (text === '0') {\n\t\tunit = 'px';\n\t}\n\tif (text.slice(-1) === '%') {\n\t\tunit = '%';\n\t} else if (text.slice(-2) === 'px') {\n\t\tunit = 'px';\n\t} else {\n\t\tthrow new Error(`Invalid delta ${axis ?? ''} unit. Only 'px' and '%' are supported.`);\n\t}\n\treturn unit;\n}\n\n/**\n *\n * @package\n * @param {HTMLElement} node\n * @param {import('./types.public').MovableParameter} param\n * @returns {{\n * \tenabled: boolean;\n * \tparent: HTMLElement | \"screen\" | undefined;\n * \tnormalizedDelta: {\n\t* \tx?: NormalizedLimit | undefined;\n\t* \ty?: NormalizedLimit | undefined;\n * \t};\n * \thandle: HTMLElement;\n * \tignore: string;\n * \tcursor: boolean;\n * }}\n */\nexport function input(node, param = {}) {\n\treturn {\n\t\tenabled: param.enabled ?? true,\n\t\tparent: param.limit?.parent,\n\t\tnormalizedDelta: normalizeDelta(param.limit?.delta),\n\t\thandle: param.handle ?? param.trigger ?? node,\n\t\tignore: (param.ignore\n\t\t\t? typeof param.ignore === 'string'\n\t\t\t\t? [param.ignore]\n\t\t\t\t: param.ignore\n\t\t\t: []\n\t\t).join(','),\n\t\tcursor: param.cursor ?? true,\n\t};\n}\n\n/**\n * Deprecated, use `MovableEventDetail` instead\n * @typedef {import('./types.public').MovableEventDetail} MovableEventDetails\n */\n\n/**\n * Deprecated, use `MovableParameter` and `MovableConfig` instead\n * @typedef {import('./types.public').MovableConfig} MovableParameters\n */\n\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 50 50\\\" width=\\\"0.75em\\\" height=\\\"0.75em\\\" overflow=\\\"visible\\\" stroke=\\\"currentColor\\\" stroke-width=\\\"2\\\" >\\n   <line x1=\\\"0\\\" y1=\\\"0\\\" x2=\\\"50\\\" y2=\\\"50\\\" />\\n   <line x1=\\\"50\\\" y1=\\\"0\\\" x2=\\\"0\\\" y2=\\\"50\\\" />\\n</svg>\"","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","<script lang=\"ts\">\n  import closeImg from '@/assets/img/close.svg?raw';\n  import { portal } from '../Portal/Portal.svelte';\n  interface Props {\n    title?: string;\n    dom?: HTMLElement;\n  }\n\n  let { title, dom }: Props = $props();\n\n  let show = $state(false);\n  let close = $state(false);\n\n  const handleClose = () => {\n    show = false;\n    close = true;\n    setTimeout(() => {\n      close = false;\n    }, 300);\n  };\n\n  let root: HTMLDivElement;\n  export const open = () => {\n    show = true;\n    const targetElement = root.querySelector('.content')!;\n    if (dom) {\n      targetElement.innerHTML = '';\n      targetElement.appendChild(dom);\n    }\n  };\n</script>\n\n<div\n  id=\"modal-wrapper\"\n  class:active={show}\n  bind:this={root}\n>\n  <div class=\"modal__mask\" class:active={show} onclick={handleClose}></div>\n  <div class=\"modal__content\" class:active={show} class:closing={close}>\n    <div class=\"modal__content-header\">\n      <span class=\"title\">{title}</span>\n      <div class=\"close\" onclick={handleClose}>\n        {@html closeImg}\n      </div>\n    </div>\n    <div class=\"content\"></div>\n    <div class=\"footer\">\n      <button class=\"btn cancel\" onclick={handleClose}>cancel</button>\n      <button class=\"btn confirm\" onclick={handleClose}>confirm</button>\n    </div>\n  </div>\n</div>\n\n<style lang=\"less\">\n  @import './Modal.less';\n</style>\n","<script lang=\"ts\">\n  import circleCloseImg from '@/assets/img/circleClose.svg';\n  import svelteImg from '@/assets/svelte.svg';\n  import { type TWindow, type WhaleParams } from '../interface';\n  import { movable } from '@svelte-put/movable';\n  import Modal from '../Modal/Modal.svelte';\n\n  interface Props {\n    mainLogo: string;\n  }\n\n  let { mainLogo }: Props = $props();\n\n  const configList = (window as TWindow).config;\n\n  let selectMenu = $state<WhaleParams>();\n  let modalRef: Modal;\n  let whaleRef: HTMLElement;\n  let handle: HTMLElement | undefined = $state();\n  const openModal = (data: WhaleParams) => {\n    selectMenu = data;\n    modalRef.open();\n  };\n</script>\n\n<div\n  id=\"whale\"\n  use:movable={{\n    handle,\n    limit: { delta: { x: 0 }, parent: 'screen' },\n    cursor: false,\n  }}\n  bind:this={whaleRef}\n  onmouseleave={() => whaleRef.classList.remove('hover')}\n>\n  <!-- <div class=\"menu-close animate\">\n    <img src={circleCloseImg} alt=\"closeMenu\" />\n  </div> -->\n\n  <div\n    class=\"menu\"\n    bind:this={handle}\n    bind:this={whaleRef}\n    onmouseenter={() => whaleRef.classList.add('hover')}\n  >\n    <div class=\"menu-logo animate\">\n      <img src={mainLogo} draggable=\"false\" alt=\"brand\" />\n    </div>\n  </div>\n\n  <div class=\"sub-menu animate\">\n    {#each Array.from(configList?.entries() || []) as [key, value]}\n      <div\n        class=\"feat\"\n        data-tool-name={value.name}\n        onclick={() => openModal(value)}\n      >\n        <span class=\"feat__logo\" data-tool-name={value.name}>\n          <img\n            data-tool-name={value.name}\n            src={value.logo}\n            alt=\"logo\"\n            draggable=\"false\"\n          />\n        </span>\n        <div class=\"feat__tooltip\">\n          <div class=\"feat__tooltip-name\">{value.name || ''}</div>\n          <div class=\"feat__tooltip-desc\">{value.desc || ''}</div>\n        </div>\n      </div>\n    {/each}\n  </div>\n\n  <Modal bind:this={modalRef} title={selectMenu?.title} dom={selectMenu?.dom} />\n</div>\n\n<style lang=\"less\">\n  @import './Menu.less';\n</style>\n","<script lang=\"ts\">\n  import type { TWindow, WhaleParams } from './interface';\n  import Menu from './Menu/Menu.svelte';\n\n  interface Props {\n    options: WhaleParams;\n    globalConfig: {\n      mainLogo: string;\n    };\n  }\n\n  let { options, globalConfig }: Props = $props();\n\n  const tWindow: TWindow = window;\n\n  if (!tWindow.config) {\n    tWindow.config = new Map();\n  }\n  tWindow.config.set(options.name, options);\n</script>\n\n<Menu mainLogo={globalConfig.mainLogo}></Menu>\n","import App from './index.svelte';\nimport type { WhaleParams } from './interface';\nimport { mount } from 'svelte';\n\nclass Entry {\n  private containerID = 'whale-container';\n  private static globalConfig: Record<'mainLogo', any>;\n\n  constructor(args: WhaleParams) {\n    this.init(args);\n  }\n\n  static config(config: Record<'mainLogo', string>) {\n    Entry.globalConfig = config;\n  }\n\n  private init(args: WhaleParams) {\n    const outLayer = document.getElementById(this.containerID);\n    if (outLayer) {\n      outLayer.remove();\n    }\n    const container = document.createElement('div');\n    container.id = this.containerID;\n    const shadowRoot = container.attachShadow({ mode: 'open' });\n    document.documentElement.appendChild(container);\n\n    mount(App, {\n      target: shadowRoot,\n      props: {\n        options: { ...args },\n        globalConfig: Entry.globalConfig,\n      },\n    });\n  }\n}\n\n\nexport const createWhale = (args: WhaleParams) => {\n  new Entry(args);\n  return Whale;\n};\n\nexport const config = (config: Record<'mainLogo', string>) => {\n  Entry.config(config);\n  return Whale;\n};\n\nconst Whale = {\n  createWhale,\n  config,\n}\n"],"names":["PUBLIC_VERSION","EACH_ITEM_REACTIVE","EACH_INDEX_REACTIVE","EACH_ITEM_IMMUTABLE","TEMPLATE_USE_IMPORT_NODE","UNINITIALIZED","DEV","DERIVED","EFFECT","RENDER_EFFECT","BLOCK_EFFECT","BRANCH_EFFECT","ROOT_EFFECT","BOUNDARY_EFFECT","UNOWNED","DISCONNECTED","CLEAN","DIRTY","MAYBE_DIRTY","INERT","DESTROYED","EFFECT_RAN","EFFECT_TRANSPARENT","HEAD_EFFECT","EFFECT_HAS_DERIVED","STATE_SYMBOL","LOADING_ATTR_SYMBOL","is_array","index_of","array_from","define_property","get_descriptor","get_descriptors","object_prototype","array_prototype","get_prototype_of","run_all","arr","i","is_micro_task_queued","current_queued_micro_tasks","process_micro_tasks","tasks","queue_micro_task","fn","flush_tasks","equals","value","safe_not_equal","a","b","safe_equals","effect_update_depth_exceeded","state_descriptors_fixed","state_prototype_fixed","state_unsafe_local_read","state_unsafe_mutation","legacy_mode_flag","tracing_mode_flag","enable_legacy_mode_flag","source","v","stack","signal","state","push_derived_source","mutable_source","initial_value","immutable","s","component_context","_b","_a","active_reaction","untracking","derived_sources","set_derived_sources","set","is_runes","e.state_unsafe_mutation","internal_set","increment_write_version","mark_reactions","active_effect","untracked_writes","set_untracked_writes","status","reactions","runes","length","reaction","flags","set_signal_status","schedule_effect","derived","parent_derived","derived_safe_equal","destroy_derived_effects","effects","destroy_effect","get_derived_parent_effect","parent","execute_derived","prev_active_effect","set_active_effect","update_reaction","update_derived","skip_reaction","FLUSH_MICROTASK","FLUSH_SYNC","is_throwing_error","scheduler_mode","last_scheduled_effect","is_flushing_effect","set_is_flushing_effect","queued_root_effects","flush_count","dev_effect_stack","set_active_reaction","effect","sources","new_deps","skipped_deps","write_version","read_version","check_dirtiness","dependencies","is_unowned","dependency","is_disconnected","is_unowned_connected","propagate_error","error","current","e","should_rethrow_error","handle_error","previous_effect","schedule_possible_effect_self_invalidation","depth","previous_deps","previous_skipped_deps","previous_untracked_writes","previous_reaction","previous_skip_reaction","prev_derived_sources","previous_component_context","previous_untracking","set_component_context","result","deps","remove_reactions","remove_reaction","index","new_length","start_index","update_effect","destroy_block_effect_children","destroy_effect_children","execute_effect_teardown","teardown","dep","infinite_loop_guard","e.effect_update_depth_exceeded","flush_queued_root_effects","root_effects","previously_flushing_effect","collected_effects","process_effects","flush_queued_effects","unlink_effect","process_deferred","previous_queued_root_effects","current_effect","main_loop","is_branch","is_skippable_branch","sibling","previous_active_reaction","child","parent_sibling","flush_sync","previous_scheduler_mode","tick","__async","get","is_derived","e.state_unsafe_local_read","untrack","STATUS_MASK","deep_read_state","deep_read","key","prop","visited","proto","descriptors","hydrating","proxy","prev","prototype","is_proxied_array","version","metadata","_","descriptor","e.state_descriptors_fixed","target","ls","n","update_version","receiver","exists","has","other_s","own_keys","e.state_prototype_fixed","d","$window","first_child_getter","next_sibling_getter","init_operations","element_prototype","node_prototype","create_text","get_first_child","node","get_next_sibling","is_text","count","next_sibling","clear_text_content","push_effect","parent_effect","parent_last","create_effect","type","sync","push","is_root","inert","component_root","options","fulfil","pause_effect","render_effect","template_effect","thunks","deriveds","block","branch","remove_dom","next","removed","end","transitions","transition","callback","pause_children","run_out_transitions","remaining","check","local","transparent","resume_effect","resume_children","context","props","pop","component","context_stack_item","component_effects","component_effect","PASSIVE_EVENTS","is_passive_event","name","without_reactive_context","all_registered_events","root_event_handles","create_event","event_name","dom","handler","target_handler","event","handle_event_propagation","on","element","capture","passive","delegate","events","handler_element","owner_document","path","current_target","path_idx","handled_at","at_idx","handler_idx","throw_error","other_errors","parent_element","delegated","data","create_fragment_from_html","html","elem","assign_nodes","start","template","content","use_import_node","has_start","clone","append","anchor","set_text","text","str","mount","_mount","document_listeners","Component","intro","registered_events","event_handle","unmount","anchor_node","ctx","mounted_components","pause_effects","items","controlled_anchor","items_map","is_controlled","parent_node","link","item","each","get_collection","get_key","render_fn","fallback_fn","fallback","was_empty","each_array","collection","array","reconcile","first","seen","matched","stashed","child_anchor","create_item","update_item","j","move","to_destroy","destroy_length","reactive","mutable","dest","next_node","get_value","svg","mathml","skip_warning","append_styles","css","root","style","action","payload","inited","set_attribute","attribute","attributes","get_setters","setters_cache","setters","element_proto","toggle_class","class_name","is_bound_this","bound_value","element_or_component","bind_this","update","get_parts","old_parts","parts","movable","param","normalizedDelta","handle","enabled","ignore","cursor","input","lastMousePosition","lastNodePosition","ΣΔx","ΣΔy","getIgnoredElements","updateLastMousePosition","updateLastNodePosition","top","left","nodeBoundingRect","boundX","boundY","Δx","Δy","insideBoundingRect","rBoundX","newAbsLeft","newAbsRight","rBoundY","newAbsTop","newAbsBottom","newΣΔx","newΣΔy","offPointerEvents","off","detail","computedStyles","regex","_d","_c","position","addStyles","ignoredElements","removeStyles","offPointerDownEvent","normalizeDelta","delta","x","y","extractUnit","axis","unit","_e","_f","closeImg","handleClose","show","close","$.set","open","targetElement","$$props","$.bind_this","div","$$value","on_click","openModal","configList","selectMenu","$.state","modalRef","whaleRef","div_1","$.each","div_3","$.index","$$anchor","$$item","$.get","$.set_attribute","div_4","span","img_1","expression","$.derived","expression_1","$.event","tWindow","_Entry","args","__publicField","config","outLayer","container","shadowRoot","App","__spreadValues","Entry","createWhale","Whale"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33]}